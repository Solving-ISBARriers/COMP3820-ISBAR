{"version":3,"sources":["Launcher.js","IsbarFhirClient.js","app-simple/SimplePDF.js","app-simple/IsbarSimpleApp.js","app-complex/Assessment.js","app-complex/Background.js","app-complex/Introduction.js","app-complex/Recommendation.js","app-complex/Situation.js","app-complex/Patient.js","app-complex/IsbarComplexApp.js","app-complex/IsbarContentField.js","app-complex/IsbarComplexDevelopment.js","common/DisplayHelper.js","SimpleHistory.js","Home.js","App.js","index.js"],"names":["Launcher","SMART","authorize","clientId","scope","redirectUri","iss","completeInTarget","className","React","Component","IsbarClientContext","createContext","IsbarClientProvider","props","state","client","error","simpleForms","complexForms","ready","then","setState","Provider","value","this","Consumer","console","log","stack","children","styles","StyleSheet","create","page","backgroundColor","margin","padding","section","heading","fontSize","SimplePDF","content","item","forEach","element","index","answer","valueString","size","style","IsbarSimpleApp","loaded","isIsobar","saved","updateResponse","bind","createSimpleIsbar","catch","context","user","read","event","response","hasOwnProperty","target","questionnaireID","patientID","patient","id","sourceID","resourceType","text","name","questionnaire","status","subject","reference","author","extension","url","valueReference","linkId","onClick","goBack","type","checked","onChange","prevState","TextField","fullWidth","multiline","placeholder","getFieldValue","e","document","fileName","blob","loading","contextType","Assessment","Background","Introduction","Recommendation","class","rows","AirwaySelect","useState","options","setAirway","Box","sx","minWidth","FormControl","InputLabel","Select","labelId","label","MenuItem","Situation","responseExist","questionnaireResponse","saveState","formState","PatientName","entry","find","nameRecord","use","given","join","family","PatientBanner","gender","birthDate","address","city","Patient","_loader","message","IsbarComplexApp","IsbarContentField","current","carePlan","LoadCarePlan","res","request","getSimpleName","prefix","SimpleHistory","fields","field","headerName","width","entries","data","updateTable","newContent","total","resource","lastUpdated","recipient","meta","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getDateTimeString","push","forceUpdate","height","columns","pageSize","rowsPerPageOptions","checkboxSelection","Home","AppController","isMenu","isSimple","simpleResponses","createNew","loadSimple","loadQuestionnaireID","loadSimpleIsbars","Promise","all","isbarQuestionnaire","result","resolveReferences","Typography","textAlign","Stack","spacing","Accordion","defaultExpanded","AccordionSummary","expandIcon","flexShrink","Button","AccordionDetails","backToMenu","App","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6fe38aa3.chunk.js","sourcesContent":["// Launcher file for the app. \r\nimport React from \"react\";\r\nimport { oauth2 as SMART } from \"fhirclient\";\r\n\r\n/**\r\n * Typically the launch page is an empty page with a `SMART.authorize`\r\n * call in it. This isbased on the example code from:\r\n * https://codesandbox.io/s/fhir-client-react-react-router-context-0q3n8?file=/src/components/Launcher.js\r\n * \r\n *\r\n */\r\nexport default class Launcher extends React.Component {\r\n    \r\n    /**\r\n     * This is configured to make a Standalone Launch, just in case it\r\n     * is loaded directly. An EHR can still launch it by passing `iss`\r\n     * and `launch` url parameters\r\n     */\r\n    componentDidMount() {\r\n        \r\n        SMART.authorize({\r\n            clientId: \"my-client-id\",\r\n            scope: \"launch openid fhirUser patient/*.read patient/*.write\",\r\n            redirectUri: \"./isbar-app\",\r\n            iss:\r\n                \"https://launch.smarthealthit.org/v/r3/sim/\" +\r\n                \"eyJoIjoiMSIsImIiOiJmMDQ2MjkzNi1lYjRiLTRkYT\" +\r\n                \"EtYjQ1YS1mYmQ5NmViZjhjY2IiLCJlIjoic21hcnQt\" +\r\n                \"UHJhY3RpdGlvbmVyLTcxNjE0NTAyIn0/fhir\",\r\n            // Redirect to main screen.\r\n            \r\n            completeInTarget: true\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                Launching the ISBAR handover form..\r\n            </div>\r\n            )\r\n    }\r\n}","// This is the file to deal with fhir client\r\n// Client context is created and updated.\r\n\r\nimport React from \"react\";\r\nimport { client, oauth2 as SMART } from \"fhirclient\";\r\n\r\n// React client context so it is accessible in differernt parts of code.\r\n// by exporting, it should be accessible from various part of the code.\r\nexport const IsbarClientContext = React.createContext({});\r\n\r\nexport class IsbarClientProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            client: null, // client object\r\n            error: null, // error message\r\n            simpleForms: null, // simple isbar forms (questionnaireResponses)\r\n            complexForms: null // complex isbar forms ()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Wait until the SMART client is ready, then save the client object as its state.\r\n        SMART.ready().then(\r\n            (client) => this.setState({ client }),\r\n            (error) => this.setState({ error })\r\n        )\r\n        // Load the relevant resources\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // When the client is not loaded, it displays authorizing message.\r\n            // Once the client is loaded, display the child components.\r\n            <IsbarClientContext.Provider value={this.state || {}}>\r\n                <IsbarClientContext.Consumer>\r\n                    {({ client, error }) => {\r\n                        console.log(\"Client\");\r\n                        console.log(client);\r\n                        // any error that SMART.ready() may have been rejected with\r\n                        if (error) {\r\n                            return <pre>{error.stack}</pre>;\r\n                        }\r\n\r\n                        // if client is already available render the subtree (patient and input in this case.)\r\n                        if (client) {\r\n\r\n                            return this.props.children;\r\n                        }\r\n                        // client is undefined until SMART.ready() is fulfilled. show loading message\r\n                        return (\r\n                            <div className=\"loading-container\">\r\n                                Launching the ISBAR handover form..\r\n                            </div>\r\n                        )\r\n                    }}\r\n                </IsbarClientContext.Consumer>\r\n            </IsbarClientContext.Provider>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Document, Page, View, Text, StyleSheet, Font } from '@react-pdf/renderer';\r\n\r\n// have to include them as a local file. probs.\r\n// Font.register({\r\n//     family: 'OpenSans',\r\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\r\n\r\n//     fontStyle: 'normal',\r\n//     fontWeight: 'normal'\r\n// });\r\n\r\n// Font.register({\r\n//     family: 'Oswald',\r\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\r\n// })\r\n\r\n// This is the pdf file that will be generated\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        // fontFamily: 'OpenSans',\r\n        backgroundColor: '#FFFFFF',\r\n        margin: 10,\r\n        padding: 20,\r\n    },\r\n    section: {\r\n        margin: 15\r\n    },\r\n    heading: {\r\n        fontSize: '16pt',\r\n    }\r\n});\r\nexport const SimplePDF = (props) => {\r\n\r\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\r\n    props.content.item.forEach((element, index) => {\r\n        if (typeof element.answer !== 'undefined') {\r\n\r\n            content[index] = element.answer[0].valueString\r\n        }\r\n    });\r\n    return (\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>I: Introduction</Text>\r\n                    <Text>{content[0]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>S: Situation</Text>\r\n                    <Text>{content[1]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>B: Background</Text>\r\n                    <Text>{content[2]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>A: Assessment</Text>\r\n                    <Text>{content[3]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>R: Recommendation</Text>\r\n                    <Text>{content[4]}</Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\nexport const IsobarDoc = (props) => {\r\n\r\n}\r\n\r\n","import React from \"react\";\r\n// import TextInputField from \"./TextInputField\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\n// import { isbarQuestionnaire, newQuestionnaireResponse } from \"./QuestionnaireTemplates\";\r\nimport { SimplePDF } from \"./SimplePDF\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport TextField from '@mui/material/TextField'\r\nimport { client } from \"fhirclient\";\r\n\r\n\r\n// Class for the input field group.\r\nexport class IsbarSimpleApp extends React.Component {\r\n\r\n  // the this.context.client is the client object!!!\r\n  static contextType = IsbarClientContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n      loaded: false,\r\n      // questionnaire response object\r\n      content: null,\r\n      // turns true if it's isobar\r\n      isIsobar: false,\r\n      // indicates saved state\r\n      saved: false,\r\n    };\r\n\r\n    this.updateResponse = this.updateResponse.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.create)\r\n    if(this.props.create){\r\n      // create new resource and store that \r\n      this.createSimpleIsbar().then(console.log).catch(console.error)\r\n    } else{\r\n      // note we are not directly modifying the file in parent.\r\n      // parent will fetch the updated version via database query\r\n      this.setState({content: this.props.content})\r\n    }\r\n    this.context.client.user.read().then(console.log)\r\n    \r\n  }\r\n\r\n  // // check if the given resource is QuestionnaireResponse for isbar\r\n  // // still need some check to see if it is actually for isbar\r\n  // checkExistingResponse(resource) {\r\n  //   if (\r\n  //     resource.source.reference ===\r\n  //     \"Patient/\" + this.context.client.patient.id &&\r\n  //     resource.questionnaire === \"Questionnaire/\" + this.state.questionnaire.id\r\n  //   ) {\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n  // function to send update request\r\n  updateResponse() {\r\n    console.log(\r\n      \"Updated response: \" + JSON.stringify(this.state.content)\r\n    );\r\n    this.context.client\r\n      .update(this.state.content)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ saved: \"saved\" })\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n\r\n  // this is the function for changing value\r\n  // changes answer string in the questionnaireresponse object with given index\r\n  // updates questionnaireresponse state\r\n  // TODO: make it smooth\r\n  updateResponse(event, index) {\r\n    var response = this.state.content;\r\n\r\n    if (response.item[index].hasOwnProperty(\"answer\")) {\r\n      response.item[index].answer[0].valueString = event.target.value;\r\n    } else {\r\n      response.item[index].answer = [\r\n        {\r\n          valueString: event.target.value,\r\n        },\r\n      ];\r\n    }\r\n    this.setState({ content: response });\r\n    // change the saved state\r\n    if (this.state.saved === \"saved\") {\r\n      this.setState({ saved: \"edited\" })\r\n    }\r\n  }\r\n  \r\n  getFieldValue(index){\r\n    return this.state.content.item[index].hasOwnProperty('answer')\r\n    ? this.state.content.item[index].answer[0].valueString\r\n    : \"\"\r\n  }\r\n\r\n  createSimpleIsbar(){\r\n    return this.context.client.create(newQuestionnaireResponse(\r\n      this.props.questionnaireID,\r\n      this.context.client.patient.id,\r\n      this.context.client.user.id\r\n    )).catch(console.error)\r\n  }\r\n\r\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\r\n  render() {\r\n    // questionnaire response object\r\n\r\n    if (this.state.loaded) {\r\n      return (\r\n\r\n        <div className=\"container\">\r\n          <div id=\"simple-header\">\r\n            <button id=\"go-back-button\" onClick={this.props.goBack}> Back to Menu </button>\r\n            <h1>ISBAR</h1>\r\n            <div id=\"simple-header-content\">\r\n              <p className=\"simple-state\">\r\n                State:\r\n                {this.state.saved}\r\n              </p>\r\n              <label className=\"simple-toggle\">\r\n                Is ISOBAR:\r\n                <input\r\n                  name=\"isISOBAR\"\r\n                  type=\"checkbox\"\r\n                  checked={this.state.isIsobar}\r\n                  onChange={() => this.setState(prevState => ({ isIsobar: !prevState.isIsobar }))}\r\n                />\r\n              </label>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Introduction\"\r\n          value={this.getFieldValue(0)}\r\n          onChange={(e) => this.updateResponse(e, 0)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Situation\"\r\n          value={this.getFieldValue(1)}\r\n          onChange={(e) => this.updateResponse(e, 1)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Observation\"\r\n          value={this.getFieldValue(2)}\r\n          onChange={(e) => this.updateResponse(e, 2)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Background\"\r\n          value={this.getFieldValue(3)}\r\n          onChange={(e) => this.updateResponse(e, 3)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Assessment\"\r\n          value={this.getFieldValue(4)}\r\n          onChange={(e) => this.updateResponse(e, 4)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Recommendation\"\r\n          value={this.getFieldValue(5)}\r\n          onChange={(e) => this.updateResponse(e, 5)}\r\n          />\r\n          \r\n          <button\r\n            className=\"isbar-save\"\r\n            onClick={() => this.updateResponse()}\r\n          >\r\n            Save\r\n          </button>\r\n\r\n          <button className=\"isbar-save\">\r\n            <PDFDownloadLink\r\n              document={\r\n                <SimplePDF content={this.state.content} />\r\n              }\r\n              fileName=\"isbar.pdf\"\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                loading ? \"Preparing\" : \"Print\"\r\n              }\r\n            </PDFDownloadLink>\r\n          </button>\r\n        </div>\r\n\r\n      )\r\n    } else {\r\n      return (\r\n\r\n        <div className=\"loading-container\">\r\n          Loading simple ISBAR form...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n// function that returns a new response\r\n// sourceID: ID of practitioner writing this form\r\n// targetID: ID of practitioner receiving this form\r\nfunction newQuestionnaireResponse(questionnaireID, patientID, sourceID) {\r\n  // questionnaire response resource\r\n  //const date = new Date()\r\n  // const lastModified = new Date().toJSON()\r\n  // console.log(lastModified)\r\n  \r\n  var qResponse = {\r\n    resourceType: \"QuestionnaireResponse\",\r\n    text: { name: \"isbar handover form\" },\r\n    // maybe later when we sort out the thingy\r\n    // Reference the questionnaire\r\n    // date this form was last modified\r\n    // authored: lastModified,\r\n    questionnaire: \"Questionnaire/\" + questionnaireID,\r\n    status: \"in-progress\",\r\n    subject: {\r\n      reference: \"Patient/\" + patientID\r\n    },\r\n    author: {\r\n      // refer to current practitioner\r\n      reference: \"Practitioner/\" + sourceID,\r\n    },\r\n    // extension not used because resolving reference requires extra effort. \r\n    // Instead, author section is used.\r\n    extension: [{\r\n      url:\"http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer\",\r\n      valueReference:{\r\n        reference: \"Practitioner/\" + sourceID\r\n      }\r\n    }],\r\n    item: [\r\n      {\r\n        linkId: \"1\",\r\n        text: \"I:Identify\",\r\n      },\r\n      {\r\n        linkId: \"2\",\r\n        text: \"S:Situation\",\r\n      },\r\n      {\r\n        linkId: \"3\",\r\n        text: \"O:Observation\",\r\n      },\r\n      {\r\n        linkId: \"4\",\r\n        text: \"B:Background\",\r\n      },\r\n      {\r\n        linkId: \"5\",\r\n        text: \"A:Assessment\",\r\n      },\r\n      {\r\n        linkId: \"6\",\r\n        text: \"R:Recommendation\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return qResponse;\r\n}","import React from \"react\";\r\n\r\nexport class Assessment extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Assessment</div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class Background extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Background</div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class Introduction extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Introduction is changed</div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport class Recommendation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container  mx-auto px-10 sm:px-8 max-w-7xl py-10\">\r\n                <sl-form>\r\n                    <sl-textarea rows={4}>\r\n                    </sl-textarea>\r\n                </sl-form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport function AirwaySelect() {\r\n  const [options, setAirway] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setAirway(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"airwaySelect\">Airway</InputLabel>\r\n        <Select\r\n          labelId=\"Airway\"\r\n          id=\"airwaySelect\"\r\n          value={options}\r\n          label=\"Options\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Patent</MenuItem>\r\n          <MenuItem value={20}>Compromised</MenuItem>\r\n          <MenuItem value={30}>Ventilated</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport class Situation extends React.Component {\r\n  static contextType = IsbarClientContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // used true if data is loaded\r\n      loaded: false,\r\n      error: null,\r\n      // true if questionnaireResponse exists\r\n      responseExist: false,\r\n      patient: null,\r\n      // questionnaire object that will be stored or created\r\n      questionnaire: null,\r\n      // questionnaire response object\r\n      questionnaireResponse: null,\r\n      // turns true if it's isobar\r\n      isIsobar: false,\r\n      // indicates saved state\r\n      saveState: \"edited\",\r\n      // type of current form\r\n      formState: \"ISOBAR\",\r\n      // would be good if we have a array of question-answer pair.\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // load client from the client context\r\n    const client = this.context.client;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container  mx-auto px-10 sm:px-8 max-w-7xl py-10\">\r\n        <h1>Situation</h1>\r\n        <h3>Patient Status</h3>\r\n        <TextField fullWidth multiline placeholder=\"Patient Status\" />\r\n\r\n        <h3>Principle Diagnosis</h3>\r\n        <TextField fullWidth multiline placeholder=\"Principle Diagnosis\" />\r\n\r\n        <h3>Other Diagnosis/problems</h3>\r\n        <TextField fullWidth multiline placeholder=\"Other Diagnosis/problems\" />\r\n\r\n        <h3>Reason For transfer</h3>\r\n        <TextField fullWidth multiline placeholder=\"Reason For transfer\" />\r\n\r\n        <h3>Observations</h3>\r\n        <AirwaySelect />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\n\r\nfunction PatientName({ name = [] }) {\r\n  let entry =\r\n    name.find((nameRecord) => nameRecord.use === \"official\") || name[0];\r\n  if (!entry) {\r\n    return <h1>No Name</h1>;\r\n  }\r\n  return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\r\n}\r\n\r\nfunction PatientBanner(patient) {\r\n  console.log(patient);\r\n  return (\r\n    <div>\r\n      <PatientName name={patient.name} />\r\n      <span>\r\n        Gender: <b>{patient.gender}</b>{\" \"}\r\n      </span>\r\n      <span>\r\n        DOB: <b>{patient.birthDate}</b>\r\n      </span>\r\n      <span>\r\n        DOB: <b>{patient.address[0].city}</b>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class Patient extends React.Component {\r\n  static contextType = IsbarClientContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      patient: null,\r\n      error: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const client = this.context.client;\r\n    this._loader = client.patient\r\n      .read()\r\n      .then((patient) => {\r\n        this.setState({ patient, loading: false, error: null });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error, loading: false });\r\n      });\r\n  }\r\n  render() {\r\n    const { error, loading, patient } = this.state;\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    if (error) {\r\n      return error.message;\r\n    }\r\n    return <PatientBanner {...patient} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Assessment } from \"./Assessment\";\r\nimport { Background } from \"./Background\";\r\nimport { Introduction } from \"./Introduction\";\r\nimport { Recommendation } from \"./Recommendation\";\r\nimport { Situation } from \"./Situation\";\r\nimport Patient from \"./Patient\";\r\n\r\nexport class IsbarComplexApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Patient />\r\n        <Introduction />\r\n        <Situation />\r\n        <Background />\r\n        <Assessment />\r\n        <Recommendation />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Assessment } from \"./Assessment\";\r\nimport { Background } from \"./Background\";\r\nimport { Introduction } from \"./Introduction\";\r\nimport { Recommendation } from \"./Recommendation\";\r\nimport { Situation } from \"./Situation\";\r\n\r\nexport class IsbarContentField extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n\r\n        switch (this.props.current) {\r\n            case \"I\":\r\n                return <Introduction />\r\n            case \"S\":\r\n                return <Situation />\r\n            case \"B\":\r\n                return <Background />\r\n            case \"A\":\r\n                return <Assessment />\r\n            case \"R\":\r\n                return <Recommendation />\r\n            default: \r\n                // fail safe\r\n                return <Introduction />\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { IsbarContentField } from \"./IsbarContentField\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport { client } from \"fhirclient\";\r\n\r\nexport class IsbarComplexDevelopment extends React.Component {\r\n    \r\n    // client context\r\n    static contextType = IsbarClientContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            // state for the app display\r\n            current: \"I\",\r\n            loaded: false,\r\n            carePlan: null\r\n            // initialise careplan resource?\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        const client = this.context.client;\r\n        // search for the careplan related to this patient\r\n        this.LoadCarePlan()\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.setState({loaded: true})\r\n        })\r\n        // load the careplan\r\n    }\r\n\r\n    LoadCarePlan(){\r\n        return this.context.client.request(\"CarePlan?patient=\" + this.context.client.patient.id)\r\n        .then( res => {\r\n            // filter careplan\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loaded){\r\n\r\n            return (\r\n            \r\n                <div className=\"app-complex\">\r\n                    <div className=\"app-content\">\r\n                        <IsbarContentField current={this.state.current} />\r\n                    </div>\r\n    \r\n                    <div className=\"footer\">\r\n                        <div className=\"arrow\">&larr;</div>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"I\" })}>I</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"S\" })}>S</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"B\" })}>B</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"A\" })}>A</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"R\" })}>R</button>\r\n                        <div className=\"arrow\">&rarr;</div>\r\n                    </div>\r\n    \r\n                </div>\r\n                \r\n            )\r\n        } else{\r\n            return(\r\n            <div>\r\n                Loading complex isbar form...\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n","\r\n// get the simplified verison (first prefix, given and family name)\r\n// of the humanName fhir resource\r\nexport function getSimpleName(name){\r\n    if(!name.prefix[0]){\r\n        return name.given[0] + \" \" + name.family\r\n    }\r\n    return name.prefix[0] + \" \" + name.given[0] + \" \" + name.family\r\n}\r\n\r\n// takes in the time string that can be interpreted by date of js \r\n// returns time in format of YYYY-MM-DD HH:MM\r\nexport function getDateTimeString(time){\r\n    const date = new Date(time)\r\n    return date.getFullYear() + \"-\"\r\n        + date.getMonth() + \"-\"\r\n        + date.getDate() + \" \"\r\n        + date.getHours() + \":\"\r\n        + date.getMinutes()\r\n}","import React from \"react\";\r\nimport { TableBody, TableContainer, Table, TableHead, TableCell, TableRow, Paper } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport { getSimpleName, getDateTimeString } from \"./common/DisplayHelper\";\r\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\r\n\r\n// this displays the list of previous simple isbar entries\r\n// takes in the bundle from response\r\n// displays previous entries in data table of mui\r\nexport class SimpleHistory extends React.Component {\r\n\r\n    static contextType = IsbarClientContext;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fields: [\r\n                { field: 'lastUpdated', headerName: 'Last Updated', width: 200 },\r\n                { field: 'author', headerName: 'Author', width: 140 },\r\n                { field: 'id', headerName: 'ID', width: 210 },\r\n                { field: 'recipient', headerName: 'Recipient', width: 140 },\r\n                { field: 'action', headerName: 'Action', width: 70 },\r\n            ],\r\n            entries: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // load all the data from prop\r\n        console.log(\"history\")\r\n        console.log(this.props.data)\r\n        if (this.props.data) {\r\n            this.updateTable()\r\n        }\r\n        else {\r\n            console.error(\"No data given to history!! did the request fail?\")\r\n        }\r\n    }\r\n\r\n    // manually resolve the recipient..\r\n    updateTable() {\r\n        const newContent = []\r\n        // console.log(this.props.data)\r\n        if (this.props.data.total != 0) {\r\n\r\n            this.props.data.entry.forEach((element) => {\r\n                // element is each resource in the bundle\r\n                // console.log(element)\r\n                const resource = element.resource\r\n                // default content for the fields.\r\n                // Also displayed while resolving promises\r\n                const entry = {\r\n                    lastUpdated: 'Loading',\r\n                    id: 'Loading',\r\n                    author: 'Loading',\r\n                    recipient: 'Loading'\r\n                }\r\n                // set new content??\r\n                if (resource.meta.hasOwnProperty('lastUpdated')) {\r\n                    entry.lastUpdated = getDateTimeString(resource.meta.lastUpdated)\r\n                }\r\n                if (resource.hasOwnProperty('id')) {\r\n                    entry.id = resource.id\r\n                }\r\n                if (resource.hasOwnProperty('author')) {\r\n                    entry.author = getSimpleName(resource.author.name[0])\r\n                }\r\n                newContent.push(entry)\r\n            });\r\n\r\n            // resolve the recipients of each.\r\n            // This function was positioned after initialisation of array to enable access\r\n            this.props.data.entry.forEach((element, index) => {\r\n                const resource = element.resource\r\n                if (resource.hasOwnProperty('extension')) {\r\n                    this.context.client.request(resource.extension[0].valueReference.reference)\r\n                        .then((res) => {\r\n                            console.log(newContent[index])\r\n                            newContent[index].recipient = getSimpleName(res.name[0])\r\n                            // force component update\r\n                            this.forceUpdate()\r\n                        })\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"no existing entry\")\r\n        }\r\n        this.setState({ entries: newContent })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.entries)\r\n        if (this.state.entries != null) {\r\n\r\n            return (\r\n                <div style={{ height: 400, width: '100%' }}>\r\n\r\n                    <DataGrid\r\n                        rows={this.state.entries}\r\n                        columns={this.state.fields}\r\n                        pageSize={5}\r\n                        rowsPerPageOptions={[5]}\r\n                        checkboxSelection\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    Loading data..\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n","// Main class for the main screen. Contains everything.\r\nimport React from \"react\";\r\nimport { IsbarClientProvider } from \"./IsbarFhirClient\";\r\nimport { IsbarSimpleApp } from \"./app-simple/IsbarSimpleApp\";\r\nimport { IsbarComplexApp } from \"./app-complex/IsbarComplexApp\";\r\nimport { IsbarComplexDevelopment } from \"./app-complex/IsbarComplexDevelopment\";\r\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\r\nimport { Stack, Box, Container, Accordion, AccordionSummary, Typography, Button, AccordionDetails } from '@mui/material'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { SimpleHistory } from \"./SimpleHistory\";\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <IsbarClientProvider>\r\n                <AppController />\r\n            </IsbarClientProvider>\r\n        )\r\n    }\r\n}\r\n\r\n// this component loads and displays the questionnaireResponse\r\nclass AppController extends React.Component {\r\n\r\n    // include client \r\n    static contextType = IsbarClientContext;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loaded: false,\r\n            isMenu: true,\r\n            isSimple: true,\r\n            questionnaireID: null,\r\n            simpleResponses: null,\r\n            createNew: false,\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        // Load questionnaire and simple isbar forms for this patient\r\n        const loadSimple = this.loadQuestionnaireID()\r\n            // .then(() => this.createSimpleIsbar())\r\n            .then((res) => this.loadSimpleIsbars(res))\r\n            .then(() => this.setState({ loaded: true }))\r\n        this.context.client.request(\"Practitioner/e443ac58-8ece-4385-8d55-775c1b8f3a37\").then(console.log)\r\n        // wait till all promises resolved\r\n        Promise.all([loadSimple]).then(() => console.log(\"all loaded\"))\r\n    }\r\n\r\n    backToMenu() {\r\n\r\n        // change the statte to come back to menu\r\n        this.setState({ isMenu: true })\r\n    }\r\n\r\n    // Returns a promise that loads questionnaire ID using questionnaire template\r\n    // updates the state for questionnaire id\r\n    // the promise resolves to questionnaire id\r\n    loadQuestionnaireID() {\r\n\r\n        // make server calls \r\n        return this.context.client.request(\"Questionnaire?name=\" + isbarQuestionnaire.name)\r\n            .then((response) => {\r\n\r\n                if (response.total === 0) {\r\n                    // there are no questionnaire object - create one\r\n                    return this.context.client.create(isbarQuestionnaire);\r\n                } else {\r\n                    // return the existing questionnaire to be saved\r\n                    return response.entry[0].resource;\r\n                }\r\n            }).then((result) => {\r\n                // console.log(result.id)\r\n                // save the questionnaire ID in current component state\r\n                this.setState({ questionnaireID: result.id })\r\n                // return the questionnaire id. This allows response searching without\r\n                // having to wait for setState to be executed\r\n                return result.id\r\n            }).catch(console.error)\r\n    }\r\n\r\n    // Returns a promise for loading simple isbar forms given questionnaire id.\r\n    // The promise resolves to the bundle returned from the server\r\n    loadSimpleIsbars(questionnaireID) {\r\n\r\n        return this.context.client.request(\r\n            // currently, retrieves all responses about this patient\r\n            \"QuestionnaireResponse?questionnaire=\" + questionnaireID\r\n            + \"&patient=Patient/\" + this.context.client.patient.id,\r\n            // resolves references connected to questionnaire\r\n            { resolveReferences: [\"author\", \"extension[1].valueReference\"] }\r\n        ).then((result) => {\r\n            // console.log(result)\r\n            // console.log(questionnaireID)\r\n            this.setState({ simpleResponses: result })\r\n            // console.log(result)\r\n            return result\r\n        }).catch(console.error)\r\n    }\r\n\r\n    // What a mess! requires cleaning..\r\n    render() {\r\n\r\n        if (this.state.loaded && this.state.isMenu) {\r\n            return (\r\n                <div>\r\n                    <Box sx={{\r\n                        padding: '3%'\r\n                    }}>\r\n                        {/* Heading needs fixing */}\r\n                        <Typography sx={{\r\n                            width: '100%',\r\n                            textAlign: 'center',\r\n                            fontSize: '30px'\r\n                        }}>\r\n                            ISBAR Handover Form\r\n                        </Typography>\r\n\r\n                        {/* Stack requires positioning */}\r\n                        <Stack spacing={2}\r\n                            sx={{\r\n\r\n                            }}\r\n                        >\r\n                            <Accordion defaultExpanded={true}>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id=\"panel1bh-header\"\r\n                                >\r\n                                    <Typography sx={{ width: '70%', flexShrink: 0 }}>\r\n                                        Simple ISBAR handover forms\r\n                                    </Typography>\r\n                                    <Button\r\n                                        onClick={() => this.setState({ createNew: true, isMenu: false, isSimple: true })}\r\n                                    >\r\n                                        Create new\r\n                                    </Button>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <SimpleHistory data={this.state.simpleResponses} />\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </Stack>\r\n                    </Box>\r\n\r\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: false, isMenu: false })}>\r\n                        Complex ISBAR\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.loaded && this.state.isSimple) {\r\n\r\n            return (\r\n                <IsbarSimpleApp\r\n                    goBack={this.backToMenu.bind(this)}\r\n                    content={\"content\"} // this is the response object passed.\r\n                    create={this.state.createNew}\r\n                    questionnaireID={this.state.questionnaireID}\r\n                />\r\n            )\r\n        } else if (this.state.loaded && !this.state.isSimple) {\r\n            return (\r\n                // <IsbarComplexDevelopment />\r\n                <IsbarComplexApp />\r\n            )\r\n        } else {\r\n            return (<div>Loading</div>)\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst isbarQuestionnaire = {\r\n    \"resourceType\": \"Questionnaire\",\r\n    \"title\": \"questionnaireTitle\",\r\n    \"name\": \"isbar-simple\",\r\n    \"status\": \"active\",\r\n    // Introduction\r\n    \"item\": [{\r\n        \"linkid\": \"1\",\r\n        \"text\": \"I:Identify\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Situation\r\n    {\r\n        \"linkid\": \"2\",\r\n        \"text\": \"S:Situation\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Observation. Enable option is not included, because it could be handled by js.\r\n    {\r\n        \"linkid\": \"3\",\r\n        \"text\": \"O:Observation\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Background\r\n    {\r\n        \"linkid\": \"4\",\r\n        \"text\": \"B:Background\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // assessment\r\n    {\r\n        \"linkid\": \"5\",\r\n        \"text\": \"A:Assessment\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Recommendation\r\n    {\r\n        \"linkid\": \"6\",\r\n        \"text\": \"R:Recommendation\",\r\n        \"type\": \"text\" // free text\r\n    }]\r\n}\r\n\r\n\r\n\r\n","/*\r\n  Application file for simple ISBAR app.\r\n  Classes can be separated later on.\r\n  the react-router-dom module had to be installed with:\r\n  npm install -S react-router-dom\r\n*/\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Launcher from './Launcher';\r\nimport Home from \"./Home\"\r\nimport './App.css';\r\n\r\n/*\r\n The top application object. Responsible for:\r\n - Loading patient information\r\n - Loading questionnaire\r\n - Loading questionnaire response\r\n - Initiating the render of other components.\r\n */\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      // This runs the launcher first, which redirects to the main screen.\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/* The actual app */}\r\n          <Route path=\"/isbar-app\" component={Home} exact/>\r\n\r\n          {/* Launcher for smart app */}\r\n          <Route path=\"/\" component={Launcher} exact />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// Render the ISBAR application in index.html\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}