{"version":3,"sources":["Launcher.js","IsbarFhirClient.js","app-simple/TextInputField.js","app-simple/QuestionnaireTemplates.js","app-simple/IsbarDoc.js","app-simple/IsbarSimpleApp.js","app-complex/Assessment.js","app-complex/Background.js","app-complex/Introduction.js","app-complex/Recommendation.js","app-complex/Patient.js","app-complex/Situation.js","app-complex/IsbarComplexApp.js","app-complex/IsbarContentField.js","app-complex/IsbarComplexDevelopment.js","Home.js","App.js","index.js"],"names":["Launcher","SMART","authorize","clientId","scope","redirectUri","completeInTarget","className","React","Component","IsbarClientContext","createContext","IsbarClientProvider","props","state","client","error","ready","then","setState","Provider","value","this","Consumer","console","log","stack","children","TextInputField","handleChange","bind","item","hasOwnProperty","answer","valueString","event","target","index","render","htmlFor","formID","label","style","resize","id","name","placeholder","onChange","isbarQuestionnaire","styles","StyleSheet","create","page","backgroundColor","margin","padding","section","heading","fontSize","IsbarDoc","content","forEach","element","size","IsbarSimpleApp","loaded","responseExist","patient","questionnaire","questionnaireResponse","isIsobar","saveState","formState","context","request","response","total","entry","resource","result","qResponse","questionnaireID","patientID","some","checkExistingResponse","resourceType","text","status","source","reference","linkId","catch","JSON","stringify","update","onClick","goBack","type","checked","prevState","updateResponse","document","fileName","blob","url","loading","contextType","Assessment","Background","Introduction","Recommendation","PatientName","find","nameRecord","use","given","join","family","PatientBanner","gender","birthDate","Patient","_loader","read","message","Situation","class","path","IsbarContentField","current","IsbarComplexDevelopment","LoadCarePlan","res","Home","AppController","isMenu","isSimple","backToMenu","App","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ea8081f2.chunk.js","sourcesContent":["// Launcher file for the app. \nimport React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\n\n/**\n * Typically the launch page is an empty page with a `SMART.authorize`\n * call in it. This isbased on the example code from:\n * https://codesandbox.io/s/fhir-client-react-react-router-context-0q3n8?file=/src/components/Launcher.js\n * \n *\n */\nexport default class Launcher extends React.Component {\n    \n    /**\n     * This is configured to make a Standalone Launch, just in case it\n     * is loaded directly. An EHR can still launch it by passing `iss`\n     * and `launch` url parameters\n     */\n    componentDidMount() {\n        \n        SMART.authorize({\n            clientId: \"my-client-id\",\n            scope: \"launch openid fhirUser patient/*.read patient/*.write\",\n            redirectUri: \"./isbar-app\",\n            // Redirect to main screen.\n            \n            completeInTarget: true\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"loading-container\">\n                Launching the ISBAR handover form..\n            </div>\n            )\n    }\n}","// This is the file to deal with fhir client\n// Client context is created and updated.\n\nimport React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\n\n// React client context so it is accessible in differernt parts of code.\n// by exporting, it should be accessible from various part of the code.\nexport const IsbarClientContext = React.createContext({});\n\nexport class IsbarClientProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: null,\n            error: null\n        }\n    }\n    componentDidMount() {\n        // Wait until the SMART client is ready, then save the client object as its state.\n        SMART.ready().then(\n            (client) => this.setState({ client }),\n            (error) => this.setState({ error })\n        );\n    }\n    render() {\n\n        return (\n            // When the client is not loaded, it displays authorizing message.\n            // Once the client is loaded, display the child components.\n            <IsbarClientContext.Provider value={this.state || {}}>\n                <IsbarClientContext.Consumer>\n                    {({ client, error }) => {\n                        console.log(\"Load success!\");\n                        console.log(client);\n                        // any error that SMART.ready() may have been rejected with\n                        if (error) {\n                            return <pre>{error.stack}</pre>;\n                        }\n\n                        // if client is already available render the subtree (patient and input in this case.)\n                        if (client) {\n\n                            return this.props.children;\n                        }\n                        // client is undefined until SMART.ready() is fulfilled. show loading message\n                        return (\n                            <div className=\"loading-container\">\n                                Launching the ISBAR handover form..\n                            </div>\n                        )\n                    }}\n                </IsbarClientContext.Consumer>\n            </IsbarClientContext.Provider>\n        );\n    }\n}","// React script for input fields\nimport React from \"react\";\n\n// This is the class for single unit of text input. this incldes textarea and the label.\n// props contain questionnaireresponse object.\n// props: \n// \n// \nexport default class TextInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    if (!this.props.item.hasOwnProperty('answer')) {\n      this.setState({ value: \"\" });\n    } else {\n      this.setState({ value: this.props.item.answer[0].valueString });\n    }\n  }\n\n  handleChange(event) {\n\n    // update the field\n    this.setState({ value: event.target.value });\n    this.props.handleChange(event, this.props.index);\n  }\n\n  // value of this text area\n  getValue() {\n    return this.state.value\n  }\n\n  render() {\n    if (this.props.render === false) {\n      \n      return (<div></div>)\n    } else {\n      return (\n        <div className=\"textarea-container row\">\n          <div className=\"textarea-label\">\n            <label htmlFor={this.props.formID}>{this.props.label}</label>\n          </div>\n\n          <div className=\"textarea-content\">\n            <textarea\n              style={{ resize: \"none\" }}\n              id={this.props.formID}\n              name={this.props.formID}\n              placeholder={this.props.placeholder}\n              value={this.state.value}\n              onChange={this.handleChange} />\n\n          </div>\n\n        </div>\n      )\n    }\n  }\n}\n","\n// file to store questionnaire related data.\nexport const isbarQuestionnaire = {\n    \"resourceType\": \"Questionnaire\",\n    \"title\": \"questionnaireTitle\",\n    \"name\": \"isbar-simple\",\n    \"status\": \"draft\",\n    // Introduction\n    \"item\": [{\n        \"linkid\": \"1\",\n        \"text\": \"I:Identify\",\n        \"type\": \"text\" // free text\n    },\n    // Situation\n    {\n        \"linkid\": \"2\",\n        \"text\": \"S:Situation\",\n        \"type\": \"text\" // free text\n    },\n    // Observation. Enable option is not included, because it could be handled by js.\n    {\n        \"linkid\": \"3\",\n        \"text\": \"O:Observation\",\n        \"type\": \"text\" // free text\n    },\n    // Background\n    {\n        \"linkid\": \"4\",\n        \"text\": \"B:Background\",\n        \"type\": \"text\" // free text\n    },\n    // assessment\n    {\n        \"linkid\": \"5\",\n        \"text\": \"A:Assessment\",\n        \"type\": \"text\" // free text\n    },\n    // Recommendation\n    {\n        \"linkid\": \"6\",\n        \"text\": \"R:Recommendation\",\n        \"type\": \"text\" // free text\n    }]\n}\n\n\n  // create new empty questionnaire response resource with this patient.\n  // returns the questionnaire object made.\n  export function newQuestionnaireResponse(questionnaireID, patientID) {\n    // questionnaire response resource\n    var qResponse = {\n      resourceType: \"QuestionnaireResponse\",\n      text: { name: \"isbar-simple-response\" },\n      // maybe later when we sort out the thingy\n      // Reference the questionnaire\n      questionnaire: \"Questionnaire/\" + questionnaireID,\n      status: \"in-progress\",\n      source: {\n        // refer to current patient\n        reference: \"Patient/\" + patientID,\n      },\n      item: [\n        {\n          linkId: \"1\",\n          text: \"I:Identify\",\n          answer: [\n            {\n              valueString: \"\",\n            },\n          ],\n        },\n        {\n          linkId: \"2\",\n          text: \"S:Situation\",\n          answer: [\n            {\n              valueString: \"\",\n            },\n          ],\n        },\n        {\n          linkId: \"3\",\n          text: \"O:Observation\",\n          answer: [\n            {\n              valueString: \"\",\n            },\n          ],\n        },\n        {\n          linkId: \"4\",\n          text: \"B:Background\",\n          answer: [\n            {\n              valueString: \"\",\n            },\n          ],\n        },\n        {\n          linkId: \"5\",\n          text: \"A:Assessment\",\n          answer: [\n            {\n              valueString: \"\",\n            },\n          ],\n        },\n        {\n          linkId: \"6\",\n          text: \"R:Recommendation\",\n          answer: [\n            {\n              valueString: \"\",\n            },\n          ],\n        },\n      ],\n    };\n\n    return qResponse;\n  }","import React from \"react\";\nimport { Document, Page, View, Text, StyleSheet, Font } from '@react-pdf/renderer';\n\n// have to include them as a local file. probs.\n// Font.register({\n//     family: 'OpenSans',\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\n\n//     fontStyle: 'normal',\n//     fontWeight: 'normal'\n// });\n\n// Font.register({\n//     family: 'Oswald',\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n// })\n\nconst styles = StyleSheet.create({\n    page: {\n        // fontFamily: 'OpenSans',\n        backgroundColor: '#FFFFFF',\n        margin: 10,\n        padding: 20,\n    },\n    section: {\n        margin: 15\n    },\n    heading: {\n        fontSize: '16pt',\n    }\n});\nexport const IsbarDoc = (props) => {\n\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\n    props.content.item.forEach((element, index) => {\n        if (typeof element.answer !== 'undefined') {\n\n            content[index] = element.answer[0].valueString\n        }\n    });\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>I: Introduction</Text>\n                    <Text>{content[0]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>S: Situation</Text>\n                    <Text>{content[1]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>B: Background</Text>\n                    <Text>{content[2]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>A: Assessment</Text>\n                    <Text>{content[3]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>R: Recommendation</Text>\n                    <Text>{content[4]}</Text>\n                </View>\n            </Page>\n        </Document>\n    )\n}\nexport const IsobarDoc = (props) => {\n\n}\n\n","import React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { isbarQuestionnaire, newQuestionnaireResponse } from \"./QuestionnaireTemplates\";\nimport { IsbarDoc } from \"./IsbarDoc\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\n\n\n// Class for the input field group.\nexport class IsbarSimpleApp extends React.Component {\n\n  // the this.context.client is the client object!!!\n  static contextType = IsbarClientContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      error: null,\n      // true if questionnaireResponse exists\n      responseExist: false,\n      patient: null,\n      // questionnaire object that will be stored or created\n      questionnaire: null,\n      // questionnaire response object\n      questionnaireResponse: null,\n      // turns true if it's isobar\n      isIsobar: false,\n      // indicates saved state\n      saveState: \"edited\",\n      // type of current form\n      formState: \"ISOBAR\"\n      // would be good if we have a array of question-answer pair.\n    };\n  }\n\n  componentDidMount() {\n    // load client from the client context\n    const client = this.context.client;\n\n    // Promise to load/create questionnaire\n    client.request(\"Questionnaire?name=\" + isbarQuestionnaire.name)\n      .then((response) => {\n        // Check if questionnaire exist or not\n\n        console.log(\"Questionnaires:\");\n        console.log(response);\n        if (response.total === 0) {\n          // there are no questionnaire object - create one\n          return client.create(isbarQuestionnaire);\n        } else {\n          // return the existing questionnaire to be saved\n          return response.entry[0].resource;\n        }\n      })\n      .then((result) => {\n        // save questionnaire, request questionnaireResponse\n\n        this.setState({ questionnaire: result });\n        return client.request(\n          \"QuestionnaireResponse?source=Patient/\" +\n          this.context.client.patient.id\n        );\n      })\n      .then((response) => {\n        // Check if there's an existing questionnaireResponse\n\n        console.log(\"Questionnaire Responses:\");\n        console.log(response);\n        var qResponse;\n\n        if (response.total > 0) {\n          if (\n            response.entry.some((element) => {\n              qResponse = element.resource;\n              return this.checkExistingResponse(element.resource);\n            })\n          ) {\n\n            // response that fulfills the criteria exists\n            console.log(\"Selected Response\");\n            console.log(qResponse)\n\n            return qResponse;\n          }\n        }\n        // no isbar responses - create one\n        console.log(\n          \"No ISBAR questionnaire response from this patient. Creating one..\"\n        );\n        return client.create(newQuestionnaireResponse(\n          this.state.questionnaire.id,\n          this.context.client.patient.id\n        ));\n      })\n      .then((result) => {\n        console.log(\"Questionnaire response result\");\n        console.log(result);\n        // save the response object, finish loading\n        this.setState({\n          questionnaireResponse: result,\n          loaded: true,\n          error: null,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({ error, loaded: false });\n      });\n  }\n\n  // check if the given resource is QuestionnaireResponse for isbar\n  // still need some check to see if it is actually for isbar\n  checkExistingResponse(resource) {\n    if (\n      resource.source.reference ===\n      \"Patient/\" + this.context.client.patient.id &&\n      resource.questionnaire === \"Questionnaire/\" + this.state.questionnaire.id\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  // function to send update request\n  updateResponse() {\n    console.log(\n      \"Updated response: \" + JSON.stringify(this.state.questionnaireResponse)\n    );\n    this.context.client\n      .update(this.state.questionnaireResponse)\n      .then((response) => {\n        console.log(response);\n        this.setState({ saveState: \"saved\" })\n      })\n      .catch(console.error);\n  }\n\n\n  // this is the function for changing value\n  // changes answer string in the questionnaireresponse object with given index\n  // updates questionnaireresponse state\n  handleChange(event, index) {\n    var response = this.state.questionnaireResponse;\n\n    if (response.item[index].hasOwnProperty(\"answer\")) {\n      response.item[index].answer[0].valueString = event.target.value;\n    } else {\n      response.item[index].answer = [\n        {\n          valueString: event.target.value,\n        },\n      ];\n    }\n\n    this.setState({ questionnaireResponse: response });\n    if (this.state.saveState === \"saved\") {\n      this.setState({ saveState: \"edited\" })\n    }\n  }\n\n  printPDF() { }\n\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\n  render() {\n    // questionnaire response object\n\n    if (this.state.loaded) {\n      return (\n\n        <div className=\"container\">\n          <div id=\"simple-header\">\n            <button id=\"go-back-button\" onClick={this.props.goBack}> Back to Menu </button>\n            <h1>ISBAR</h1>\n            <div id=\"simple-header-content\">\n              <p className=\"simple-state\">\n                State:\n                {this.state.saveState}\n              </p>\n              <label className=\"simple-toggle\">\n                Is ISOBAR:\n                <input\n                  name=\"isISOBAR\"\n                  type=\"checkbox\"\n                  checked={this.state.isIsobar}\n                  onChange={() => this.setState(prevState => ({ isIsobar: !prevState.isIsobar }))}\n                />\n              </label>\n\n            </div>\n          </div>\n\n          <TextInputField\n            index=\"0\"\n            formID=\"introduction\"\n            label=\"Introduction\"\n            placeholder=\"Introduction\"\n            item={this.state.questionnaireResponse.item[0]}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <TextInputField\n            index=\"1\"\n            formID=\"situation\"\n            label=\"Situation\"\n            placeholder=\"Situation\"\n            item={this.state.questionnaireResponse.item[1]}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <TextInputField\n            index=\"2\"\n            formID=\"Observation\"\n            label=\"Observation\"\n            placeholder=\"Observation\"\n            item={this.state.questionnaireResponse.item[2]}\n            render={this.state.isIsobar}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <TextInputField\n            index=\"3\"\n            formID=\"background\"\n            label=\"Background\"\n            placeholder=\"Background\"\n            item={this.state.questionnaireResponse.item[3]}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <TextInputField\n            index=\"4\"\n            formID=\"assessment\"\n            label=\"Assessment\"\n            placeholder=\"Assessment\"\n            item={this.state.questionnaireResponse.item[4]}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <TextInputField\n            index=\"5\"\n            formID=\"recommendation\"\n            label=\"Recommendation\"\n            placeholder=\"Recommendation\"\n            item={this.state.questionnaireResponse.item[5]}\n            handleChange={this.handleChange.bind(this)}\n          />\n          <button\n            className=\"isbar-save\"\n            onClick={() => this.updateResponse()}\n          >\n            Save\n          </button>\n\n          <button className=\"isbar-save\">\n            <PDFDownloadLink\n              document={\n                <IsbarDoc content={this.state.questionnaireResponse} />\n              }\n              fileName=\"isbar.pdf\"\n            >\n              {({ blob, url, loading, error }) =>\n                loading ? \"Preparing\" : \"Print\"\n              }\n            </PDFDownloadLink>\n          </button>\n        </div>\n\n      )\n    } else {\n      return (\n\n        <div className=\"loading-container\">\n          Loading simple ISBAR form...\n        </div>\n      )\n    }\n  }\n}\n","import React from \"react\";\n\nexport class Assessment extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <div>Assessment</div>\n        )\n    }\n}\n","import React from \"react\";\n\nexport class Background extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <div>Background</div>\n        )\n    }\n}\n","import React from \"react\";\n\nexport class Introduction extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <div>Introduction is changed</div>\n        )\n    }\n}\n","import React from \"react\";\n\nexport class Recommendation extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <div>Recommendation</div>\n        )\n    }\n}\n","import React from \"react\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\n\nfunction PatientName({ name = [] }) {\n    let entry =\n        name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (!entry) {\n        return <h1>No Name</h1>;\n    }\n    return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\n}\n\n\n\nfunction PatientBanner(patient) {\n    return (\n        <div>\n            <PatientName name={patient.name} />\n            <span>\n                Gender: <b>{patient.gender}</b>,{\" \"}\n            </span>\n            <span>\n                DOB: <b>{patient.birthDate}</b>\n            </span>\n            \n          \n        </div>\n    );\n}\n\nexport default class Patient extends React.Component {\n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            patient: null,\n            error: null\n        };\n    }\n    componentDidMount() {\n        const client = this.context.client;\n        this._loader = client.patient\n            .read()\n            .then(patient => {\n                this.setState({ patient, loading: false, error: null });\n            })\n            .catch(error => {\n                this.setState({ error, loading: false });\n            });\n    }\n    render() {\n        const { error, loading, patient } = this.state;\n        if (loading) {\n            return null;\n        }\n        if (error) {\n            return error.message;\n        }\n        return <PatientBanner {...patient} />;\n    }\n}\n","import React from \"react\";\nimport '@shoelace-style/shoelace/dist/themes/light.css';\nimport 'medblocks-ui';\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport Patient from \"./Patient\";\n\n\n\nexport class Situation extends React.Component {\n\n    static contextType = IsbarClientContext;\n\n    constructor(props){\n        super(props)\n        this.state = {\n            // used true if data is loaded\n            loaded: false,\n            error: null,\n            // true if questionnaireResponse exists\n            responseExist: false,\n            patient: null,\n            // questionnaire object that will be stored or created\n            questionnaire: null,\n            // questionnaire response object\n            questionnaireResponse: null,\n            // turns true if it's isobar\n            isIsobar: false,\n            // indicates saved state\n            saveState: \"edited\",\n            // type of current form\n            formState: \"ISOBAR\"\n            // would be good if we have a array of question-answer pair.\n          };            \n        \n    }\n\n    componentDidMount() {\n        // load client from the client context\n        const client = this.context.client;\n        console.log(\"Patient id Test\" + this.context.client.patient.id);       \n        console.log(\"Patient id Test2\" + client.request(`Patient/${this.context.client.patient.id}`));\n        console.log(\"Patient name\" + <Patient />) \n    }    \n      \n    \n    \n\n\n    \n    \n    render(){\n        return(\n            <div  class=\"container  mx-auto px-10 sm:px-0 max-w-7xl py-50\">\n                <h2 class=\"text-2xl font semi-bold font-sans\">Patient Details</h2>\n                <h2 id=\"patient\"></h2>\n                <Patient />\n                <mb-fhir-form class=\"flex flex gap-3\" >\n                    <mb-context path=\"resourceType\" ></mb-context>                    \n                    <mb-input path path=\"name[0].given\" label=\"Name\" />                   \n                    \n                </mb-fhir-form>\n\n                \n\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { Assessment } from \"./Assessment\";\nimport { Background } from \"./Background\";\nimport { Introduction } from \"./Introduction\";\nimport { Recommendation } from \"./Recommendation\";\nimport { Situation } from \"./Situation\";\n\nexport class IsbarComplexApp extends React.Component {\n\n    render() {\n        return (\n            <div className=\"app-complex\">\n                <div className=\"app-content\">\n\n                    <h2 className=\"section-title\">Introduction</h2>\n                    <Introduction />\n                    <h2 className=\"section-title\">Situation</h2>\n                    <Situation />\n                    <h2 className=\"section-title\">Background</h2>\n                    <Background />\n                    <h2 className=\"section-title\">Assessment</h2>\n                    <Assessment />\n                    <h2 className=\"section-title\">Recommendation</h2>\n                    <Recommendation />\n\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n","import React from \"react\";\nimport { Assessment } from \"./Assessment\";\nimport { Background } from \"./Background\";\nimport { Introduction } from \"./Introduction\";\nimport { Recommendation } from \"./Recommendation\";\nimport { Situation } from \"./Situation\";\n\nexport class IsbarContentField extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n\n        switch (this.props.current) {\n            case \"I\":\n                return <Introduction />\n            case \"S\":\n                return <Situation />\n            case \"B\":\n                return <Background />\n            case \"A\":\n                return <Assessment />\n            case \"R\":\n                return <Recommendation />\n            default: \n                // fail safe\n                return <Introduction />\n\n\n        }\n    }\n}\n","import React from \"react\";\nimport { IsbarContentField } from \"./IsbarContentField\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { client } from \"fhirclient\";\n\nexport class IsbarComplexDevelopment extends React.Component {\n    \n    // client context\n    static contextType = IsbarClientContext;\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            // state for the app display\n            current: \"I\",\n            loaded: false\n            // initialise careplan resource?\n        }\n    }\n\n    componentDidMount(){\n        \n        const client = this.context.client;\n        // search for the careplan related to this patient\n        this.LoadCarePlan()\n        .then((res) => {\n            console.log(res)\n            this.setState({loaded: true})\n        })\n        // load the careplan\n    }\n\n    LoadCarePlan(){\n        return this.context.client.request(\"CarePlan?patient=\" + this.context.client.patient.id)\n    }\n\n    render() {\n        if(this.state.loaded){\n\n            return (\n            \n                <div className=\"app-complex\">\n                    <div className=\"app-content\">\n                        <IsbarContentField current={this.state.current} />\n                    </div>\n    \n                    <div className=\"footer\">\n                        <div className=\"arrow\">&larr;</div>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"I\" })}>I</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"S\" })}>S</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"B\" })}>B</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"A\" })}>A</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"R\" })}>R</button>\n                        <div className=\"arrow\">&rarr;</div>\n                    </div>\n    \n                </div>\n                \n            )\n        } else{\n            return(\n            <div>\n                Loading complex isbar form...\n            </div>)\n        }\n    }\n}\n","// Main class for the main screen. Contains everything.\nimport React from \"react\";\nimport { IsbarClientProvider } from \"./IsbarFhirClient\";\nimport { IsbarSimpleApp } from \"./app-simple/IsbarSimpleApp\";\nimport { IsbarComplexApp } from \"./app-complex/IsbarComplexApp\";\nimport { IsbarComplexDevelopment } from \"./app-complex/IsbarComplexDevelopment\";\n\nexport default class Home extends React.Component {\n\n    render() {\n        return (\n            <IsbarClientProvider>\n                <AppController />\n            </IsbarClientProvider>\n        )\n    }\n}\n\nclass AppController extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isMenu: true,\n            isSimple: true\n        }\n    }\n\n    backToMenu(){\n        this.setState({isMenu: true})\n        \n    }\n\n    render() {\n\n        if (this.state.isMenu) {\n            return (\n                // menu\n                <div className=\"main-menu-container\">\n                    <h2 className=\"menu-title\">ISBAR Form</h2>\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: true, isMenu: false })}>\n                        Simple ISBAR\n                    </button>\n\n                    <button className=\"main-menu-button\"onClick={() => this.setState({ isSimple: false, isMenu: false })}>\n                        Complex ISBAR\n                    </button>\n                </div>\n            )\n        } else {\n            if (this.state.isSimple) {\n                return (\n                    <IsbarSimpleApp goBack={this.backToMenu.bind(this)}/>\n                )\n            } else {\n                return (\n                    <IsbarComplexDevelopment />\n                )\n            }\n        }\n    }\n}\n\n","/*\n  Application file for simple ISBAR app.\n  Classes can be separated later on.\n  the react-router-dom module had to be installed with:\n  npm install -S react-router-dom\n*/\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Launcher from './Launcher';\nimport Home from \"./Home\"\nimport './App.css';\nimport '@shoelace-style/shoelace/dist/themes/light.css';\nimport 'medblocks-ui';\n\n\n\n\n\n/*\n The top application object. Responsible for:\n - Loading patient information\n - Loading questionnaire\n - Loading questionnaire response\n - Initiating the render of other components.\n */\nclass App extends React.Component {\n\n  render() {\n    return (\n      // This runs the launcher first, which redirects to the main screen.\n      <BrowserRouter>\n        <Switch>\n          {/* The actual app */}\n          <Route path=\"/isbar-app\" component={Home} exact/>\n\n          {/* Launcher for smart app */}\n          <Route path=\"/\" component={Launcher} exact />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Render the ISBAR application in index.html\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}