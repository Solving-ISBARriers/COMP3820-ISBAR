{"version":3,"sources":["Launcher.js","IsbarFhirClient.js","app-simple/QuestionnaireTemplates.js","app-simple/SimplePDF.js","app-simple/IsbarSimpleApp.js","app-complex/Assessment.js","app-complex/Background.js","app-complex/Introduction.js","app-complex/Recommendation.js","app-complex/Situation.js","app-complex/Patient.js","app-complex/IsbarComplexApp.js","app-complex/IsbarContentField.js","app-complex/IsbarComplexDevelopment.js","Home.js","App.js","index.js"],"names":["Launcher","SMART","authorize","clientId","scope","redirectUri","completeInTarget","className","React","Component","IsbarClientContext","createContext","IsbarClientProvider","props","state","client","error","simpleForms","complexForms","ready","then","setState","Provider","value","this","Consumer","console","log","stack","children","isbarQuestionnaire","styles","StyleSheet","create","page","backgroundColor","margin","padding","section","heading","fontSize","SimplePDF","content","item","forEach","element","index","answer","valueString","size","style","IsbarSimpleApp","loaded","isIsobar","saved","formState","updateResponse","bind","context","user","read","resource","source","reference","patient","id","questionnaire","event","response","hasOwnProperty","target","onClick","goBack","name","type","checked","onChange","prevState","TextField","fullWidth","multiline","placeholder","getFieldValue","e","document","fileName","blob","url","loading","contextType","Assessment","Background","Introduction","Recommendation","class","rows","AirwaySelect","useState","options","setAirway","Box","sx","minWidth","FormControl","InputLabel","Select","labelId","label","MenuItem","Situation","responseExist","questionnaireResponse","saveState","PatientName","entry","find","nameRecord","use","given","join","family","PatientBanner","gender","birthDate","address","city","Patient","_loader","catch","message","IsbarComplexApp","IsbarContentField","current","carePlan","LoadCarePlan","res","request","Home","AppController","isMenu","isSimple","simpleResponses","questionnaireID","loadSimple","loadQuestionnaireID","loadSimpleIsbars","Promise","all","total","result","backToMenu","App","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.01a8b30f.chunk.js","sourcesContent":["// Launcher file for the app. \r\nimport React from \"react\";\r\nimport { oauth2 as SMART } from \"fhirclient\";\r\n\r\n/**\r\n * Typically the launch page is an empty page with a `SMART.authorize`\r\n * call in it. This isbased on the example code from:\r\n * https://codesandbox.io/s/fhir-client-react-react-router-context-0q3n8?file=/src/components/Launcher.js\r\n * \r\n *\r\n */\r\nexport default class Launcher extends React.Component {\r\n    \r\n    /**\r\n     * This is configured to make a Standalone Launch, just in case it\r\n     * is loaded directly. An EHR can still launch it by passing `iss`\r\n     * and `launch` url parameters\r\n     */\r\n    componentDidMount() {\r\n        \r\n        SMART.authorize({\r\n            clientId: \"my-client-id\",\r\n            scope: \"launch openid fhirUser patient/*.read patient/*.write\",\r\n            redirectUri: \"./isbar-app\",\r\n            // Redirect to main screen.\r\n            \r\n            completeInTarget: true\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                Launching the ISBAR handover form..\r\n            </div>\r\n            )\r\n    }\r\n}","// This is the file to deal with fhir client\r\n// Client context is created and updated.\r\n\r\nimport React from \"react\";\r\nimport { client, oauth2 as SMART } from \"fhirclient\";\r\n\r\n// React client context so it is accessible in differernt parts of code.\r\n// by exporting, it should be accessible from various part of the code.\r\nexport const IsbarClientContext = React.createContext({});\r\n\r\nexport class IsbarClientProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            client: null, // client object\r\n            error: null, // error message\r\n            simpleForms: null, // simple isbar forms (questionnaireResponses)\r\n            complexForms: null // complex isbar forms ()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Wait until the SMART client is ready, then save the client object as its state.\r\n        SMART.ready().then(\r\n            (client) => this.setState({ client }),\r\n            (error) => this.setState({ error })\r\n        )\r\n        // Load the relevant resources\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // When the client is not loaded, it displays authorizing message.\r\n            // Once the client is loaded, display the child components.\r\n            <IsbarClientContext.Provider value={this.state || {}}>\r\n                <IsbarClientContext.Consumer>\r\n                    {({ client, error }) => {\r\n                        console.log(\"Client\");\r\n                        console.log(client);\r\n                        // any error that SMART.ready() may have been rejected with\r\n                        if (error) {\r\n                            return <pre>{error.stack}</pre>;\r\n                        }\r\n\r\n                        // if client is already available render the subtree (patient and input in this case.)\r\n                        if (client) {\r\n\r\n                            return this.props.children;\r\n                        }\r\n                        // client is undefined until SMART.ready() is fulfilled. show loading message\r\n                        return (\r\n                            <div className=\"loading-container\">\r\n                                Launching the ISBAR handover form..\r\n                            </div>\r\n                        )\r\n                    }}\r\n                </IsbarClientContext.Consumer>\r\n            </IsbarClientContext.Provider>\r\n        );\r\n    }\r\n}","// file to store questionnaire json file \r\n\r\nexport const isbarQuestionnaire = {\r\n    \"resourceType\": \"Questionnaire\",\r\n    \"title\": \"questionnaireTitle\",\r\n    \"name\": \"isbar-simple\",\r\n    \"status\": \"active\",\r\n    // Introduction\r\n    \"item\": [{\r\n        \"linkid\": \"1\",\r\n        \"text\": \"I:Identify\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Situation\r\n    {\r\n        \"linkid\": \"2\",\r\n        \"text\": \"S:Situation\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Observation. Enable option is not included, because it could be handled by js.\r\n    {\r\n        \"linkid\": \"3\",\r\n        \"text\": \"O:Observation\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Background\r\n    {\r\n        \"linkid\": \"4\",\r\n        \"text\": \"B:Background\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // assessment\r\n    {\r\n        \"linkid\": \"5\",\r\n        \"text\": \"A:Assessment\",\r\n        \"type\": \"text\" // free text\r\n    },\r\n    // Recommendation\r\n    {\r\n        \"linkid\": \"6\",\r\n        \"text\": \"R:Recommendation\",\r\n        \"type\": \"text\" // free text\r\n    }]\r\n}\r\n\r\n\r\n  // create new empty questionnaire response resource with this patient.\r\n  // returns the questionnaire object made.\r\n  export function newQuestionnaireResponse(questionnaireID, patientID) {\r\n    // questionnaire response resource\r\n    var qResponse = {\r\n      resourceType: \"QuestionnaireResponse\",\r\n      text: { name: \"isbar-simple-response\" },\r\n      // maybe later when we sort out the thingy\r\n      // Reference the questionnaire\r\n      questionnaire: \"Questionnaire/\" + questionnaireID,\r\n      status: \"in-progress\",\r\n      source: {\r\n        // refer to current patient\r\n        reference: \"Patient/\" + patientID,\r\n      },\r\n      item: [\r\n        {\r\n          linkId: \"1\",\r\n          text: \"I:Identify\",\r\n          answer: [\r\n            {\r\n              valueString: \"\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          linkId: \"2\",\r\n          text: \"S:Situation\",\r\n          answer: [\r\n            {\r\n              valueString: \"\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          linkId: \"3\",\r\n          text: \"O:Observation\",\r\n          answer: [\r\n            {\r\n              valueString: \"\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          linkId: \"4\",\r\n          text: \"B:Background\",\r\n          answer: [\r\n            {\r\n              valueString: \"\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          linkId: \"5\",\r\n          text: \"A:Assessment\",\r\n          answer: [\r\n            {\r\n              valueString: \"\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          linkId: \"6\",\r\n          text: \"R:Recommendation\",\r\n          answer: [\r\n            {\r\n              valueString: \"\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return qResponse;\r\n  }","import React from \"react\";\r\nimport { Document, Page, View, Text, StyleSheet, Font } from '@react-pdf/renderer';\r\n\r\n// have to include them as a local file. probs.\r\n// Font.register({\r\n//     family: 'OpenSans',\r\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\r\n\r\n//     fontStyle: 'normal',\r\n//     fontWeight: 'normal'\r\n// });\r\n\r\n// Font.register({\r\n//     family: 'Oswald',\r\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\r\n// })\r\n\r\n// This is the pdf file that will be generated\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        // fontFamily: 'OpenSans',\r\n        backgroundColor: '#FFFFFF',\r\n        margin: 10,\r\n        padding: 20,\r\n    },\r\n    section: {\r\n        margin: 15\r\n    },\r\n    heading: {\r\n        fontSize: '16pt',\r\n    }\r\n});\r\nexport const SimplePDF = (props) => {\r\n\r\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\r\n    props.content.item.forEach((element, index) => {\r\n        if (typeof element.answer !== 'undefined') {\r\n\r\n            content[index] = element.answer[0].valueString\r\n        }\r\n    });\r\n    return (\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>I: Introduction</Text>\r\n                    <Text>{content[0]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>S: Situation</Text>\r\n                    <Text>{content[1]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>B: Background</Text>\r\n                    <Text>{content[2]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>A: Assessment</Text>\r\n                    <Text>{content[3]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>R: Recommendation</Text>\r\n                    <Text>{content[4]}</Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\nexport const IsobarDoc = (props) => {\r\n\r\n}\r\n\r\n","import React from \"react\";\r\n// import TextInputField from \"./TextInputField\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport { isbarQuestionnaire, newQuestionnaireResponse } from \"./QuestionnaireTemplates\";\r\nimport { SimplePDF } from \"./SimplePDF\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import { ReactDOM } from \"react\";\r\nimport TextField from '@mui/material/TextField'\r\nimport simpleQuestionnaire from './res/simpleQuestionnaire'\r\nimport { client } from \"fhirclient\";\r\n\r\n\r\n// Class for the input field group.\r\nexport class IsbarSimpleApp extends React.Component {\r\n\r\n  // the this.context.client is the client object!!!\r\n  static contextType = IsbarClientContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // used true if data is loaded\r\n      loaded: false,\r\n      error: null,\r\n      // questionnaire response object\r\n      content: null,\r\n      // turns true if it's isobar\r\n      isIsobar: false,\r\n      // indicates saved state\r\n      saved: \"edited\",\r\n      // type of current form\r\n      formState: \"ISOBAR\"\r\n    };\r\n\r\n    this.updateResponse = this.updateResponse.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.context.client.user.read().then(console.log)\r\n    this.setState({content: this.props.content})\r\n  }\r\n\r\n  // check if the given resource is QuestionnaireResponse for isbar\r\n  // still need some check to see if it is actually for isbar\r\n  checkExistingResponse(resource) {\r\n    if (\r\n      resource.source.reference ===\r\n      \"Patient/\" + this.context.client.patient.id &&\r\n      resource.questionnaire === \"Questionnaire/\" + this.state.questionnaire.id\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // function to send update request\r\n  updateResponse() {\r\n    console.log(\r\n      \"Updated response: \" + JSON.stringify(this.state.content)\r\n    );\r\n    this.context.client\r\n      .update(this.state.content)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ saved: \"saved\" })\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n\r\n  // this is the function for changing value\r\n  // changes answer string in the questionnaireresponse object with given index\r\n  // updates questionnaireresponse state\r\n  // TODO: make it smooth\r\n  updateResponse(event, index) {\r\n    var response = this.state.content;\r\n\r\n    if (response.item[index].hasOwnProperty(\"answer\")) {\r\n      response.item[index].answer[0].valueString = event.target.value;\r\n    } else {\r\n      response.item[index].answer = [\r\n        {\r\n          valueString: event.target.value,\r\n        },\r\n      ];\r\n    }\r\n    this.setState({ content: response });\r\n    // change the saved state\r\n    if (this.state.saved === \"saved\") {\r\n      this.setState({ saved: \"edited\" })\r\n    }\r\n  }\r\n  \r\n  getFieldValue(index){\r\n    return this.state.content.item[index].hasOwnProperty('answer')\r\n    ? this.state.content.item[index].answer[0].valueString\r\n    : \"\"\r\n  }\r\n\r\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\r\n  render() {\r\n    // questionnaire response object\r\n\r\n    if (this.state.loaded) {\r\n      return (\r\n\r\n        <div className=\"container\">\r\n          <div id=\"simple-header\">\r\n            <button id=\"go-back-button\" onClick={this.props.goBack}> Back to Menu </button>\r\n            <h1>ISBAR</h1>\r\n            <div id=\"simple-header-content\">\r\n              <p className=\"simple-state\">\r\n                State:\r\n                {this.state.saved}\r\n              </p>\r\n              <label className=\"simple-toggle\">\r\n                Is ISOBAR:\r\n                <input\r\n                  name=\"isISOBAR\"\r\n                  type=\"checkbox\"\r\n                  checked={this.state.isIsobar}\r\n                  onChange={() => this.setState(prevState => ({ isIsobar: !prevState.isIsobar }))}\r\n                />\r\n              </label>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Introduction\"\r\n          value={this.getFieldValue(0)}\r\n          onChange={(e) => this.updateResponse(e, 0)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Situation\"\r\n          value={this.getFieldValue(1)}\r\n          onChange={(e) => this.updateResponse(e, 1)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Observation\"\r\n          value={this.getFieldValue(2)}\r\n          onChange={(e) => this.updateResponse(e, 2)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Background\"\r\n          value={this.getFieldValue(3)}\r\n          onChange={(e) => this.updateResponse(e, 3)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Assessment\"\r\n          value={this.getFieldValue(4)}\r\n          onChange={(e) => this.updateResponse(e, 4)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Recommendation\"\r\n          value={this.getFieldValue(5)}\r\n          onChange={(e) => this.updateResponse(e, 5)}\r\n          />\r\n          \r\n          <button\r\n            className=\"isbar-save\"\r\n            onClick={() => this.updateResponse()}\r\n          >\r\n            Save\r\n          </button>\r\n\r\n          <button className=\"isbar-save\">\r\n            <PDFDownloadLink\r\n              document={\r\n                <SimplePDF content={this.state.content} />\r\n              }\r\n              fileName=\"isbar.pdf\"\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                loading ? \"Preparing\" : \"Print\"\r\n              }\r\n            </PDFDownloadLink>\r\n          </button>\r\n        </div>\r\n\r\n      )\r\n    } else {\r\n      return (\r\n\r\n        <div className=\"loading-container\">\r\n          Loading simple ISBAR form...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class Assessment extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Assessment</div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class Background extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Background</div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class Introduction extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Introduction is changed</div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport class Recommendation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container  mx-auto px-10 sm:px-8 max-w-7xl py-10\">\r\n                <sl-form>\r\n                    <sl-textarea rows={4}>\r\n                    </sl-textarea>\r\n                </sl-form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport function AirwaySelect() {\r\n  const [options, setAirway] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setAirway(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"airwaySelect\">Airway</InputLabel>\r\n        <Select\r\n          labelId=\"Airway\"\r\n          id=\"airwaySelect\"\r\n          value={options}\r\n          label=\"Options\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Patent</MenuItem>\r\n          <MenuItem value={20}>Compromised</MenuItem>\r\n          <MenuItem value={30}>Ventilated</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport class Situation extends React.Component {\r\n  static contextType = IsbarClientContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // used true if data is loaded\r\n      loaded: false,\r\n      error: null,\r\n      // true if questionnaireResponse exists\r\n      responseExist: false,\r\n      patient: null,\r\n      // questionnaire object that will be stored or created\r\n      questionnaire: null,\r\n      // questionnaire response object\r\n      questionnaireResponse: null,\r\n      // turns true if it's isobar\r\n      isIsobar: false,\r\n      // indicates saved state\r\n      saveState: \"edited\",\r\n      // type of current form\r\n      formState: \"ISOBAR\",\r\n      // would be good if we have a array of question-answer pair.\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // load client from the client context\r\n    const client = this.context.client;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container  mx-auto px-10 sm:px-8 max-w-7xl py-10\">\r\n        <h1>Situation</h1>\r\n        <h3>Patient Status</h3>\r\n        <TextField fullWidth multiline placeholder=\"Patient Status\" />\r\n\r\n        <h3>Principle Diagnosis</h3>\r\n        <TextField fullWidth multiline placeholder=\"Principle Diagnosis\" />\r\n\r\n        <h3>Other Diagnosis/problems</h3>\r\n        <TextField fullWidth multiline placeholder=\"Other Diagnosis/problems\" />\r\n\r\n        <h3>Reason For transfer</h3>\r\n        <TextField fullWidth multiline placeholder=\"Reason For transfer\" />\r\n\r\n        <h3>Observations</h3>\r\n        <AirwaySelect />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\n\r\nfunction PatientName({ name = [] }) {\r\n  let entry =\r\n    name.find((nameRecord) => nameRecord.use === \"official\") || name[0];\r\n  if (!entry) {\r\n    return <h1>No Name</h1>;\r\n  }\r\n  return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\r\n}\r\n\r\nfunction PatientBanner(patient) {\r\n  console.log(patient);\r\n  return (\r\n    <div>\r\n      <PatientName name={patient.name} />\r\n      <span>\r\n        Gender: <b>{patient.gender}</b>{\" \"}\r\n      </span>\r\n      <span>\r\n        DOB: <b>{patient.birthDate}</b>\r\n      </span>\r\n      <span>\r\n        DOB: <b>{patient.address[0].city}</b>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class Patient extends React.Component {\r\n  static contextType = IsbarClientContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      patient: null,\r\n      error: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const client = this.context.client;\r\n    this._loader = client.patient\r\n      .read()\r\n      .then((patient) => {\r\n        this.setState({ patient, loading: false, error: null });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error, loading: false });\r\n      });\r\n  }\r\n  render() {\r\n    const { error, loading, patient } = this.state;\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    if (error) {\r\n      return error.message;\r\n    }\r\n    return <PatientBanner {...patient} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Assessment } from \"./Assessment\";\r\nimport { Background } from \"./Background\";\r\nimport { Introduction } from \"./Introduction\";\r\nimport { Recommendation } from \"./Recommendation\";\r\nimport { Situation } from \"./Situation\";\r\nimport Patient from \"./Patient\";\r\n\r\nexport class IsbarComplexApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Patient />\r\n        <Introduction />\r\n        <Situation />\r\n        <Background />\r\n        <Assessment />\r\n        <Recommendation />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Assessment } from \"./Assessment\";\r\nimport { Background } from \"./Background\";\r\nimport { Introduction } from \"./Introduction\";\r\nimport { Recommendation } from \"./Recommendation\";\r\nimport { Situation } from \"./Situation\";\r\n\r\nexport class IsbarContentField extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n\r\n        switch (this.props.current) {\r\n            case \"I\":\r\n                return <Introduction />\r\n            case \"S\":\r\n                return <Situation />\r\n            case \"B\":\r\n                return <Background />\r\n            case \"A\":\r\n                return <Assessment />\r\n            case \"R\":\r\n                return <Recommendation />\r\n            default: \r\n                // fail safe\r\n                return <Introduction />\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { IsbarContentField } from \"./IsbarContentField\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport { client } from \"fhirclient\";\r\n\r\nexport class IsbarComplexDevelopment extends React.Component {\r\n    \r\n    // client context\r\n    static contextType = IsbarClientContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            // state for the app display\r\n            current: \"I\",\r\n            loaded: false,\r\n            carePlan: null\r\n            // initialise careplan resource?\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        const client = this.context.client;\r\n        // search for the careplan related to this patient\r\n        this.LoadCarePlan()\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.setState({loaded: true})\r\n        })\r\n        // load the careplan\r\n    }\r\n\r\n    LoadCarePlan(){\r\n        return this.context.client.request(\"CarePlan?patient=\" + this.context.client.patient.id)\r\n        .then( res => {\r\n            // filter careplan\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loaded){\r\n\r\n            return (\r\n            \r\n                <div className=\"app-complex\">\r\n                    <div className=\"app-content\">\r\n                        <IsbarContentField current={this.state.current} />\r\n                    </div>\r\n    \r\n                    <div className=\"footer\">\r\n                        <div className=\"arrow\">&larr;</div>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"I\" })}>I</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"S\" })}>S</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"B\" })}>B</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"A\" })}>A</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"R\" })}>R</button>\r\n                        <div className=\"arrow\">&rarr;</div>\r\n                    </div>\r\n    \r\n                </div>\r\n                \r\n            )\r\n        } else{\r\n            return(\r\n            <div>\r\n                Loading complex isbar form...\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n","// Main class for the main screen. Contains everything.\r\nimport React from \"react\";\r\nimport { IsbarClientProvider } from \"./IsbarFhirClient\";\r\nimport { IsbarSimpleApp } from \"./app-simple/IsbarSimpleApp\";\r\nimport { IsbarComplexApp } from \"./app-complex/IsbarComplexApp\";\r\nimport { IsbarComplexDevelopment } from \"./app-complex/IsbarComplexDevelopment\";\r\nimport { isbarQuestionnaire, newQuestionnaireResponse } from \"./app-simple/QuestionnaireTemplates\";\r\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <IsbarClientProvider>\r\n                <AppController />\r\n            </IsbarClientProvider>\r\n        )\r\n    }\r\n}\r\n\r\n// this component loads and displays the questionnaireResponse\r\nclass AppController extends React.Component {\r\n\r\n    static contextType = IsbarClientContext;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loaded: false,\r\n            isMenu: true,\r\n            isSimple: true,\r\n            simpleResponses: null,\r\n            questionnaireID: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        // Load questionnaire and simple isbar forms.\r\n        const loadSimple = this.loadQuestionnaireID()\r\n            .then((res) => this.loadSimpleIsbars(res))\r\n\r\n        // wait till all promises resolved\r\n        Promise.all([loadSimple]).then(() => console.log(\"all loaded\"))\r\n    }\r\n\r\n    backToMenu() {\r\n        this.setState({ isMenu: true })\r\n    }\r\n\r\n    // Returns a promise that loads questionnaire ID using questionnaire template\r\n    // updates the state for questionnaire id\r\n    // the promise resolves to questionnaire id\r\n    loadQuestionnaireID() {\r\n\r\n        return this.context.client.request(\"Questionnaire?name=\" + isbarQuestionnaire.name)\r\n            .then((response) => {\r\n                console.log(response)\r\n                if (response.total === 0) {\r\n                    // there are no questionnaire object - create one\r\n                    return this.context.client.create(isbarQuestionnaire);\r\n                } else {\r\n                    // return the existing questionnaire to be saved\r\n                    return response.entry[0].resource;\r\n                }\r\n            }).then((result) => {\r\n                this.setState({ questionnaireID: result.id })\r\n                return result.id\r\n            })\r\n    }\r\n\r\n    // Returns a promise for loading simple isbar forms given questionnaire id.\r\n    // The promise resolves to the bundle returned from the server\r\n    loadSimpleIsbars(questionnaireID) {\r\n\r\n        return this.context.client.patient.request(\r\n            \"QuestionnaireResponse?questionnaire=\" + questionnaireID\r\n        ).then((result) => {\r\n            this.setState({ simpleResponses: result })\r\n            return result\r\n        })\r\n    }\r\n\r\n    // method to create a simple isbar questionnaireResponse\r\n    createSimpleIsbar(){\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isMenu) {\r\n            return (\r\n                // menu\r\n                <div className=\"main-menu-container\">\r\n                    <h2 className=\"menu-title\">ISBAR Form</h2>\r\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: true, isMenu: false })}>\r\n                        Simple ISBAR\r\n                    </button>\r\n\r\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: false, isMenu: false })}>\r\n                        Complex ISBAR\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else {\r\n            if (this.state.isSimple) {\r\n                return (\r\n                    <IsbarSimpleApp goBack={this.backToMenu.bind(this)} content={\"content\"}/>\r\n                )\r\n            } else {\r\n                return (\r\n                    // <IsbarComplexDevelopment />\r\n                    <IsbarComplexApp />\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/*\r\n  Application file for simple ISBAR app.\r\n  Classes can be separated later on.\r\n  the react-router-dom module had to be installed with:\r\n  npm install -S react-router-dom\r\n*/\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Launcher from './Launcher';\r\nimport Home from \"./Home\"\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n The top application object. Responsible for:\r\n - Loading patient information\r\n - Loading questionnaire\r\n - Loading questionnaire response\r\n - Initiating the render of other components.\r\n */\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      // This runs the launcher first, which redirects to the main screen.\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/* The actual app */}\r\n          <Route path=\"/isbar-app\" component={Home} exact/>\r\n\r\n          {/* Launcher for smart app */}\r\n          <Route path=\"/\" component={Launcher} exact />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// Render the ISBAR application in index.html\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}