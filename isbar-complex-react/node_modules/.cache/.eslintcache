[{"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\index.js":"1","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\App.js":"2","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\Launcher.js":"3","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\Home.js":"4","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\IsbarFhirClient.js":"5","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-simple\\IsbarSimpleApp.js":"6","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\IsbarComplexApp.js":"7","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-simple\\QuestionnaireTemplates.js":"8","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Assessment.js":"9","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Introduction.js":"10","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Recommendation.js":"11","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Background.js":"12","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Situation.js":"13","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\IsbarContentField.js":"14","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Patient.js":"15","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\IsbarComplexDevelopment.js":"16","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-simple\\SimplePDF.js":"17"},{"size":219,"mtime":1634259249600,"results":"18","hashOfConfig":"19"},{"size":1107,"mtime":1635468005534,"results":"20","hashOfConfig":"19"},{"size":1140,"mtime":1635468257859,"results":"21","hashOfConfig":"19"},{"size":4025,"mtime":1635468257851,"results":"22","hashOfConfig":"19"},{"size":2451,"mtime":1635468257859,"results":"23","hashOfConfig":"19"},{"size":5809,"mtime":1635468257955,"results":"24","hashOfConfig":"19"},{"size":637,"mtime":1635471916824,"results":"25","hashOfConfig":"19"},{"size":2834,"mtime":1635468257955,"results":"26","hashOfConfig":"19"},{"size":225,"mtime":1635207285444,"results":"27","hashOfConfig":"19"},{"size":240,"mtime":1635207285523,"results":"28","hashOfConfig":"19"},{"size":486,"mtime":1635468257875,"results":"29","hashOfConfig":"19"},{"size":225,"mtime":1635207285489,"results":"30","hashOfConfig":"19"},{"size":7589,"mtime":1635475128077,"results":"31","hashOfConfig":"19"},{"size":866,"mtime":1635467925479,"results":"32","hashOfConfig":"19"},{"size":1482,"mtime":1635471903468,"results":"33","hashOfConfig":"19"},{"size":2391,"mtime":1635468257867,"results":"34","hashOfConfig":"19"},{"size":2230,"mtime":1635468258291,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ch19sv",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\index.js",[],["81","82"],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\App.js",[],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\Launcher.js",[],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\Home.js",["83","84"],"// Main class for the main screen. Contains everything.\r\nimport React from \"react\";\r\nimport { IsbarClientProvider } from \"./IsbarFhirClient\";\r\nimport { IsbarSimpleApp } from \"./app-simple/IsbarSimpleApp\";\r\nimport { IsbarComplexApp } from \"./app-complex/IsbarComplexApp\";\r\nimport { IsbarComplexDevelopment } from \"./app-complex/IsbarComplexDevelopment\";\r\nimport { isbarQuestionnaire, newQuestionnaireResponse } from \"./app-simple/QuestionnaireTemplates\";\r\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <IsbarClientProvider>\r\n                <AppController />\r\n            </IsbarClientProvider>\r\n        )\r\n    }\r\n}\r\n\r\n// this component loads and displays the questionnaireResponse\r\nclass AppController extends React.Component {\r\n\r\n    static contextType = IsbarClientContext;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loaded: false,\r\n            isMenu: true,\r\n            isSimple: true,\r\n            simpleResponses: null,\r\n            questionnaireID: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        // Load questionnaire and simple isbar forms.\r\n        const loadSimple = this.loadQuestionnaireID()\r\n            .then((res) => this.loadSimpleIsbars(res))\r\n\r\n        // wait till all promises resolved\r\n        Promise.all([loadSimple]).then(() => console.log(\"all loaded\"))\r\n    }\r\n\r\n    backToMenu() {\r\n        this.setState({ isMenu: true })\r\n    }\r\n\r\n    // Returns a promise that loads questionnaire ID using questionnaire template\r\n    // updates the state for questionnaire id\r\n    // the promise resolves to questionnaire id\r\n    loadQuestionnaireID() {\r\n\r\n        return this.context.client.request(\"Questionnaire?name=\" + isbarQuestionnaire.name)\r\n            .then((response) => {\r\n                console.log(response)\r\n                if (response.total === 0) {\r\n                    // there are no questionnaire object - create one\r\n                    return this.context.client.create(isbarQuestionnaire);\r\n                } else {\r\n                    // return the existing questionnaire to be saved\r\n                    return response.entry[0].resource;\r\n                }\r\n            }).then((result) => {\r\n                this.setState({ questionnaireID: result.id })\r\n                return result.id\r\n            })\r\n    }\r\n\r\n    // Returns a promise for loading simple isbar forms given questionnaire id.\r\n    // The promise resolves to the bundle returned from the server\r\n    loadSimpleIsbars(questionnaireID) {\r\n\r\n        return this.context.client.patient.request(\r\n            \"QuestionnaireResponse?questionnaire=\" + questionnaireID\r\n        ).then((result) => {\r\n            this.setState({ simpleResponses: result })\r\n            return result\r\n        })\r\n    }\r\n\r\n    // method to create a simple isbar questionnaireResponse\r\n    createSimpleIsbar(){\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isMenu) {\r\n            return (\r\n                // menu\r\n                <div className=\"main-menu-container\">\r\n                    <h2 className=\"menu-title\">ISBAR Form</h2>\r\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: true, isMenu: false })}>\r\n                        Simple ISBAR\r\n                    </button>\r\n\r\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: false, isMenu: false })}>\r\n                        Complex ISBAR\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else {\r\n            if (this.state.isSimple) {\r\n                return (\r\n                    <IsbarSimpleApp goBack={this.backToMenu.bind(this)} content={\"content\"}/>\r\n                )\r\n            } else {\r\n                return (\r\n                    // <IsbarComplexDevelopment />\r\n                    <IsbarComplexApp />\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\IsbarFhirClient.js",["85"],"// This is the file to deal with fhir client\r\n// Client context is created and updated.\r\n\r\nimport React from \"react\";\r\nimport { client, oauth2 as SMART } from \"fhirclient\";\r\n\r\n// React client context so it is accessible in differernt parts of code.\r\n// by exporting, it should be accessible from various part of the code.\r\nexport const IsbarClientContext = React.createContext({});\r\n\r\nexport class IsbarClientProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            client: null, // client object\r\n            error: null, // error message\r\n            simpleForms: null, // simple isbar forms (questionnaireResponses)\r\n            complexForms: null // complex isbar forms ()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Wait until the SMART client is ready, then save the client object as its state.\r\n        SMART.ready().then(\r\n            (client) => this.setState({ client }),\r\n            (error) => this.setState({ error })\r\n        )\r\n        // Load the relevant resources\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // When the client is not loaded, it displays authorizing message.\r\n            // Once the client is loaded, display the child components.\r\n            <IsbarClientContext.Provider value={this.state || {}}>\r\n                <IsbarClientContext.Consumer>\r\n                    {({ client, error }) => {\r\n                        console.log(\"Client\");\r\n                        console.log(client);\r\n                        // any error that SMART.ready() may have been rejected with\r\n                        if (error) {\r\n                            return <pre>{error.stack}</pre>;\r\n                        }\r\n\r\n                        // if client is already available render the subtree (patient and input in this case.)\r\n                        if (client) {\r\n\r\n                            return this.props.children;\r\n                        }\r\n                        // client is undefined until SMART.ready() is fulfilled. show loading message\r\n                        return (\r\n                            <div className=\"loading-container\">\r\n                                Launching the ISBAR handover form..\r\n                            </div>\r\n                        )\r\n                    }}\r\n                </IsbarClientContext.Consumer>\r\n            </IsbarClientContext.Provider>\r\n        );\r\n    }\r\n}","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-simple\\IsbarSimpleApp.js",["86","87","88","89","90"],"import React from \"react\";\r\n// import TextInputField from \"./TextInputField\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport { isbarQuestionnaire, newQuestionnaireResponse } from \"./QuestionnaireTemplates\";\r\nimport { SimplePDF } from \"./SimplePDF\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import { ReactDOM } from \"react\";\r\nimport TextField from '@mui/material/TextField'\r\nimport simpleQuestionnaire from './res/simpleQuestionnaire'\r\nimport { client } from \"fhirclient\";\r\n\r\n\r\n// Class for the input field group.\r\nexport class IsbarSimpleApp extends React.Component {\r\n\r\n  // the this.context.client is the client object!!!\r\n  static contextType = IsbarClientContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // used true if data is loaded\r\n      loaded: false,\r\n      error: null,\r\n      // questionnaire response object\r\n      content: null,\r\n      // turns true if it's isobar\r\n      isIsobar: false,\r\n      // indicates saved state\r\n      saved: \"edited\",\r\n      // type of current form\r\n      formState: \"ISOBAR\"\r\n    };\r\n\r\n    this.updateResponse = this.updateResponse.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.context.client.user.read().then(console.log)\r\n    this.setState({content: this.props.content})\r\n  }\r\n\r\n  // check if the given resource is QuestionnaireResponse for isbar\r\n  // still need some check to see if it is actually for isbar\r\n  checkExistingResponse(resource) {\r\n    if (\r\n      resource.source.reference ===\r\n      \"Patient/\" + this.context.client.patient.id &&\r\n      resource.questionnaire === \"Questionnaire/\" + this.state.questionnaire.id\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // function to send update request\r\n  updateResponse() {\r\n    console.log(\r\n      \"Updated response: \" + JSON.stringify(this.state.content)\r\n    );\r\n    this.context.client\r\n      .update(this.state.content)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ saved: \"saved\" })\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n\r\n  // this is the function for changing value\r\n  // changes answer string in the questionnaireresponse object with given index\r\n  // updates questionnaireresponse state\r\n  // TODO: make it smooth\r\n  updateResponse(event, index) {\r\n    var response = this.state.content;\r\n\r\n    if (response.item[index].hasOwnProperty(\"answer\")) {\r\n      response.item[index].answer[0].valueString = event.target.value;\r\n    } else {\r\n      response.item[index].answer = [\r\n        {\r\n          valueString: event.target.value,\r\n        },\r\n      ];\r\n    }\r\n    this.setState({ content: response });\r\n    // change the saved state\r\n    if (this.state.saved === \"saved\") {\r\n      this.setState({ saved: \"edited\" })\r\n    }\r\n  }\r\n  \r\n  getFieldValue(index){\r\n    return this.state.content.item[index].hasOwnProperty('answer')\r\n    ? this.state.content.item[index].answer[0].valueString\r\n    : \"\"\r\n  }\r\n\r\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\r\n  render() {\r\n    // questionnaire response object\r\n\r\n    if (this.state.loaded) {\r\n      return (\r\n\r\n        <div className=\"container\">\r\n          <div id=\"simple-header\">\r\n            <button id=\"go-back-button\" onClick={this.props.goBack}> Back to Menu </button>\r\n            <h1>ISBAR</h1>\r\n            <div id=\"simple-header-content\">\r\n              <p className=\"simple-state\">\r\n                State:\r\n                {this.state.saved}\r\n              </p>\r\n              <label className=\"simple-toggle\">\r\n                Is ISOBAR:\r\n                <input\r\n                  name=\"isISOBAR\"\r\n                  type=\"checkbox\"\r\n                  checked={this.state.isIsobar}\r\n                  onChange={() => this.setState(prevState => ({ isIsobar: !prevState.isIsobar }))}\r\n                />\r\n              </label>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Introduction\"\r\n          value={this.getFieldValue(0)}\r\n          onChange={(e) => this.updateResponse(e, 0)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Situation\"\r\n          value={this.getFieldValue(1)}\r\n          onChange={(e) => this.updateResponse(e, 1)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Observation\"\r\n          value={this.getFieldValue(2)}\r\n          onChange={(e) => this.updateResponse(e, 2)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Background\"\r\n          value={this.getFieldValue(3)}\r\n          onChange={(e) => this.updateResponse(e, 3)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Assessment\"\r\n          value={this.getFieldValue(4)}\r\n          onChange={(e) => this.updateResponse(e, 4)}\r\n          />\r\n          <TextField fullWidth multiline\r\n          placeholder=\"Recommendation\"\r\n          value={this.getFieldValue(5)}\r\n          onChange={(e) => this.updateResponse(e, 5)}\r\n          />\r\n          \r\n          <button\r\n            className=\"isbar-save\"\r\n            onClick={() => this.updateResponse()}\r\n          >\r\n            Save\r\n          </button>\r\n\r\n          <button className=\"isbar-save\">\r\n            <PDFDownloadLink\r\n              document={\r\n                <SimplePDF content={this.state.content} />\r\n              }\r\n              fileName=\"isbar.pdf\"\r\n            >\r\n              {({ blob, url, loading, error }) =>\r\n                loading ? \"Preparing\" : \"Print\"\r\n              }\r\n            </PDFDownloadLink>\r\n          </button>\r\n        </div>\r\n\r\n      )\r\n    } else {\r\n      return (\r\n\r\n        <div className=\"loading-container\">\r\n          Loading simple ISBAR form...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\IsbarComplexApp.js",["91"],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-simple\\QuestionnaireTemplates.js",[],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Assessment.js",["92"],"import React from \"react\";\r\n\r\nexport class Assessment extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Assessment</div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Introduction.js",["93"],"import React from \"react\";\r\n\r\nexport class Introduction extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Introduction is changed</div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Recommendation.js",["94"],"import React from \"react\";\r\nimport '@shoelace-style/shoelace/dist/themes/light.css';\r\n\r\nexport class Recommendation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container  mx-auto px-10 sm:px-8 max-w-7xl py-10\">\r\n                <sl-form>\r\n                    <sl-textarea rows={4}>\r\n                    </sl-textarea>\r\n                </sl-form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Background.js",["95"],"import React from \"react\";\r\n\r\nexport class Background extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>Background</div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Situation.js",["96"],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\IsbarContentField.js",["97"],"import React from \"react\";\r\nimport { Assessment } from \"./Assessment\";\r\nimport { Background } from \"./Background\";\r\nimport { Introduction } from \"./Introduction\";\r\nimport { Recommendation } from \"./Recommendation\";\r\nimport { Situation } from \"./Situation\";\r\n\r\nexport class IsbarContentField extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n\r\n        switch (this.props.current) {\r\n            case \"I\":\r\n                return <Introduction />\r\n            case \"S\":\r\n                return <Situation />\r\n            case \"B\":\r\n                return <Background />\r\n            case \"A\":\r\n                return <Assessment />\r\n            case \"R\":\r\n                return <Recommendation />\r\n            default: \r\n                // fail safe\r\n                return <Introduction />\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\Patient.js",[],"C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-complex\\IsbarComplexDevelopment.js",["98","99"],"import React from \"react\";\r\nimport { IsbarContentField } from \"./IsbarContentField\";\r\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\r\nimport { client } from \"fhirclient\";\r\n\r\nexport class IsbarComplexDevelopment extends React.Component {\r\n    \r\n    // client context\r\n    static contextType = IsbarClientContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            // state for the app display\r\n            current: \"I\",\r\n            loaded: false,\r\n            carePlan: null\r\n            // initialise careplan resource?\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        const client = this.context.client;\r\n        // search for the careplan related to this patient\r\n        this.LoadCarePlan()\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.setState({loaded: true})\r\n        })\r\n        // load the careplan\r\n    }\r\n\r\n    LoadCarePlan(){\r\n        return this.context.client.request(\"CarePlan?patient=\" + this.context.client.patient.id)\r\n        .then( res => {\r\n            // filter careplan\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loaded){\r\n\r\n            return (\r\n            \r\n                <div className=\"app-complex\">\r\n                    <div className=\"app-content\">\r\n                        <IsbarContentField current={this.state.current} />\r\n                    </div>\r\n    \r\n                    <div className=\"footer\">\r\n                        <div className=\"arrow\">&larr;</div>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"I\" })}>I</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"S\" })}>S</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"B\" })}>B</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"A\" })}>A</button>\r\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"R\" })}>R</button>\r\n                        <div className=\"arrow\">&rarr;</div>\r\n                    </div>\r\n    \r\n                </div>\r\n                \r\n            )\r\n        } else{\r\n            return(\r\n            <div>\r\n                Loading complex isbar form...\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Oscar\\Documents\\GitHub\\COMP3820-ISBAR\\isbar-complex-react\\src\\app-simple\\SimplePDF.js",["100"],"import React from \"react\";\r\nimport { Document, Page, View, Text, StyleSheet, Font } from '@react-pdf/renderer';\r\n\r\n// have to include them as a local file. probs.\r\n// Font.register({\r\n//     family: 'OpenSans',\r\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\r\n\r\n//     fontStyle: 'normal',\r\n//     fontWeight: 'normal'\r\n// });\r\n\r\n// Font.register({\r\n//     family: 'Oswald',\r\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\r\n// })\r\n\r\n// This is the pdf file that will be generated\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        // fontFamily: 'OpenSans',\r\n        backgroundColor: '#FFFFFF',\r\n        margin: 10,\r\n        padding: 20,\r\n    },\r\n    section: {\r\n        margin: 15\r\n    },\r\n    heading: {\r\n        fontSize: '16pt',\r\n    }\r\n});\r\nexport const SimplePDF = (props) => {\r\n\r\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\r\n    props.content.item.forEach((element, index) => {\r\n        if (typeof element.answer !== 'undefined') {\r\n\r\n            content[index] = element.answer[0].valueString\r\n        }\r\n    });\r\n    return (\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>I: Introduction</Text>\r\n                    <Text>{content[0]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>S: Situation</Text>\r\n                    <Text>{content[1]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>B: Background</Text>\r\n                    <Text>{content[2]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>A: Assessment</Text>\r\n                    <Text>{content[3]}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text style={styles.heading}>R: Recommendation</Text>\r\n                    <Text>{content[4]}</Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\nexport const IsobarDoc = (props) => {\r\n\r\n}\r\n\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":33},{"ruleId":"105","severity":1,"message":"109","line":7,"column":30,"nodeType":"107","messageId":"108","endLine":7,"endColumn":54},{"ruleId":"105","severity":1,"message":"110","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"105","severity":1,"message":"111","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":28},{"ruleId":"105","severity":1,"message":"109","line":4,"column":30,"nodeType":"107","messageId":"108","endLine":4,"endColumn":54},{"ruleId":"105","severity":1,"message":"112","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":27},{"ruleId":"105","severity":1,"message":"110","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":75,"column":3,"nodeType":"115","messageId":"116","endLine":92,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":10,"column":3,"nodeType":"115","messageId":"119","endLine":12,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":5,"column":5,"nodeType":"115","messageId":"119","endLine":7,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":5,"column":5,"nodeType":"115","messageId":"119","endLine":7,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":6,"column":5,"nodeType":"115","messageId":"119","endLine":8,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":5,"column":5,"nodeType":"115","messageId":"119","endLine":7,"endColumn":6},{"ruleId":"105","severity":1,"message":"120","line":96,"column":11,"nodeType":"107","messageId":"108","endLine":96,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":10,"column":5,"nodeType":"115","messageId":"119","endLine":12,"endColumn":6},{"ruleId":"105","severity":1,"message":"110","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":16},{"ruleId":"105","severity":1,"message":"120","line":25,"column":15,"nodeType":"107","messageId":"108","endLine":25,"endColumn":21},{"ruleId":"105","severity":1,"message":"121","line":2,"column":50,"nodeType":"107","messageId":"108","endLine":2,"endColumn":54},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'IsbarComplexDevelopment' is defined but never used.","Identifier","unusedVar","'newQuestionnaireResponse' is defined but never used.","'client' is defined but never used.","'isbarQuestionnaire' is defined but never used.","'simpleQuestionnaire' is defined but never used.","no-dupe-class-members","Duplicate name 'updateResponse'.","MethodDefinition","unexpected","no-useless-constructor","Useless constructor.","noUselessConstructor","'client' is assigned a value but never used.","'Font' is defined but never used.","no-global-assign","no-unsafe-negation"]