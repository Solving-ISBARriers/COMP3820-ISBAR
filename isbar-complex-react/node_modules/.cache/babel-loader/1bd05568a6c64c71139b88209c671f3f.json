{"ast":null,"code":"var _jsxFileName = \"/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarSimpleInputField.js\";\nimport React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\nimport { runInThisContext } from \"vm\"; // Class for the input field group.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ISBARSimpleInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      // turns true if it's isobar\n      isIsobar: false,\n      // would be good if we have a array of question-answer pair.\n      // hardcode the questionnaire object?\n      value: \"\",\n      questionnaire: {},\n      questionnaireResponse: {},\n      labels: [],\n      // labels for the questionnaire\n      answers: [] // answers for the questionnaire//\n\n    };\n  }\n\n  componentDidMount() {//this.setState(client, this.context);\n    //this comment chancd\n  }\n\n  changeToIsoar() {} // Load the text fields after the questionnaire and questionnaire responses are loaded.\n\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(IsbarClientContext.Consumer, {\n      children: ({\n        client,\n        error\n      }) => {\n        this.state.value = client;\n        console.log(client);\n\n        if (this.state.loaded) {\n          if (this.state.isIsobar) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"isbar-input-fields\",\n              children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"I\",\n                heading: \"Heading\",\n                value: this.context\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"S\",\n                heading: \"Heading\",\n                value: \"Loading....\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"O\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"B\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"A\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"R\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"isbar-input-fields\",\n              children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"I\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"S\",\n                heading: \"Heading\",\n                value: \"Loading....\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"B\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"A\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n                label: \"R\",\n                heading: \"Heading\",\n                value: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this);\n          }\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"isbar-loading\",\n            children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n              label: \"field1\",\n              heading: \"Heading\",\n              value: JSON.stringify(this.state.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n              label: \"field2\",\n              heading: \"Heading\",\n              value: \"Loading....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n              label: \"field3\",\n              heading: \"Heading\",\n              value: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nISBARSimpleInputField.contextType = IsbarClientContext;","map":{"version":3,"sources":["/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarSimpleInputField.js"],"names":["React","TextInputField","IsbarClientContext","runInThisContext","ISBARSimpleInputField","Component","constructor","props","state","loaded","isIsobar","value","questionnaire","questionnaireResponse","labels","answers","componentDidMount","changeToIsoar","render","client","error","console","log","context","JSON","stringify","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\nimport { runInThisContext } from \"vm\";\n\n// Class for the input field group.\nexport class ISBARSimpleInputField extends React.Component {\n    \n    static contextType = IsbarClientContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // used true if data is loaded\n            loaded: false,\n            // turns true if it's isobar\n            isIsobar: false,\n            // would be good if we have a array of question-answer pair.\n            // hardcode the questionnaire object?\n            value: \"\",\n            questionnaire: {},\n            questionnaireResponse: {}, \n            labels: [], // labels for the questionnaire\n            answers: [] // answers for the questionnaire//\n        };\n    }\n\n    componentDidMount() {\n        //this.setState(client, this.context);\n        //this comment chancd\n    }\n\n    changeToIsoar() {\n\n    }\n\n    // Load the text fields after the questionnaire and questionnaire responses are loaded.\n    render() {\n        <IsbarClientContext.Consumer>\n            {({client, error}) => {\n                this.state.value = client;\n                console.log(client);\n                \n        \n            \n        \n        if (this.state.loaded) {\n            if (this.state.isIsobar) {\n                return (\n                    <div className=\"isbar-input-fields\">\n                        <TextInputField label=\"I\" heading=\"Heading\" value={this.context} />\n                        <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n                        <TextInputField label=\"O\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"isbar-input-fields\">\n                        <TextInputField label=\"I\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n                        <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"isbar-loading\">\n                    <TextInputField label=\"field1\" heading=\"Heading\" value={JSON.stringify(this.state.value)} />\n                    <TextInputField label=\"field2\" heading=\"Heading\" value=\"Loading....\" />\n                    <TextInputField label=\"field3\" heading=\"Heading\" value=\"Loading...\" />\n                </div>\n            )\n        }}}\n        </IsbarClientContext.Consumer>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}