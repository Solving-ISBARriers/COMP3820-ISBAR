{"ast":null,"code":"var _jsxFileName = \"/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarSimpleInputField.js\";\nimport React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\"; // Class for the input field group.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ISBARSimpleInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      // would be good if we have a array of question-answer pair.\n      // hardcode the questionnaire object?\n      labels: [],\n      // labels for the questionnaire\n      answers: [] // answers for the questionnaire//\n\n    };\n  }\n\n  componentDidMount() {//this.setState(client, this.context);\n  } // Load the text fields after the questionnaire and questionnaire responses are loaded.\n\n\n  render() {\n    if (this.state.loaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"isbar-input-fields\",\n        children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n          label: \"field1\",\n          heading: \"Heading\",\n          value: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n          label: \"field2\",\n          heading: \"Heading\",\n          value: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n          label: \"field3\",\n          heading: \"Heading\",\n          value: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"isbar-loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\nISBARSimpleInputField.contextType = IsbarClientContext;","map":{"version":3,"sources":["/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarSimpleInputField.js"],"names":["React","TextInputField","IsbarClientContext","ISBARSimpleInputField","Component","constructor","props","state","loaded","labels","answers","componentDidMount","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,mBAAnC,C,CAEA;;;AACA,OAAO,MAAMC,qBAAN,SAAoCH,KAAK,CAACI,SAA1C,CAAoD;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,MAAM,EAAE,KAFG;AAGX;AACA;AACAC,MAAAA,MAAM,EAAE,EALG;AAKC;AACZC,MAAAA,OAAO,EAAE,EANE,CAMC;;AAND,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAE,CACf;AACH,GAhBsD,CAkBvD;;;AACAC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKL,KAAL,CAAWC,MAAf,EAAuB;AACrB,0BACE;AAAK,QAAA,KAAK,EAAC,oBAAX;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,QAAtB;AAA+B,UAAA,OAAO,EAAC,SAAvC;AAAiD,UAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,QAAtB;AAA+B,UAAA,OAAO,EAAC,SAAvC;AAAiD,UAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,QAAtB;AAA+B,UAAA,OAAO,EAAC,SAAvC;AAAiD,UAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATD,MASO;AACL,0BACE;AAAK,QAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AApCsD;AAA9CL,qB,CACFU,W,GAAcX,kB","sourcesContent":["import React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\n\n// Class for the input field group.\nexport class ISBARSimpleInputField extends React.Component {\n    static contextType = IsbarClientContext;\n    constructor(props) {\n      super(props);\n      this.state = {\n        // used true if data is loaded\n        loaded: false,\n        // would be good if we have a array of question-answer pair.\n        // hardcode the questionnaire object?\n        labels: [], // labels for the questionnaire\n        answers: [] // answers for the questionnaire//\n      };\n    }\n\n    componentDidMount(){\n        //this.setState(client, this.context);\n    }\n  \n    // Load the text fields after the questionnaire and questionnaire responses are loaded.\n    render() {\n      if (this.state.loaded) {\n        return (\n          <div class=\"isbar-input-fields\">\n            <TextInputField label=\"field1\" heading=\"Heading\" value=\"Loading...\" />\n            <TextInputField label=\"field2\" heading=\"Heading\" value=\"Loading...\" />\n            <TextInputField label=\"field3\" heading=\"Heading\" value=\"Loading...\" />\n  \n          </div>\n        )\n      } else {\n        return (\n          <div class=\"isbar-loading\">\n            Loading...\n          </div>\n        )\n      }\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}