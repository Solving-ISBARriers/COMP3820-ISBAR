{"ast":null,"code":"var _jsxFileName = \"/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/ISBARApplicationSimple.js\";\n\n/*\n  Application file for simple ISBAR app.\n  Classes can be separated later on.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './ISBARApplicationSimple.css';\nimport { FHIRClientContext } from \"FHIRClientContext\"; // This is the class for single unit of text input.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TextInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"isbar-text-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: this.props.name,\n        children: this.props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: this.props.name,\n        rows: \"4\",\n        value: this.state.value,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Class for the input field group.\n\n\nclass ISBARSimpleInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      // Array to store questionnaire.. name??\n      names: []\n    };\n  } // Load the text fields after the questionnaire and questionnaire responses are loaded.\n\n\n  render() {\n    if (this.state.loaded) {\n      return /*#__PURE__*/_jsxDEV(TextInputField, {\n        name: \"THis is the name\",\n        heading: \"Heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"ISBAR-loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} // Class for patient information. \n\n\nclass PatientInfoField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const client = this.context.client;\n  }\n\n  render() {\n    return;\n  }\n\n}\n/*\n The top application object. Responsible for:\n - Loading patient information\n - Loading questionnaire\n - Loading questionnaire response\n - Initiating the render of other components.\n */\n\n\nPatientInfoField.contextType = FHIRClientContext;\n\nclass ISBARApplicationSimple extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patient: 1\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"patient-info\",\n        children: /*#__PURE__*/_jsxDEV(PatientInfoField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(ISBARSimpleInputField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ISBARApplicationSimple;","map":{"version":3,"sources":["/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/ISBARApplicationSimple.js"],"names":["React","ReactDOM","FHIRClientContext","TextInputField","Component","constructor","props","state","value","handleChange","bind","event","setState","target","render","name","heading","ISBARSimpleInputField","loaded","names","PatientInfoField","loading","patient","error","componentDidMount","client","context","contextType","ISBARApplicationSimple"],"mappings":"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","sourcesContent":["/*\n  Application file for simple ISBAR app.\n  Classes can be separated later on.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './ISBARApplicationSimple.css';\nimport {FHIRClientContext} from \"FHIRClientContext\"\n\n// This is the class for single unit of text input.\nclass TextInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <div class=\"isbar-text-input-container\">\n        <label for={this.props.name}>{this.props.heading}</label>\n        <textarea\n          id={this.props.name}\n          rows=\"4\"\n          value={this.state.value}\n          onChange={this.handleChange} />\n      </div>\n    )\n\n  }\n}\n\n// Class for the input field group.\nclass ISBARSimpleInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      // Array to store questionnaire.. name??\n      names: []\n    };\n  }\n\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\n  render() {\n    if (this.state.loaded) {\n      return (<TextInputField name=\"THis is the name\" heading=\"Heading\" />)\n    } else {\n      return (\n        <div class=\"ISBAR-loading\">\n          Loading...\n        </div>\n      )\n    }\n  }\n}\n\n// Class for patient information. \nclass PatientInfoField extends React.Component {\n\n  static contextType = FHIRClientContext;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    }\n  }\n  componentDidMount() {\n    const client = this.context.client;\n  }\n\n  render() {\n    return\n  }\n}\n\n/*\n The top application object. Responsible for:\n - Loading patient information\n - Loading questionnaire\n - Loading questionnaire response\n - Initiating the render of other components.\n */\nclass ISBARApplicationSimple extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patient: 1\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* This is where the patient information will be displayed*/}\n        <header className=\"patient-info\">\n          <PatientInfoField />\n        </header>\n        <body>\n          <ISBARSimpleInputField />\n        </body>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default ISBARApplicationSimple;\n"]},"metadata":{},"sourceType":"module"}