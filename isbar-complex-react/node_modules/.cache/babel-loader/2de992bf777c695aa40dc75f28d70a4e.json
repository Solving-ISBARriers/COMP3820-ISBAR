{"ast":null,"code":"var _jsxFileName = \"/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarSimpleInputField.js\";\nimport React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\nimport { runInThisContext } from \"vm\"; // Class for the input field group.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ISBARSimpleInputField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      // turns true if it's isobar\n      isIsobar: false,\n      // would be good if we have a array of question-answer pair.\n      // hardcode the questionnaire object?\n      client: '',\n      questionnaire: {},\n      questionnaireResponse: {},\n      labels: [],\n      // labels for the questionnaire\n      answers: [] // answers for the questionnaire//\n\n    };\n  }\n\n  componentDidMount() {\n    this.state.client = this.context.client; //this.setState(client, this.context);\n    //this comment chancd\n  }\n\n  changeToIsoar() {} // Load the text fields after the questionnaire and questionnaire responses are loaded.\n\n\n  render() {\n    this.state.value = this.context.client;\n    var patient = this.state.value.patient;\n\n    if (this.state.loaded) {\n      if (this.state.isIsobar) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"isbar-input-fields\",\n          children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"I\",\n            heading: \"Heading\",\n            value: this.context\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"S\",\n            heading: \"Heading\",\n            value: \"Loading....\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"O\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"B\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"A\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"R\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"isbar-input-fields\",\n          children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"I\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"S\",\n            heading: \"Heading\",\n            value: \"Loading....\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"B\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"A\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n            label: \"R\",\n            heading: \"Heading\",\n            value: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isbar-loading\",\n        children: [/*#__PURE__*/_jsxDEV(TextInputField, {\n          label: \"field1\",\n          heading: \"Heading\",\n          value: JSON.stringify(this.state.client)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n          label: \"field2\",\n          heading: \"Heading\",\n          value: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n          label: \"field3\",\n          heading: \"Heading\",\n          value: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    } // return(\n    // <IsbarClientContext.Consumer>\n    //     {({client, error}) => {\n    //         this.state.value = client;\n    //         console.log(client);\n    // if (this.state.loaded) {\n    //     if (this.state.isIsobar) {\n    //         return (\n    //             <div className=\"isbar-input-fields\">\n    //                 <TextInputField label=\"I\" heading=\"Heading\" value={this.context} />\n    //                 <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n    //                 <TextInputField label=\"O\" heading=\"Heading\" value=\"Loading...\" />\n    //                 <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n    //                 <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n    //                 <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n    //             </div>\n    //         )\n    //     } else {\n    //         return (\n    //             <div className=\"isbar-input-fields\">\n    //                 <TextInputField label=\"I\" heading=\"Heading\" value=\"Loading...\" />\n    //                 <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n    //                 <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n    //                 <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n    //                 <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n    //             </div>\n    //         )\n    //     }\n    // } else {\n    //     return (\n    //         <div className=\"isbar-loading\">\n    //             <TextInputField label=\"field1\" heading=\"Heading\" value={JSON.stringify(this.state.value)} />\n    //             <TextInputField label=\"field2\" heading=\"Heading\" value=\"Loading....\" />\n    //             <TextInputField label=\"field3\" heading=\"Heading\" value=\"Loading...\" />\n    //         </div>\n    //     )\n    // }}}\n    // </IsbarClientContext.Consumer>\n    // )\n\n  }\n\n}\nISBARSimpleInputField.contextType = IsbarClientContext;","map":{"version":3,"sources":["/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarSimpleInputField.js"],"names":["React","TextInputField","IsbarClientContext","runInThisContext","ISBARSimpleInputField","Component","constructor","props","state","loaded","isIsobar","client","questionnaire","questionnaireResponse","labels","answers","componentDidMount","context","changeToIsoar","render","value","patient","JSON","stringify","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextInputField from \"./TextInputField\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\nimport { runInThisContext } from \"vm\";\n\n// Class for the input field group.\nexport class ISBARSimpleInputField extends React.Component {\n    \n    static contextType = IsbarClientContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // used true if data is loaded\n            loaded: false,\n            // turns true if it's isobar\n            isIsobar: false,\n            // would be good if we have a array of question-answer pair.\n            // hardcode the questionnaire object?\n            client:'',\n            questionnaire: {},\n            questionnaireResponse: {}, \n            labels: [], // labels for the questionnaire\n            answers: [] // answers for the questionnaire//\n        };\n    }\n\n    componentDidMount() {\n        this.state.client = this.context.client;\n        //this.setState(client, this.context);\n        //this comment chancd\n    }\n\n    changeToIsoar() {\n\n    }\n\n    // Load the text fields after the questionnaire and questionnaire responses are loaded.\n    render() {\n        this.state.value = this.context.client;\n        var patient = this.state.value.patient;\n        if (this.state.loaded) {\n            if (this.state.isIsobar) {\n                return (\n                    <div className=\"isbar-input-fields\">\n                        <TextInputField label=\"I\" heading=\"Heading\" value={this.context} />\n                        <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n                        <TextInputField label=\"O\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"isbar-input-fields\">\n                        <TextInputField label=\"I\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n                        <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n                        <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"isbar-loading\">\n                    <TextInputField label=\"field1\" heading=\"Heading\" value={JSON.stringify(this.state.client)} />\n                    <TextInputField label=\"field2\" heading=\"Heading\" value=\"Loading....\" />\n                    <TextInputField label=\"field3\" heading=\"Heading\" value=\"Loading...\" />\n                </div>\n            )\n        }\n\n        // return(\n        // <IsbarClientContext.Consumer>\n        //     {({client, error}) => {\n        //         this.state.value = client;\n        //         console.log(client);\n                \n        \n            \n        \n        // if (this.state.loaded) {\n        //     if (this.state.isIsobar) {\n        //         return (\n        //             <div className=\"isbar-input-fields\">\n        //                 <TextInputField label=\"I\" heading=\"Heading\" value={this.context} />\n        //                 <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n        //                 <TextInputField label=\"O\" heading=\"Heading\" value=\"Loading...\" />\n        //                 <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n        //                 <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n        //                 <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n\n        //             </div>\n        //         )\n        //     } else {\n        //         return (\n        //             <div className=\"isbar-input-fields\">\n        //                 <TextInputField label=\"I\" heading=\"Heading\" value=\"Loading...\" />\n        //                 <TextInputField label=\"S\" heading=\"Heading\" value=\"Loading....\" />\n        //                 <TextInputField label=\"B\" heading=\"Heading\" value=\"Loading...\" />\n        //                 <TextInputField label=\"A\" heading=\"Heading\" value=\"Loading...\" />\n        //                 <TextInputField label=\"R\" heading=\"Heading\" value=\"Loading...\" />\n        //             </div>\n        //         )\n        //     }\n        // } else {\n        //     return (\n        //         <div className=\"isbar-loading\">\n        //             <TextInputField label=\"field1\" heading=\"Heading\" value={JSON.stringify(this.state.value)} />\n        //             <TextInputField label=\"field2\" heading=\"Heading\" value=\"Loading....\" />\n        //             <TextInputField label=\"field3\" heading=\"Heading\" value=\"Loading...\" />\n        //         </div>\n        //     )\n        // }}}\n        // </IsbarClientContext.Consumer>\n        // )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}