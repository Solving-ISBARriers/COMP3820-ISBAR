{"ast":null,"code":"var _jsxFileName = \"/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarFhirClient.js\";\n// This is the file to deal with fhir client\nimport React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\"; // React client context so it is accessible in differernt parts of code.\n// by exporting, it should be accessible from various part of the code.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IsbarFhirClientContext = /*#__PURE__*/React.createContext({});\nexport class IsbarFhirClientProvider extends React.Component {\n  constructor(props) {}\n\n  componentDidMount() {\n    console.log(\"Mounted\");\n    SMART.ready().then(client => this.setState({\n      client\n    }), error => this.setState({\n      error\n    }));\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // value is state or none.\n      _jsxDEV(IsbarFhirClientContext.Provider, {\n        value: this.state || {},\n        children: /*#__PURE__*/_jsxDEV(IsbarFhirClientContext.Consumer, {\n          children: ({\n            client,\n            error\n          }) => {\n            // any error that SMART.ready() may have been rejected with\n            if (error) {\n              return /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: error.stack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 36\n              }, this);\n            } // if client is already available render the subtree (patient and input in this case.)\n\n\n            if (client) {\n              return this.props.children;\n            } // client is undefined until SMART.ready() is fulfilled\n\n\n            return \"Authorizing...\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/src/IsbarFhirClient.js"],"names":["React","oauth2","SMART","IsbarFhirClientContext","createContext","IsbarFhirClientProvider","Component","constructor","props","componentDidMount","console","log","ready","then","client","setState","error","render","state","stack","children"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,KAAnB,QAAgC,YAAhC,C,CAEA;AACA;;;AACA,OAAO,MAAMC,sBAAsB,gBAAGH,KAAK,CAACI,aAAN,CAAoB,EAApB,CAA/B;AAEP,OAAO,MAAMC,uBAAN,SAAsCL,KAAK,CAACM,SAA5C,CAAsD;AAEzDC,EAAAA,WAAW,CAACC,KAAD,EAAO,CAEjB;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,IAAAA,KAAK,CAACU,KAAN,GAAcC,IAAd,CACKC,MAAD,IAAY,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CADhB,EAEKE,KAAD,IAAW,KAAKD,QAAL,CAAc;AAAEC,MAAAA;AAAF,KAAd,CAFf;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA,cAAC,sBAAD,CAAwB,QAAxB;AAAiC,QAAA,KAAK,EAAE,KAAKC,KAAL,IAAc,EAAtD;AAAA,+BACI,QAAC,sBAAD,CAAwB,QAAxB;AAAA,oBACK,CAAC;AAAEJ,YAAAA,MAAF;AAAUE,YAAAA;AAAV,WAAD,KAAuB;AACpB;AACA,gBAAIA,KAAJ,EAAW;AACP,kCAAO;AAAA,0BAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAJmB,CAMpB;;;AACA,gBAAIL,MAAJ,EAAY;AACR,qBAAO,KAAKN,KAAL,CAAWY,QAAlB;AACH,aATmB,CAWpB;;;AACA,mBAAO,gBAAP;AACH;AAdL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAqBH;;AAnCwD","sourcesContent":["// This is the file to deal with fhir client\n\nimport React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\n\n// React client context so it is accessible in differernt parts of code.\n// by exporting, it should be accessible from various part of the code.\nexport const IsbarFhirClientContext = React.createContext({});\n\nexport class IsbarFhirClientProvider extends React.Component {\n\n    constructor(props){\n        \n    }\n\n    componentDidMount() {\n        console.log(\"Mounted\");\n        SMART.ready().then(\n            (client) => this.setState({ client }),\n            (error) => this.setState({ error })\n        );\n    }\n    render() {\n        return (\n            // value is state or none.\n            <IsbarFhirClientContext.Provider value={this.state || {}}>\n                <IsbarFhirClientContext.Consumer>\n                    {({ client, error }) => {\n                        // any error that SMART.ready() may have been rejected with\n                        if (error) {\n                            return <pre>{error.stack}</pre>;\n                        }\n\n                        // if client is already available render the subtree (patient and input in this case.)\n                        if (client) {\n                            return this.props.children;\n                        }\n\n                        // client is undefined until SMART.ready() is fulfilled\n                        return \"Authorizing...\";\n                    }}\n                </IsbarFhirClientContext.Consumer>\n            </IsbarFhirClientContext.Provider>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}