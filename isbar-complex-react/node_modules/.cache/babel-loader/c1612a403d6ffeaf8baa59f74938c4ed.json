{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass HttpError extends Error {\n  constructor(message, statusCode, statusText) {\n    super(message);\n    this.message = message;\n    this.name = \"HttpError\";\n    this.statusCode = statusCode;\n    this.status = statusCode;\n    this.statusText = statusText;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      statusCode: this.statusCode,\n      status: this.status,\n      statusText: this.statusText,\n      message: this.message\n    };\n  }\n\n  static create(failure) {\n    // start with generic values\n    let status = 0;\n    let statusText = \"Error\";\n    let message = \"Unknown error\";\n\n    if (failure) {\n      if (typeof failure == \"object\") {\n        if (failure instanceof Error) {\n          message = failure.message;\n        } else if (failure.error) {\n          status = failure.error.status || 0;\n          statusText = failure.error.statusText || \"Error\";\n\n          if (failure.error.responseText) {\n            message = failure.error.responseText;\n          }\n        }\n      } else if (typeof failure == \"string\") {\n        message = failure;\n      }\n    }\n\n    return new HttpError(message, status, statusText);\n  }\n\n}\n\nexports.default = HttpError;","map":{"version":3,"sources":["/Users/myoungseokjeong/Desktop/Masters/COMP3820_digital_health_software_project/Code/COMP3820-ISBAR/isbar-simple-react/node_modules/fhirclient/lib/HttpError.js"],"names":["Object","defineProperty","exports","value","HttpError","Error","constructor","message","statusCode","statusText","name","status","toJSON","create","failure","error","responseText","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,MAAMC,SAAN,SAAwBC,KAAxB,CAA8B;AAC5BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,UAAV,EAAsBC,UAAtB,EAAkC;AAC3C,UAAMF,OAAN;AACA,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKG,IAAL,GAAY,WAAZ;AACA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKG,MAAL,GAAcH,UAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAO;AACLF,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELF,MAAAA,UAAU,EAAE,KAAKA,UAFZ;AAGLG,MAAAA,MAAM,EAAE,KAAKA,MAHR;AAILF,MAAAA,UAAU,EAAE,KAAKA,UAJZ;AAKLF,MAAAA,OAAO,EAAE,KAAKA;AALT,KAAP;AAOD;;AAEY,SAANM,MAAM,CAACC,OAAD,EAAU;AACrB;AACA,QAAIH,MAAM,GAAG,CAAb;AACA,QAAIF,UAAU,GAAG,OAAjB;AACA,QAAIF,OAAO,GAAG,eAAd;;AAEA,QAAIO,OAAJ,EAAa;AACX,UAAI,OAAOA,OAAP,IAAkB,QAAtB,EAAgC;AAC9B,YAAIA,OAAO,YAAYT,KAAvB,EAA8B;AAC5BE,UAAAA,OAAO,GAAGO,OAAO,CAACP,OAAlB;AACD,SAFD,MAEO,IAAIO,OAAO,CAACC,KAAZ,EAAmB;AACxBJ,UAAAA,MAAM,GAAGG,OAAO,CAACC,KAAR,CAAcJ,MAAd,IAAwB,CAAjC;AACAF,UAAAA,UAAU,GAAGK,OAAO,CAACC,KAAR,CAAcN,UAAd,IAA4B,OAAzC;;AAEA,cAAIK,OAAO,CAACC,KAAR,CAAcC,YAAlB,EAAgC;AAC9BT,YAAAA,OAAO,GAAGO,OAAO,CAACC,KAAR,CAAcC,YAAxB;AACD;AACF;AACF,OAXD,MAWO,IAAI,OAAOF,OAAP,IAAkB,QAAtB,EAAgC;AACrCP,QAAAA,OAAO,GAAGO,OAAV;AACD;AACF;;AAED,WAAO,IAAIV,SAAJ,CAAcG,OAAd,EAAuBI,MAAvB,EAA+BF,UAA/B,CAAP;AACD;;AA5C2B;;AAgD9BP,OAAO,CAACe,OAAR,GAAkBb,SAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass HttpError extends Error {\n  constructor(message, statusCode, statusText) {\n    super(message);\n    this.message = message;\n    this.name = \"HttpError\";\n    this.statusCode = statusCode;\n    this.status = statusCode;\n    this.statusText = statusText;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      statusCode: this.statusCode,\n      status: this.status,\n      statusText: this.statusText,\n      message: this.message\n    };\n  }\n\n  static create(failure) {\n    // start with generic values\n    let status = 0;\n    let statusText = \"Error\";\n    let message = \"Unknown error\";\n\n    if (failure) {\n      if (typeof failure == \"object\") {\n        if (failure instanceof Error) {\n          message = failure.message;\n        } else if (failure.error) {\n          status = failure.error.status || 0;\n          statusText = failure.error.statusText || \"Error\";\n\n          if (failure.error.responseText) {\n            message = failure.error.responseText;\n          }\n        }\n      } else if (typeof failure == \"string\") {\n        message = failure;\n      }\n    }\n\n    return new HttpError(message, status, statusText);\n  }\n\n}\n\nexports.default = HttpError;"]},"metadata":{},"sourceType":"script"}