{"ast":null,"code":"var _jsxFileName = \"/Users/sophia/COMP3820-ISBAR/src/app-simple/SimplePDF.js\";\nimport React from \"react\";\nimport { Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer'; // have to include them as a local file. probs.\n// Font.register({\n//     family: 'OpenSans',\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\n//     fontStyle: 'normal',\n//     fontWeight: 'normal'\n// });\n// Font.register({\n//     family: 'Oswald',\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n// })\n// This is the pdf file that will be generated\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    // fontFamily: 'OpenSans',\n    backgroundColor: '#FFFFFF',\n    margin: 10,\n    padding: 20\n  },\n  section: {\n    margin: 15\n  },\n  heading: {\n    fontSize: '16pt'\n  }\n});\nexport const SimplePDF = props => {\n  var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"];\n  props.content.item.forEach((element, index) => {\n    if (typeof element.answer !== 'undefined') {\n      content[index] = element.answer[0].valueString;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.heading,\n          children: \"I: Introduction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: content[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.heading,\n          children: \"S: Situation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: content[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.heading,\n          children: \"B: Background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: content[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.heading,\n          children: \"A: Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: content[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.heading,\n          children: \"R: Recommendation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: content[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c = SimplePDF;\nexport const IsobarDoc = props => {};\n_c2 = IsobarDoc;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimplePDF\");\n$RefreshReg$(_c2, \"IsobarDoc\");","map":{"version":3,"sources":["/Users/sophia/COMP3820-ISBAR/src/app-simple/SimplePDF.js"],"names":["React","Document","Page","View","Text","StyleSheet","styles","create","page","backgroundColor","margin","padding","section","heading","fontSize","SimplePDF","props","content","item","forEach","element","index","answer","valueString","IsobarDoc"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer';\n\n// have to include them as a local file. probs.\n// Font.register({\n//     family: 'OpenSans',\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\n\n//     fontStyle: 'normal',\n//     fontWeight: 'normal'\n// });\n\n// Font.register({\n//     family: 'Oswald',\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n// })\n\n// This is the pdf file that will be generated\n\nconst styles = StyleSheet.create({\n    page: {\n        // fontFamily: 'OpenSans',\n        backgroundColor: '#FFFFFF',\n        margin: 10,\n        padding: 20,\n    },\n    section: {\n        margin: 15\n    },\n    heading: {\n        fontSize: '16pt',\n    }\n});\nexport const SimplePDF = (props) => {\n\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\n    props.content.item.forEach((element, index) => {\n        if (typeof element.answer !== 'undefined') {\n\n            content[index] = element.answer[0].valueString\n        }\n    });\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>I: Introduction</Text>\n                    <Text>{content[0]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>S: Situation</Text>\n                    <Text>{content[1]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>B: Background</Text>\n                    <Text>{content[2]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>A: Assessment</Text>\n                    <Text>{content[3]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>R: Recommendation</Text>\n                    <Text>{content[4]}</Text>\n                </View>\n            </Page>\n        </Document>\n    )\n}\nexport const IsobarDoc = (props) => {\n\n}\n\n"]},"metadata":{},"sourceType":"module"}