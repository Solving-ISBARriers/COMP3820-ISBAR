{"ast":null,"code":"var _jsxFileName = \"/Users/sophia/COMP3820-ISBAR/src/common/SimpleTextArea.js\";\nimport React from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography'; // this text area calls parent callback 5 secs after no button press.\n// updateField callback function given as the prop will fire when \n// there is no input for specified timeout duration.\n// this was added to optimise the update process.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SimpleTextArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      timeout: null,\n      // timeout delay\n      delay: 5000\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      value: this.props.initialValue\n    });\n  } // clear timeout when user is in different screen\n\n\n  componentWillUnmount() {\n    clearTimeout(this.state.timeout);\n  }\n\n  handleChange(event) {\n    // set the value of this field\n    this.setState({\n      value: event.target.value\n    }); // clear the timeout\n\n    clearTimeout(this.state.timeout); // set the timeout\n\n    this.setState({\n      timeout: setTimeout(() => {\n        this.props.updateField(this.state.value);\n      }, this.state.delay)\n    });\n  }\n\n  render() {\n    if (this.props.visible) {\n      return /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          children: this.props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          placeholder: this.props.placeholder,\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        sx: {\n          display: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: this.props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          placeholder: this.props.placeholder,\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/sophia/COMP3820-ISBAR/src/common/SimpleTextArea.js"],"names":["React","TextField","Stack","Typography","SimpleTextArea","Component","constructor","props","state","value","timeout","delay","handleChange","bind","componentDidMount","setState","initialValue","componentWillUnmount","clearTimeout","event","target","setTimeout","updateField","render","visible","label","placeholder","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;AACA;AACA;AACA;;;AACA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE,IAFA;AAGT;AACAC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWS;AAApB,KAAd;AACH,GAduD,CAgBxD;;;AACAC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,YAAY,CAAC,KAAKV,KAAL,CAAWE,OAAZ,CAAZ;AACH;;AACDE,EAAAA,YAAY,CAACO,KAAD,EAAQ;AAEhB;AACA,SAAKJ,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEU,KAAK,CAACC,MAAN,CAAaX;AAAtB,KAAd,EAHgB,CAIhB;;AACAS,IAAAA,YAAY,CAAC,KAAKV,KAAL,CAAWE,OAAZ,CAAZ,CALgB,CAMhB;;AACA,SAAKK,QAAL,CAAc;AACVL,MAAAA,OAAO,EAAEW,UAAU,CAAC,MAAM;AAAE,aAAKd,KAAL,CAAWe,WAAX,CAAuB,KAAKd,KAAL,CAAWC,KAAlC;AAA0C,OAAnD,EACf,KAAKD,KAAL,CAAWG,KADI;AADT,KAAd;AAIH;;AAEDY,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKhB,KAAL,CAAWiB,OAAf,EAAwB;AACpB,0BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,GAApB;AAAA,oBACK,KAAKjB,KAAL,CAAWkB;AADhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,SAAS,MAA9B;AACI,UAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWmB,WAD5B;AAEI,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,KAFtB;AAGI,UAAA,QAAQ,EAAE,KAAKG;AAHnB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAdD,MAcO;AACH,0BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AACA,QAAA,EAAE,EAAE;AACAe,UAAAA,OAAO,EAAE;AADT,SADJ;AAAA,gCAII,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBACK,KAAKpB,KAAL,CAAWkB;AADhB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,SAAS,MAA9B;AACI,UAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWmB,WAD5B;AAEI,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,KAFtB;AAGI,UAAA,QAAQ,EAAE,KAAKG;AAHnB;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH;AACJ;;AAjEuD","sourcesContent":["import React from \"react\";\nimport TextField from '@mui/material/TextField'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\n\n// this text area calls parent callback 5 secs after no button press.\n// updateField callback function given as the prop will fire when \n// there is no input for specified timeout duration.\n// this was added to optimise the update process.\nexport default class SimpleTextArea extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: \"\",\n            timeout: null,\n            // timeout delay\n            delay: 5000\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ value: this.props.initialValue })\n    }\n\n    // clear timeout when user is in different screen\n    componentWillUnmount() {\n        clearTimeout(this.state.timeout)\n    }\n    handleChange(event) {\n\n        // set the value of this field\n        this.setState({ value: event.target.value });\n        // clear the timeout\n        clearTimeout(this.state.timeout)\n        // set the timeout\n        this.setState({\n            timeout: setTimeout(() => { this.props.updateField(this.state.value) },\n                this.state.delay)\n        })\n    }\n\n    render() {\n        if (this.props.visible) {\n            return (\n                <Stack spacing={1}>\n                    <Typography variant='p'>\n                        {this.props.label}\n                    </Typography>\n\n                    <TextField fullWidth multiline\n                        placeholder={this.props.placeholder}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </Stack>\n            )\n        } else {\n            return (\n                <Stack spacing={1} \n                sx={{\n                    display: 'none'\n                }}>\n                    <Typography variant='h5'>\n                        {this.props.label}\n                    </Typography>\n                    <TextField fullWidth multiline\n                        placeholder={this.props.placeholder}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </Stack>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}