{"version":3,"sources":["Launcher.js","IsbarFhirClient.js","common/DisplayHelper.js","app-simple/SimplePDF.js","common/SimpleTextArea.js","common/FHIRAutocomplete.js","app-simple/IsbarSimpleApp.js","app-complex/Assessment.js","app-complex/Background.js","app-complex/Introduction.js","app-complex/Recommendation.js","app-complex/Situation.js","app-complex/Patient.js","app-complex/IsbarComplexApp.js","app-complex/IsbarContentField.js","app-complex/IsbarComplexDevelopment.js","SimpleHistory.js","Home.js","App.js","index.js"],"names":["Launcher","SMART","authorize","clientId","scope","redirectUri","iss","completeInTarget","className","React","Component","IsbarClientContext","createContext","IsbarClientProvider","props","state","client","error","simpleForms","complexForms","ready","then","setState","Provider","value","this","Consumer","console","log","stack","children","getSimpleName","name","prefix","given","family","styles","StyleSheet","create","page","backgroundColor","padding","section","marginTop","marginBottom","title","fontSize","textAlign","heading","content","header","display","flexDirection","patientSection","flexGrow","practitionerSection","SimplePDF","useContext","item","forEach","element","index","answer","valueString","author","recipient","subject","size","style","birthDate","SimpleTextArea","timeout","delay","handleChange","bind","initialValue","clearTimeout","event","target","setTimeout","updateField","visible","Stack","spacing","Typography","variant","label","TextField","fullWidth","multiline","placeholder","onChange","sx","FHIRAutocomplete","answerSet","input","handleInputChange","updatAnswerSet","queryString","resourceName","inputString","split","searchTerm","queries","context","request","res","resources","total","entry","push","getLabel","resource","id","newInput","Autocomplete","disablePortal","autoSelect","newValue","onSelect","onInputChange","options","renderInput","params","borderWidth","contextType","IsbarSimpleApp","loaded","isIsobar","published","uploaded","patient","updateFieldValue","onRecipientSelect","createNewForm","questionnaireID","patientID","sourceID","user","read","newForm","resourceType","text","questionnaire","status","reference","extension","url","valueReference","linkId","formID","hasOwnProperty","uploadToServer","update","prevContent","newContent","Grid","container","align","justify","borderBottomWidth","borderBottomColor","borderBottomStyle","xs","color","ArrowBack","onClick","goBack","cursor","FormControlLabel","control","Switch","checked","labelPlacement","alignSelf","justifySelf","document","fileName","Button","disabled","getFieldValue","Item","styled","Paper","theme","typography","body2","palette","secondary","Assessment","width","minRows","type","Box","rowSpacing","columnSpacing","sm","md","Background","FormControl","columns","component","m","noValidate","autoComplete","Checkbox","Introduction","InputLabel","Select","labelId","MenuItem","Recommendation","rows","CheckboxesGroup","useState","impairment","jason","antoine","aggression","others","resistive","dementia","depression","self","noissues","faecalcontinence","urinarycontinence","FormLabel","FormGroup","AirwaySelect","setAirway","minWidth","BreathingSelect","setBreathing","PulseSelect","setPulse","Situation","responseExist","questionnaireResponse","saveState","formState","PatientName","find","nameRecord","use","join","PatientBanner","gender","address","city","Patient","loading","_loader","catch","message","IsbarComplexApp","IsbarContentField","current","carePlan","LoadCarePlan","SimpleHistory","fields","field","headerName","description","flex","cellClassName","headerAlign","entries","data","updateTable","lastUpdated","action","meta","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getDateTimeString","forceUpdate","cellParam","colDef","editForm","height","pageSize","rowsPerPageOptions","disableColumnMenu","disableSelectionOnClick","onCellClick","param","Home","AppController","isMenu","isSimple","simpleResponses","createNew","simpleFormID","editSimpleForm","loadSimple","loadQuestionnaireID","loadSimpleIsbars","Promise","all","isbarQuestionnaire","response","result","resolveReferences","filter","Accordion","defaultExpanded","AccordionSummary","expandIcon","marginRight","AccordionDetails","backToMenu","App","basename","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b6ee656d.chunk.js","sourcesContent":["// Launcher file for the app. \nimport React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\n\n/**\n * Typically the launch page is an empty page with a `SMART.authorize`\n * call in it. This isbased on the example code from:\n * https://codesandbox.io/s/fhir-client-react-react-router-context-0q3n8?file=/src/components/Launcher.js\n * \n *\n */\nexport default class Launcher extends React.Component {\n    \n    /**\n     * This is configured to make a Standalone Launch, just in case it\n     * is loaded directly. An EHR can still launch it by passing `iss`\n     * and `launch` url parameters\n     */\n    componentDidMount() {\n\n        SMART.authorize({\n            clientId: \"my-client-id\",\n            scope: \"launch launch/patient openid fhirUser patient/*.read patient/*.write\",\n            redirectUri: \"./isbar-app\",\n            iss: 'https://launch.smarthealthit.org/v/r4/sim/eyJoIjoiMSIsImoiOiIxIn0/fhir',\n            // Redirect to main screen.\n            \n            completeInTarget: true\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"loading-container\">\n                Launching the ISBAR handover form..\n            </div>\n            )\n    }\n}","// This is the file to deal with fhir client\n// Client context is created and updated.\n\nimport React from \"react\";\nimport { client, oauth2 as SMART } from \"fhirclient\";\n\n// React client context so it is accessible in differernt parts of code.\n// by exporting, it should be accessible from various part of the code.\nexport const IsbarClientContext = React.createContext({});\n\nexport class IsbarClientProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            client: null, // client object\n            error: null, // error message\n            simpleForms: null, // simple isbar forms (questionnaireResponses)\n            complexForms: null // complex isbar forms ()\n        }\n    }\n\n    componentDidMount() {\n        // Wait until the SMART client is ready, then save the client object as its state.\n        SMART.ready().then(\n            (client) => this.setState({ client }),\n            (error) => this.setState({ error })\n        )\n        // Load the relevant resources\n    }\n\n    render() {\n\n        return (\n            // When the client is not loaded, it displays authorizing message.\n            // Once the client is loaded, display the child components.\n            <IsbarClientContext.Provider value={this.state || {}}>\n                <IsbarClientContext.Consumer>\n                    {({ client, error }) => {\n                        console.log(\"Client\");\n                        console.log(client);\n                        // any error that SMART.ready() may have been rejected with\n                        if (error) {\n                            return <pre>{error.stack}</pre>;\n                        }\n\n                        // if client is already available render the subtree (patient and input in this case.)\n                        if (client) {\n\n                            return this.props.children;\n                        }\n                        // client is undefined until SMART.ready() is fulfilled. show loading message\n                        return (\n                            <div className=\"loading-container\">\n                                Launching the ISBAR handover form..\n                            </div>\n                        )\n                    }}\n                </IsbarClientContext.Consumer>\n            </IsbarClientContext.Provider>\n        );\n    }\n}","\n// get the simplified verison (first prefix, given and family name)\n// of the humanName fhir resource\nexport function getSimpleName(name){\n    if(!name.prefix[0]){\n        return name.given[0] + \" \" + name.family\n    }\n    return name.prefix[0] + \" \" + name.given[0] + \" \" + name.family\n}\n\n// takes in the time string that can be interpreted by date of js \n// returns time in format of YYYY-MM-DD HH:MM\nexport function getDateTimeString(time){\n    const date = new Date(time)\n    return date.getFullYear() + \"-\"\n        + date.getMonth() + \"-\"\n        + date.getDate() + \" \"\n        + date.getHours() + \":\"\n        + date.getMinutes()\n}","import React, { useContext } from \"react\";\nimport { Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer';\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { getSimpleName } from \"../common/DisplayHelper\";\nimport { textAlign } from \"@mui/system\";\n\n// This is the pdf file that will be generated\n\nconst styles = StyleSheet.create({\n    page: {\n        // fontFamily: 'OpenSans',\n        backgroundColor: '#FFFFFF',\n        padding: '50pt',\n    },\n    section: {\n        marginTop: '15pt',\n        marginBottom: '15pt'\n\n    },\n    title: {\n        fontSize: '25pt',\n        textAlign: 'center',\n        marginBottom: '25px'\n    },\n    heading: {\n        fontSize: '16pt',\n        marginBottom: '10pt',\n        marginTop: '15pt'\n    },\n    content: {\n        fontSize: '12pt'\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    patientSection: {\n        flexGrow: 1,\n        marginTop: '15pt',\n        marginBottom: '15pt'\n    },\n    practitionerSection: {\n        flexGrow: 1,\n        marginTop: '15pt',\n        marginBottom: '15pt',\n        // textAlign: 'right'\n    }\n});\n\nexport const SimplePDF = (props) => {\n    const { client } = useContext(IsbarClientContext)\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\n    // console.log(props.author)\n    // console.log(props.recipient)\n    // console.log(props.subject)\n    // need to resolve the practitioner and stuff, or more like given to it.\n    props.content.item.forEach((element, index) => {\n        if (typeof element.answer !== 'undefined') {\n\n            content[index] = element.answer[0].valueString\n        }\n    });\n    if(props.author && props.recipient && props.subject){\n\n        return (\n            <Document>\n                <Page size=\"A4\" style={styles.page}>\n                    <Text style={styles.title}> Simple ISBAR/ISOBAR handover form</Text>\n                    <View style={styles.header}>\n                        <View style={styles.patientSection}>\n                            <Text style={styles.heading}>Patient information</Text>\n                            <Text style={styles.content}>{\"Name: \" + getSimpleName(props.subject.name[0])}</Text>\n                            <Text style={styles.content}>{\"DOB: \" + props.subject.birthDate}</Text>\n                        </View>\n                        <View style={styles.practitionerSection}>\n                            <Text style={styles.heading}>Author</Text>\n                            <Text style={styles.content}>{getSimpleName(props.author.name[0])}</Text>\n                            <Text style={styles.heading}>Recipient</Text>\n                            <Text style={styles.content}>{getSimpleName(props.recipient.name[0])}</Text>\n                        </View>\n                    </View>\n                    <View style={styles.section}>\n                        <Text style={styles.heading}>Introduction</Text>\n                        <Text style={styles.content}>{content[0]}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text style={styles.heading}>Situation</Text>\n                        <Text style={styles.content}>{content[1]}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text style={styles.heading}>Observation</Text>\n                        <Text style={styles.content}>{content[2]}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text style={styles.heading}>Background</Text>\n                        <Text style={styles.content}>{content[3]}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text style={styles.heading}>Assessment</Text>\n                        <Text style={styles.content}>{content[4]}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text style={styles.heading}>Recommendation</Text>\n                        <Text style={styles.content}>{content[5]}</Text>\n                    </View>\n                </Page>\n            </Document>\n        )\n    } else{\n\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n                <Text style={styles.title}> Simple ISBAR/ISOBAR handover form</Text>\n                <View style={styles.header}>\n                    <View style={styles.patientSection}>\n                        <Text style={styles.heading}>Patient information</Text>\n                        <Text style={styles.content}>{\"Name: \"}</Text>\n                        <Text style={styles.content}>{\"DOB: \"}</Text>\n                    </View>\n                    <View style={styles.practitionerSection}>\n                        <Text style={styles.heading}>Author</Text>\n                        \n                        <Text style={styles.heading}>Recipient</Text>\n                        \n                    </View>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>Introduction</Text>\n                    <Text style={styles.content}>{content[0]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>Situation</Text>\n                    <Text style={styles.content}>{content[1]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>Background</Text>\n                    <Text style={styles.content}>{content[2]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>Assessment</Text>\n                    <Text style={styles.content}>{content[3]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>Recommendation</Text>\n                    <Text style={styles.content}>{content[4]}</Text>\n                </View>\n            </Page>\n        </Document>\n    )\n    }\n}\nexport const IsobarDoc = (props) => {\n\n}\n\n","import React from \"react\";\nimport TextField from '@mui/material/TextField'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\n\n// this text area calls parent callback 5 secs after no button press.\n// updateField callback function given as the prop will fire when \n// there is no input for specified timeout duration.\n// this was added to optimise the update process.\nexport default class SimpleTextArea extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: \"\",\n            timeout: null,\n            // timeout delay\n            delay: 3000\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ value: this.props.initialValue })\n    }\n\n    // clear timeout when user is in different screen\n    componentWillUnmount() {\n        clearTimeout(this.state.timeout)\n    }\n    handleChange(event) {\n\n        // set the value of this field\n        this.setState({ value: event.target.value });\n        // clear the timeout\n        clearTimeout(this.state.timeout)\n        // set the timeout\n        this.setState({\n            timeout: setTimeout(() => { this.props.updateField(this.state.value) },\n                this.state.delay)\n        })\n    }\n\n    render() {\n        if (this.props.visible) {\n            return (\n                <Stack spacing={1}>\n                    <Typography variant='p'>\n                        {this.props.label}\n                    </Typography>\n\n                    <TextField fullWidth multiline\n                        placeholder={this.props.placeholder}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </Stack>\n            )\n        } else {\n            return (\n                <Stack spacing={1} \n                sx={{\n                    display: 'none'\n                }}>\n                    <Typography variant='h5'>\n                        {this.props.label}\n                    </Typography>\n                    <TextField fullWidth multiline\n                        placeholder={this.props.placeholder}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </Stack>\n            )\n        }\n    }\n}","import React from \"react\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\n\n// autocomplete that displays values based on fhir search query.\n// takes in fields as props\n// should return the target resource\n// onSelect prop triggered when there is a value selection\n// getLabel prop is to retrieve relevant label from the resource\nexport default class FHIRAutocomplete extends React.Component {\n\n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            answerSet: [],\n            // value from select\n            value: this.props.initialValue,\n            // input is what is entered\n            input: \"\",\n            timeout: null,\n            delay: 500\n        }\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.updatAnswerSet(\"\")\n        // console.log(this.state.value)\n        // this.setState({value: this.props.defaultValue})\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.state.timeout)\n    }\n\n    // update the answer set by searching the fhir server with given input\n    // input is taken as an argument because this.state.input may cause errors\n    // due to setState not being synchronous\n    updatAnswerSet(input) {\n        var queryString = this.props.resourceName\n        var inputString = \"\"\n        const inputArr = input.split(\" \")\n        inputArr.forEach((element => {\n\n            inputString = inputString + this.props.searchTerm + \"=\" + element + \"&\"\n        }))\n        // check queries\n        if(this.props.queries && this.props.queries[0]){\n            this.props.queries.forEach((element, index) => {\n                // append the search terms\n                index === 0\n                    ? queryString = queryString + \"?\" + element\n                    : queryString = queryString + \"&\" + element\n            })\n            // this searches our value\n            queryString = queryString + \"&\" + inputString\n        } else{\n            queryString = queryString + \"?\" + inputString\n        }\n        // console.log(queryString)\n        this.context.client.request(queryString)\n            .then((res) => {\n                const resources = []\n                if(res.total > 0){\n                    res.entry.forEach(element => {\n                        // console.log(element)\n                        // need to give it label property and all that\n                        resources.push({label: this.props.getLabel(element.resource), id:element.resource.id})\n                        // resources.push(element.resource)\n                    })\n\n                }\n                // console.log(resources)\n                this.setState({ answerSet: resources })\n            })\n        \n    }\n\n    handleInputChange(event, newInput) {\n        \n        this.setState({ input: newInput })\n        \n        clearTimeout(this.state.timeout)\n        this.setState({\n\n            timeout: setTimeout(() => { this.updatAnswerSet(newInput) },\n                this.state.delay)\n        })\n\n    }\n\n    render() {\n        return (\n            <Autocomplete\n                disablePortal\n                autoSelect={true}\n                value={this.state.value}\n                onChange={(event, newValue) => {\n                    this.setState({ value: newValue })\n                    this.props.onSelect(newValue)\n                    console.log(newValue)\n                }}\n                input={this.state.input}\n                onInputChange={(event, newInput) => this.handleInputChange(event, newInput)}\n                id={this.props.id}\n                options={ this.state.answerSet }\n                renderInput={(params) => \n                    <TextField {...params}\n                        label={this.props.label}\n                        sx={{\n                            borderWidth:'0'\n                            \n                        }}\n                    />\n                }\n            />\n        )\n    }\n}","import React from \"react\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { SimplePDF } from \"./SimplePDF\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport SimpleTextArea from \"../common/SimpleTextArea\";\nimport { Stack, Grid, Typography, Button } from '@mui/material'\nimport { FormControlLabel, Switch } from \"@mui/material\";\nimport FHIRAutocomplete from \"../common/FHIRAutocomplete\";\nimport { getSimpleName } from \"../common/DisplayHelper\";\nimport { ArrowBack } from \"@mui/icons-material\";\n\n\n// Class for the input field group.\nexport class IsbarSimpleApp extends React.Component {\n\n  // the this.context.client is the client object!!!\n  static contextType = IsbarClientContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      loaded: false,\n      // questionnaire response object\n      content: null,\n      // turns true if it's isobar\n      isIsobar: false,\n      // indicates saved state\n      published: false,\n      // indicates updated state.\n      uploaded: true,\n      recipient: null,\n\n      // author and patient resources are required for print\n      author: null,\n      patient: null\n    };\n\n    this.updateFieldValue = this.updateFieldValue.bind(this)\n    this.onRecipientSelect = this.onRecipientSelect.bind(this)\n    this.createNewForm = this.createNewForm.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(this.props.create)\n    // save author\n    this.context.client.request(\"Practitioner/\" + this.context.client.user.id)\n      .then((res) => this.setState({ author: res }))\n    this.context.client.patient.read()\n      .then((res) => this.setState({ patient: res }))\n    if (this.props.create) {\n      // create new resource and store that \n      // new form targets to current practitiner\n      const newForm = newQuestionnaireResponse(\n        this.props.questionnaireID,\n        this.context.client.patient.id,\n        this.context.client.user.id)\n      // always create a new form when approached this way\n      this.setState({ content: newForm, loaded: true })\n    } else {\n\n      // note we are not directly modifying the file in parent.\n      // parent will fetch the updated version via database query\n      this.context.client.request(\"QuestionnaireResponse/\" + this.props.formID)\n        .then((res) => {\n          // res is the questionnaire object\n          console.log(res)\n          this.setState({ content: res })\n          // turn on isobar if the given form is isobar\n          if (res.item[2].hasOwnProperty('answer')) {\n            this.setState({ isIsobar: true })\n          }\n          if (res.hasOwnProperty('extension')) {\n\n            return this.context.client.request(res.extension[0].valueReference.reference)\n          }\n        })\n        .then((res) => {\n          // res is practitioner resource of recipient practitioner\n          this.setState({ recipient: res, loaded: true, published: true })\n\n        })\n    }\n  }\n\n  createNewForm() {\n    // upload the new form\n    if (!this.state.published) {\n      this.context.client.create(this.state.content)\n        .then((res) => {\n          console.log(res)\n          this.setState({ content: res, published: true })\n        })\n    }\n  }\n\n  componentDidUpdate() {\n    this.uploadToServer()\n  }\n\n  // function to send upload request\n  // checks if requires uploading\n  uploadToServer() {\n    if (!this.state.uploaded && this.state.published) {\n      // console.log(this.state.content)\n      this.context.client.update(this.state.content)\n        .then((res) => {\n          // console.log(res)\n          if (res.hasOwnProperty('extension')) {\n            this.context.client.request(res.extension[0].valueReference.reference)\n              .then((res) => {\n                // this updates the recipient\n                this.setState({ recipient: res })\n              })\n          }\n          this.setState({ uploaded: true })\n        })\n    }\n  }\n\n  getFieldValue(index) {\n    return this.state.content.item[index].hasOwnProperty('answer')\n      ? this.state.content.item[index].answer[0].valueString\n      : \"\"\n  }\n\n  // update the isbar form field of given index to the value given\n  updateFieldValue(value, index) {\n    const prevContent = this.state.content\n    if (prevContent.item[index].hasOwnProperty('answer')) {\n      prevContent.item[index].answer[0].valueString = value\n    } else {\n      prevContent.item[index].answer = [{\n        valueString: value\n      }]\n    }\n    this.setState({ content: prevContent, uploaded: false })\n  }\n\n  // gets triggered when recipient is selected\n  // value is the value from the autocomplete\n  onRecipientSelect(value) {\n\n    if (!value) {\n      return\n    }\n    // reviewer is the name of extension\n    const newContent = this.state.content\n    // console.log(newContent)\n    if (newContent.extension) {\n      if (newContent.extension[0].hasOwnProperty('valueReference')) {\n        newContent.extension[0].valueReference.reference = \"Practitioner/\" + value.id\n      } else {\n        newContent.extension[0].valueReference = {\n          reference: \"Practitioner/\" + value.id\n        }\n      }\n    } else {\n      newContent.extension = [{\n        url: \"http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer\",\n        valueReference: {\n          reference: \"Practitioner/\" + value.id\n        }\n      }]\n    }\n    this.setState({ content: newContent, uploaded: false })\n  }\n\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\n  render() {\n    // questionnaire response object\n\n    if (this.state.loaded) {\n      return (\n        <Stack spacing={2}>\n\n          {/* Header grid */}\n          <Grid container spacing={3} align=\"center\" justify=\"center\"\n            sx={{\n              borderBottomWidth: '1px',\n              borderBottomColor: 'text.secondary',\n              borderBottomStyle: 'solid',\n              padding: \"10px\"\n            }}\n          >\n            <Grid item xs={3} sx={{\n              color: \"text.primary\",\n\n            }}>\n              <ArrowBack\n                onClick={this.props.goBack}\n                sx={{\n                  fontSize: \"30px\",\n                  // padding: \"5px\",\n                  cursor: \"pointer\"\n                }} />\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant='h5'\n                align=\"center\"\n              >\n                Simple ISBAR Form\n              </Typography>\n            </Grid>\n\n            <Grid item xs={2}>\n              <FormControlLabel\n                value=\"ISOBAR\"\n                control={<Switch />}\n                checked={this.state.isIsobar}\n                label=\"ISOBAR\"\n                labelPlacement=\"start\"\n                onChange={(event) => this.setState({ isIsobar: event.target.checked })}\n                sx={{\n                  alignSelf: 'center'\n                }}\n              />\n            </Grid>\n          </Grid>\n\n          <Stack spacing={3}\n            sx={{\n              padding: '3%'\n            }}>\n\n            <Grid container spacing={2}>\n              <Grid item xs={8}>\n                <FHIRAutocomplete\n                  resourceName=\"Practitioner\"\n                  searchTerm=\"name\"\n                  label=\"Recipient\"\n                  id=\"recipientAutocomplete\"\n                  initialValue={this.state.recipient ? {\n                    label: getSimpleName(this.state.recipient.name[0]),\n                    id: this.state.recipient.id\n                  } : null}\n                  queries={[]}\n                  onSelect={(value) => this.onRecipientSelect(value)}\n                  getLabel={(resource) => getSimpleName(resource.name[0])}\n                />\n              </Grid>\n\n              <Grid item xs={2}\n                justifySelf=\"center\"\n                alignSelf=\"center\"\n              >\n                <PDFDownloadLink\n                  document={\n                    <SimplePDF\n                      content={this.state.content}\n                      author={this.state.author}\n                      recipient={this.state.recipient}\n                      subject={this.state.patient}\n                    />\n                  }\n                  fileName=\"isbar.pdf\"\n                >\n                  <Button\n                    size=\"large\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                  >\n                    {/* {({ blob, url, loading, error }) =>\n                      loading ? \"Preparing\" : \"Print\"\n                    } */}\n                    Print\n                  </Button>\n                </PDFDownloadLink>\n\n              </Grid>\n              <Grid item xs={2}\n                justifySelf=\"center\"\n                alignSelf=\"center\"\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  disabled={this.state.published}\n                  onClick={this.createNewForm}\n                > Publish\n                </Button>\n\n              </Grid>\n\n            </Grid>\n            <SimpleTextArea\n              initialValue={this.getFieldValue(0)}\n              placeholder=\"Introduction\"\n              label=\"Introduction\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 0)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(1)}\n              placeholder=\"Situation\"\n              label=\"Situation\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 1)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(2)}\n              placeholder=\"Observation\"\n              label=\"Observation\"\n              visible={this.state.isIsobar}\n              updateField={(value) => this.updateFieldValue(value, 2)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(3)}\n              placeholder=\"Background\"\n              label=\"Background\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 3)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(4)}\n              placeholder=\"Assessment\"\n              label=\"Assessment\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 4)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(5)}\n              placeholder=\"Recommendation\"\n              label=\"Recommendation\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 5)}\n            />\n\n          </Stack >\n        </Stack>\n      )\n    } else {\n      return (\n\n        <div className=\"loading-container\">\n          Loading ISBAR form\n        </div>\n      )\n    }\n  }\n}\n\n// function that returns a new response\n// sourceID: ID of practitioner writing this form\n// it assumes the target is not defined, target practitioner will be included later.\nfunction newQuestionnaireResponse(questionnaireID, patientID, sourceID) {\n  // questionnaire response resource\n  //const date = new Date()\n  // const lastModified = new Date().toJSON()\n  // console.log(lastModified)\n\n  var qResponse = {\n    resourceType: \"QuestionnaireResponse\",\n    text: { name: \"isbar handover form\" },\n    // maybe later when we sort out the thingy\n    // Reference the questionnaire\n    // date this form was last modified\n    // authored: lastModified,\n    questionnaire: \"Questionnaire/\" + questionnaireID,\n    status: \"in-progress\",\n    subject: {\n      reference: \"Patient/\" + patientID\n    },\n    author: {\n      // refer to current practitioner\n      reference: \"Practitioner/\" + sourceID,\n    },\n    // extension not used because resolving reference requires extra effort. \n    // Instead, author section is used.\n    extension: [{\n      url: \"http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer\",\n      valueReference: {\n        // reference: \"Practitioner/\" + sourceID\n      }\n    }],\n    item: [\n      {\n        linkId: \"1\",\n        text: \"I:Identify\",\n      },\n      {\n        linkId: \"2\",\n        text: \"S:Situation\",\n      },\n      {\n        linkId: \"3\",\n        text: \"O:Observation\",\n      },\n      {\n        linkId: \"4\",\n        text: \"B:Background\",\n      },\n      {\n        linkId: \"5\",\n        text: \"A:Assessment\",\n      },\n      {\n        linkId: \"6\",\n        text: \"R:Recommendation\",\n      },\n    ],\n  };\n\n  return qResponse;\n}","\nimport React from \"react\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\n\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(5),\n    \n    color: theme.palette.text.secondary,\n  }));\n\n\n\n\nexport class Assessment extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <div className=\"container\">                     \n            <div>    \n              <h3>Latest clinical assessment:</h3>\n            </div>             \n            <TextField style ={{width: '100%'}} aria-label=\"minimum height\" minRows={4} multiline placeholder =\"Latest clinical assessment\" spacing={2} id=\"outlined-search\" type=\"search\" />         \n            <div>    \n              <h3>Vital Signs:</h3>\n              <Box sx={{ width: '100%' }}>\n                <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                  <Grid item xs={6}>\n                    <Item>\n                      <div>                                                \n                        <TextField fullWidth label=\"Resp rate\" id=\"resprate\" />\n                      </div>\n                    </Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item>                      \n                      <TextField fullWidth label=\"Temp\" id=\"temp\" />          \n                    </Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"Pain Score\" id=\"painscore\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"Pulse\" id=\"pulse\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"O2 rate/device\" id=\"O2rate\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"Blood Pressure\" id=\"BP\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"Urine Output\" id=\"UO\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"SpO2\" id=\"SpO2\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"Patient Anxiety\" id=\"anxiety\" /></Item>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Item><TextField fullWidth label=\"Hb\" id=\"Hb\" /></Item>\n                  </Grid>              \n                </Grid>\n              </Box>                \n            </div>         \n          </div>\n\n        )\n        \n    }\n}\n","import React from \"react\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport { experimentalStyled as styled } from '@mui/material/styles';\n\nimport Paper from '@mui/material/Paper';\n\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    \n    \n  }));\n  \n\n\nexport class Background extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div className=\"container\">\n            <FormControl Component=\"fieldset\">\n            <h3>Alerts</h3>\n            <Box sx={{ flexGrow: 1 }}>\n                <Grid container spacing={4} columns={16}>\n                    <Grid item xs={8}>\n                        <Item>                                   \n                            <Box\n                                component=\"form\"\n                                sx={{\n                                    '& > :not(style)': { m: 1 },\n                                }}\n                                noValidate\n                                autoComplete=\"off\"\n                            >\n                                 <FormControlLabel\n                                    value=\"Forensic\"\n                                    control={<Checkbox />}\n                                    label=\"Forensic\"  \n                                    labelPlacement=\"start\"                                  \n                                    />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Microbiological\"\n                                    control={<Checkbox />}\n                                    label=\"Microbiological\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" labelPlacement=\"end\"/>\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Bariatric Patient\"\n                                    control={<Checkbox />}\n                                    label=\"Bariatric Patient\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Fall Risk\"\n                                    control={<Checkbox />}\n                                    label=\"Fall Risk\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Infectious Risk\"\n                                    control={<Checkbox />}\n                                    label=\"Infectious Risk\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Pressure Ulcer Risk\"\n                                    control={<Checkbox />}\n                                    label=\"Pressure Ulcer Risk\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Smoker\"\n                                    control={<Checkbox />}\n                                    label=\"Smoker\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>                    \n                </Grid>\n                </Box>\n                \n                <Box sx={{ flexGrow: 1 }}>\n                    <h4>Mental Health Act:</h4>\n                <Grid container spacing={4} columns={16}>\n                    <Grid item xs={8}>\n                        <Item>                                   \n                            <Box\n                                component=\"form\"\n                                sx={{\n                                    '& > :not(style)': { m: 1 },\n                                }}\n                                noValidate\n                                autoComplete=\"off\"\n                            >\n                                 <FormControlLabel\n                                    value=\"Voluntary\"\n                                    control={<Checkbox />}\n                                    label=\"Voluntary\"  \n                                    labelPlacement=\"start\"                                  \n                                    />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Involuntary\"\n                                    control={<Checkbox />}\n                                    label=\"Involuntary\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" labelPlacement=\"end\"/>\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Risk Assessment\"\n                                    control={<Checkbox />}\n                                    label=\"Risk Assessment\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>                   \n                </Grid>\n                </Box>\n                <Box sx={{ flexGrow: 1 }}>\n                    <h4>Drug Allergy</h4>\n                <Grid container spacing={4} columns={16}>\n                    <Grid item xs={8}>\n                        <Item>                                   \n                            <Box\n                                component=\"form\"\n                                sx={{\n                                    '& > :not(style)': { m: 1 },\n                                }}\n                                noValidate\n                                autoComplete=\"off\"\n                            >\n                                 <FormControlLabel\n                                    value=\"State Drug/Reaction\"\n                                    control={<Checkbox />}\n                                    label=\"State Drug/Reaction\"  \n                                    labelPlacement=\"start\"                                  \n                                    />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" />\n                            </Box>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Item>                            \n                            <Box\n                            component=\"form\"\n                            sx={{\n                                '& > :not(style)': { m:1 },\n                            }}\n                            noValidate\n                            autoComplete=\"off\"\n                            >\n                                <FormControlLabel\n                                    value=\"Other\"\n                                    control={<Checkbox />}\n                                    label=\"Other\"\n                                    labelPlacement=\"start\"\n                                />\n                                <TextField id=\"detial-basic\" label=\"Details\" variant=\"standard\" labelPlacement=\"end\"/>\n                            </Box>\n                        </Item>\n                    </Grid>                   \n                </Grid>\n                </Box>           \n\n\n                <h3>Current Episode Medications:</h3>\n                <TextField id=\"detial-basic\" label=\"Details\" variant=\"outlined\" />\n                \n\n                <h3>Investigations:</h3>\n                <TextField id=\"detial-basic\" label=\"Details\" variant=\"outlined\" />\n                \n\n                <h3>Specialty-Specific Information:</h3>\n                <TextField id=\"detial-basic\" label=\"Details\" variant=\"outlined\" />\n                \n\n            </FormControl>\n            </div>\n        )\n    }\n\n\n}\n\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Grid } from \"@mui/material\";\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack'\n\nexport class Introduction extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <Grid container spacing={5} >\n                    <Grid item xs={6}>\n                        <Stack spacing={2}>\n                            <h3>Date/Time</h3>\n                            <TextField id=\"date\" label=\"Date of transfer\" variant=\"standard\" />\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Stack spacing={2}>\n                            <h3>   Patient Transfer Details</h3>\n\n                            <FormControl sx={{ m: 1, width: '100%' }}>\n                                Category of transfer\n                                <InputLabel sx={{ m: 1 }} id=\"category-of-transfer\"></InputLabel>\n                                <Select\n                                    labelId=\"category-of-transfer\"\n                                    id=\"category-of-transfer\"\n                                    label=\"category-of-transfer\"\n                                >\n                                    <MenuItem>Emergency</MenuItem>\n                                    <MenuItem>Elective</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl sx={{ m: 1, width: '100%' }}>\n                                Type of transfer\n                                <InputLabel id=\"type-of-transfer\"></InputLabel>\n                                <Select\n                                    labelId=\"type-of-transfer\"\n                                    id=\"type-of-transfer\"\n                                    label=\"type-of-transfer\"\n                                >\n                                    <MenuItem>One Way</MenuItem>\n                                    <MenuItem>Return</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={6} sx={{ flexGrow: 1 }}>\n                        <Stack spacing={2}>\n\n\n                            <h3>   Referring Practitioner</h3>\n                            <Typography variant='p'>Name</Typography>\n                            <TextField\n                                id=\"practitioner-name\"\n                                label=\"Referring Practitioner\"\n                                multiline\n                                fullWidth\n                                \n                            />\n\n\n                            <Typography variant='p'>Role</Typography>\n                            <TextField\n                                id=\"practitioner-role\"\n                                label=\"Role\"\n                                fullWidth\n                                multiline\n                                \n                            />\n                            <Typography variant='p'>Location</Typography>\n                            <TextField\n                                id=\"practitioner-location\"\n                                label=\"Location\"\n                                fullWidth\n                                \n                                \n                                multiline />\n\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Stack spacing={2}>\n\n\n\n                        <h3>   Referring Practitioner</h3>\n                            <Typography variant='p'>Name</Typography>\n                            <TextField\n                                id=\"next-practitioner-name\"\n                                label=\"Next Practitioner\"\n                                multiline\n                                fullWidth\n                                \n                            />\n\n\n                            <Typography variant='p'>Role</Typography>\n                            <TextField\n                                id=\"practitioner-role\"\n                                label=\"Role\"\n                                fullWidth\n                                multiline\n                                \n                            />\n                            <Typography variant='p'>Location</Typography>\n                            <TextField\n                                id=\"practitioner-location\"\n                                label=\"Location\"\n                                fullWidth\n                                multiline />\n\n                        </Stack>\n                    </Grid>\n                    <Grid item xs={6}>\n                    </Grid>\n                </Grid>\n\n\n            </div>\n\n        )\n    }\n}\n","import React from \"react\";\nimport SimpleTextArea from \"../common/SimpleTextArea\";\n\nexport class Recommendation extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state ={\n            value: \"\",\n        }\n    }\n\n    updateField(value){\n        this.setState({value: value})\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <SimpleTextArea\n                initialValue={\"\"}\n                fullWidth\n                multiline\n                rows={4}\n                placeholder=\"Recommendation\"\n                label=\"\"\n                visible={true}\n                updateField={(value) => this.updateFieldValue(value)}\n                />\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormLabel from '@mui/material/FormLabel';\nimport FormGroup from '@mui/material/FormGroup';\n\n\n\nexport default function CheckboxesGroup() {\n    const [state, setState] = React.useState({\n      impairment: false,\n      jason: false,\n      antoine: false,\n      aggression: false,\n      others: false,\n      resistive: false, \n      dementia: false,\n      depression: false,\n      self: false,\n      noissues: false,\n      faecalcontinence: false,\n      urinarycontinence: false,\n\n    });\n  \n    const handleChange = (event) => {\n      setState({\n        ...state,\n        [event.target.name]: event.target.checked,\n      });\n    };\n  \n    const {impairment, aggression, others, resistive, dementia, depression, self, noissues, faecalcontinence, urinarycontinence } = state;\n    \n  \n    return (\n      <Box sx={{ display: 'flex' }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\"><h5>Mental Behaviour</h5></FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={impairment} onChange={handleChange} name=\"impairment\" />\n              }\n              label=\"Cognitive impairment\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={aggression} onChange={handleChange} name=\"aggression\" />\n              }\n              label=\"Verbal Aggression\"\n            />\n             <FormControlLabel\n              control={\n                <Checkbox checked={dementia} onChange={handleChange} name=\"dementia\" />\n              }\n              label=\"Dementia\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={depression} onChange={handleChange} name=\"depression\" />\n              }\n              label=\"Depression\"\n            />\n            \n            <FormControlLabel\n              control={\n                <Checkbox checked={resistive} onChange={handleChange} name=\"resistive\" />\n              }\n              label=\"Resistive to care\"\n            />\n          </FormGroup>\n        </FormControl>\n        <FormControl          \n          component=\"fieldset\"\n          sx={{ m: 3 }}\n          variant=\"standard\"\n        >\n          <FormLabel   component=\"legend\"><h5>Mental Behaviour</h5></FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={self} onChange={handleChange} name=\"self\" />\n              }\n              label=\"Harm to self\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={others} onChange={handleChange} name=\"others\" />\n              }\n              label=\"Harm to others\"\n            />           \n          </FormGroup>\n        </FormControl>\n        <FormControl          \n          component=\"fieldset\"\n          sx={{ m: 3 }}\n          variant=\"standard\"\n        >\n          <FormLabel   component=\"legend\"><h5>Continence</h5></FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={noissues} onChange={handleChange} name=\"noissues\" />\n              }\n              label=\"No Issues\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={faecalcontinence} onChange={handleChange} name=\"faecalcontinence\" />\n              }\n              label=\"Faecal continence\"\n            /> \n            <FormControlLabel\n              control={\n                <Checkbox checked={urinarycontinence} onChange={handleChange} name=\"urinarycontinence\" />\n              }\n              label=\"Urinary continence\"\n            />              \n          </FormGroup>\n        </FormControl>\n      </Box>\n    );\n  }\n\nexport function AirwaySelect() {\n  const [options, setAirway] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAirway(event.target.value);\n  };\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"airwaySelect\">Airway</InputLabel>\n        <Select\n          labelId=\"Airway\"\n          id=\"airwaySelect\"\n          value={options}\n          label=\"Options\"\n          onChange={handleChange}\n        >\n          <MenuItem value={10}>Patent</MenuItem>\n          <MenuItem value={20}>Compromised</MenuItem>\n          <MenuItem value={30}>Ventilated</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n\nexport function BreathingSelect() {\n    const [options, setBreathing] = React.useState(\"\");\n  \n    const handleChange = (event) => {\n      setBreathing(event.target.value);\n    };\n  \n    return (\n      <Box sx={{ minWidth: 120 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"breathingSelect\">Breathing</InputLabel>\n          <Select\n            labelId=\"Breathing\"\n            id=\"breathingSelect\"\n            value={options}\n            label=\"Options\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Unremarkable</MenuItem>\n            <MenuItem value={20}>Shallow</MenuItem>\n            <MenuItem value={30}>Deep</MenuItem>\n            <MenuItem value={40}>Rapid</MenuItem>\n            <MenuItem value={50}>Slow</MenuItem>\n            <MenuItem value={60}>Laboured</MenuItem>\n            <MenuItem value={70}>Audible wheeze</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\nexport function PulseSelect() {\n    const [options, setPulse] = React.useState(\"\");\n  \n    const handleChange = (event) => {\n      setPulse(event.target.value);\n    };\n  \n    return (\n      <Box sx={{ minWidth: 120 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"pulseSelect\">Pulse</InputLabel>\n          <Select\n            labelId=\"Pulse\"\n            id=\"pulseSelect\"\n            value={options}\n            label=\"Options\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Unremarkable</MenuItem>\n            <MenuItem value={20}>Regular</MenuItem>\n            <MenuItem value={30}>Slow</MenuItem>\n            <MenuItem value={40}>Strong</MenuItem>\n            <MenuItem value={50}>Weak</MenuItem>\n            <MenuItem value={60}>Rapid</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\nexport class Situation extends React.Component {\n  static contextType = IsbarClientContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      error: null,\n      // true if questionnaireResponse exists\n      responseExist: false,\n      patient: null,\n      // questionnaire object that will be stored or created\n      questionnaire: null,\n      // questionnaire response object\n      questionnaireResponse: null,\n      // turns true if it's isobar\n      isIsobar: false,\n      // indicates saved state\n      saveState: \"edited\",\n      // type of current form\n      formState: \"ISOBAR\",\n      // would be good if we have a array of question-answer pair.\n    };\n  }\n\n  componentDidMount() {\n    // load client from the client context\n    const client = this.context.client;\n  }\n\n  render() {\n    return (\n      <div className=\"container  \">\n        \n        <h3>Patient Status</h3>\n        <TextField fullWidth multiline placeholder=\"Patient Status\" />\n\n        <h3>Principle Diagnosis/Problem</h3>\n        <TextField fullWidth multiline placeholder=\"Principle Diagnosis/Problem\" />\n\n        <h3>Other Diagnosis/problems</h3>\n        <TextField fullWidth multiline placeholder=\"Other Diagnosis/problems\" />\n\n        <h3>Reason For transfer</h3>\n        <TextField fullWidth multiline placeholder=\"Reason For transfer\" />\n\n        <h3>Observations</h3>\n\n        <h5>Airway</h5>\n        <AirwaySelect />\n\n        <h5>Breathing</h5>\n        <BreathingSelect />\n\n        <h5>Pulse</h5>\n        <PulseSelect />\n\n        <CheckboxesGroup />\n\n        \n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\n\n\nfunction PatientName({ name = [] }) {\n    let entry =\n        name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (!entry) {\n        return <h1>No Name</h1>;\n    }\n    return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\n\n}\n\n\n\nfunction PatientBanner(patient) {\n    console.log(patient);\n    return (\n        <div className=\"container\" >\n            <PatientName name={patient.name} />\n            <span >\n                Gender: <b>{patient.gender}</b>{\" \"}\n            </span>\n            <span>\n                DOB: <b>{patient.birthDate}</b>{\" \"}\n            </span>  \n            <span>\n                Address: <b>{patient.address[0].city}</b>\n            </span>   \n        </div>\n    );\n}\n\nexport default class Patient extends React.Component {\n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            patient: null,\n            error: null\n        };\n    }\n    componentDidMount() {\n        const client = this.context.client;\n        this._loader = client.patient\n            .read()\n            .then(patient => {\n                this.setState({ patient, loading: false, error: null });\n            })\n            .catch(error => {\n                this.setState({ error, loading: false });\n            });\n    }\n    render() {\n        const { error, loading, patient } = this.state;\n        if (loading) {\n            return null;\n        }\n        if (error) {\n            return error.message;\n        }\n        return <PatientBanner {...patient} />;\n    }\n}\n","import React from \"react\";\nimport { Assessment } from \"./Assessment\";\nimport { Background } from \"./Background\";\nimport { Introduction } from \"./Introduction\";\nimport { Recommendation } from \"./Recommendation\";\nimport { Situation } from \"./Situation\";\nimport Patient from \"./Patient\";\n\nexport class IsbarComplexApp extends React.Component {\n\n    render() {\n        return (\n            <div className=\"app-complex\">\n                <div className=\"container\">\n                    <Patient />\n                    <h2 className=\"section-title\">Introduction</h2>\n                    <Introduction />\n                    <h2 className=\"section-title\">Situation</h2>\n                    <Situation />\n                    <h2 className=\"section-title\">Background</h2>\n                    <Background />\n                    <h2 className=\"section-title\">Assessment</h2>\n                    <Assessment />\n                    <h2 className=\"section-title\">Recommendation</h2>\n                    <Recommendation />\n\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n","import React from \"react\";\nimport { Assessment } from \"./Assessment\";\nimport { Background } from \"./Background\";\nimport { Introduction } from \"./Introduction\";\nimport { Recommendation } from \"./Recommendation\";\nimport { Situation } from \"./Situation\";\n\nexport class IsbarContentField extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n\n        switch (this.props.current) {\n            case \"I\":\n                return <Introduction />\n            case \"S\":\n                return <Situation />\n            case \"B\":\n                return <Background />\n            case \"A\":\n                return <Assessment />\n            case \"R\":\n                return <Recommendation />\n            default: \n                // fail safe\n                return <Introduction />\n\n\n        }\n    }\n}\n","import React from \"react\";\nimport { IsbarContentField } from \"./IsbarContentField\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { client } from \"fhirclient\";\n\nexport class IsbarComplexDevelopment extends React.Component {\n    \n    // client context\n    static contextType = IsbarClientContext;\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            // state for the app display\n            current: \"I\",\n            loaded: false,\n            carePlan: null\n            // initialise careplan resource?\n        }\n    }\n\n    componentDidMount(){\n        \n        const client = this.context.client;\n        // search for the careplan related to this patient\n        this.LoadCarePlan()\n        .then((res) => {\n            console.log(res)\n            this.setState({loaded: true})\n        })\n        // load the careplan\n    }\n\n    LoadCarePlan(){\n        return this.context.client.request(\"CarePlan?patient=\" + this.context.client.patient.id)\n        .then( res => {\n            // filter careplan\n\n        })\n    }\n\n    render() {\n        if(this.state.loaded){\n\n            return (\n            \n                <div className=\"app-complex\">\n                    <div className=\"app-content\">\n                        <IsbarContentField current={this.state.current} />\n                    </div>\n    \n                    <div className=\"footer\">\n                        <div className=\"arrow\">&larr;</div>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"I\" })}>I</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"S\" })}>S</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"B\" })}>B</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"A\" })}>A</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"R\" })}>R</button>\n                        <div className=\"arrow\">&rarr;</div>\n                    </div>\n    \n                </div>\n                \n            )\n        } else{\n            return(\n            <div>\n                Loading complex isbar form...\n            </div>)\n        }\n    }\n}\n","import React from \"react\";\nimport { DataGrid } from '@mui/x-data-grid'\nimport { getSimpleName, getDateTimeString } from \"./common/DisplayHelper\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\n\n// this displays the list of previous simple isbar entries\n// takes in the bundle from response\n// displays previous entries in data table of mui\nexport class SimpleHistory extends React.Component {\n\n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            fields: [\n                {\n                    field: 'lastUpdated',\n                    headerName: 'Last Updated',\n                    description: \"Time last updated\",\n                    flex: 2\n                },\n                {\n                    field: 'id',\n                    headerName: 'ID',\n                    description: \"Form ID\",\n                    flex: 2\n                },\n                {\n                    field: 'author',\n                    headerName: 'Author',\n                    description: \"Author of the form\",\n                    flex: 3\n                },\n                {\n                    field: 'recipient',\n                    headerName: 'Recipient',\n                    description: \"Receiving party of the form\",\n                    flex: 3\n                },\n                {\n                    field: 'action',\n                    headerName: 'Action',\n                    description: \"Actions allowed on the form\",\n                    cellClassName: 'simple-table--cell',\n                    align: 'center',\n                    headerAlign: 'center',\n                    width: 100\n                },\n            ],\n            entries: null\n        }\n    }\n\n    componentDidMount() {\n        // load all the data from prop\n        console.log(\"history\")\n        console.log(this.props.data)\n        if (this.props.data) {\n            this.updateTable()\n        }\n        else {\n            console.error(\"No data given to history!! did the request fail?\")\n        }\n    }\n\n    // manually resolve the recipient..\n    updateTable() {\n        const newContent = []\n        // console.log(this.props.data)\n        if (this.props.data.total != 0) {\n\n            this.props.data.entry.forEach((element) => {\n                // element is each resource in the bundle\n                // console.log(element)\n                const resource = element.resource\n                // this.context.client.delete(\"QuestionnaireResponse/\"+resource.id)})}\n\n                // default content for the fields.\n                // Also displayed while resolving promises\n                const entry = {\n                    lastUpdated: 'Loading',\n                    id: 'Loading',\n                    author: 'Loading',\n                    recipient: 'Loading',\n                    action: null\n                }\n                // set new content??\n                if (resource.meta.hasOwnProperty('lastUpdated')) {\n                    entry.lastUpdated = getDateTimeString(resource.meta.lastUpdated)\n                }\n                if (resource.hasOwnProperty('id')) {\n                    entry.id = resource.id\n                }\n                if (resource.hasOwnProperty('author')) {\n                    entry.author = getSimpleName(resource.author.name[0])\n                }\n                entry.action = \"EDIT\"\n                newContent.push(entry)\n            });\n\n            // resolve the recipients of each.\n            // This function was positioned after initialisation of array to enable access\n            this.props.data.entry.forEach((element, index) => {\n                const resource = element.resource\n                if (resource.hasOwnProperty('extension')) {\n                    this.context.client.request(resource.extension[0].valueReference.reference)\n                        .then((res) => {\n                            // console.log(newContent[index])\n                            newContent[index].recipient = getSimpleName(res.name[0])\n                            // force component update\n                            this.forceUpdate()\n                        })\n                }\n            })\n        }\n        else {\n            console.log(\"no existing entry\")\n        }\n        this.setState({ entries: newContent })\n            \n    }\n\n    handleCellClick(cellParam) {\n        // handle cell click\n        if (cellParam.colDef.field === \"action\") {\n            // edit button is pressed. cell id is the form id\n            this.props.editForm(cellParam.id)\n        }\n    }\n\n    render() {\n        // console.log(this.state.entries)\n        if (this.state.entries != null) {\n\n            return (\n                <div style={{ height: 400, width: '100%' }}>\n\n                    <DataGrid\n                        rows={this.state.entries}\n                        columns={this.state.fields}\n                        pageSize={5}\n                        rowsPerPageOptions={[5]}\n                        disableColumnMenu={true}\n                        disableSelectionOnClick={true}\n                        onCellClick={(param) => {\n                            if (param.colDef.field === \"action\") {\n                                this.props.editForm(param.id)\n                            }\n                        }}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    Loading data..\n                </div>\n            )\n        }\n\n\n    }\n}\n\n","// Main class for the main screen. Contains everything.\nimport React from \"react\";\nimport { IsbarClientProvider } from \"./IsbarFhirClient\";\nimport { IsbarSimpleApp } from \"./app-simple/IsbarSimpleApp\";\nimport { IsbarComplexApp } from \"./app-complex/IsbarComplexApp\";\nimport { IsbarComplexDevelopment } from \"./app-complex/IsbarComplexDevelopment\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\nimport { Stack, Box, Grid, Accordion, AccordionSummary, Typography, Button, AccordionDetails } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { SimpleHistory } from \"./SimpleHistory\";\n\nexport default class Home extends React.Component {\n\n    render() {\n        return (\n            <IsbarClientProvider>\n                <AppController />\n            </IsbarClientProvider>\n        )\n    }\n}\n\n// this component loads and displays the questionnaireResponse\nclass AppController extends React.Component {\n\n    // include client \n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            loaded: false,\n            isMenu: true,\n            isSimple: true,\n            questionnaireID: null,\n            simpleResponses: null,\n            createNew: false,\n            // id of current simple form\n            simpleFormID: null\n        }\n        this.editSimpleForm = this.editSimpleForm.bind(this)\n    }\n    componentDidMount() {\n\n        // Load questionnaire and simple isbar forms for this patient\n        const loadSimple = this.loadQuestionnaireID()\n            // .then(() => this.createSimpleIsbar())\n            .then((res) => this.loadSimpleIsbars(res))\n            .then(() => this.setState({ loaded: true }))\n        // this.context.client.request(\"Practitioner/e443ac58-8ece-4385-8d55-775c1b8f3a37\").then(console.log)\n        // wait till all promises resolved\n        Promise.all([loadSimple]).then(() => console.log(\"all loaded\"))\n    }\n\n    backToMenu() {\n        // change the statte to come back to menu, and start loading\n        this.setState({ isMenu: true, loaded: false })\n        this.loadSimpleIsbars(this.state.questionnaireID)\n            .then(() => this.setState({ loaded: true }))\n\n    }\n\n    // Returns a promise that loads questionnaire ID using questionnaire template\n    // updates the state for questionnaire id\n    // the promise resolves to questionnaire id\n    loadQuestionnaireID() {\n\n        // make server calls \n        return this.context.client.request(\"Questionnaire?name=\" + isbarQuestionnaire.name)\n            .then((response) => {\n\n                if (response.total === 0) {\n                    // there are no questionnaire object - create one\n                    return this.context.client.create(isbarQuestionnaire);\n                } else {\n                    // return the existing questionnaire to be saved\n                    return response.entry[0].resource;\n                }\n            }).then((result) => {\n                // console.log(result.id)\n                // save the questionnaire ID in current component state\n                this.setState({ questionnaireID: result.id })\n                // return the questionnaire id. This allows response searching without\n                // having to wait for setState to be executed\n                return result.id\n            }).catch(console.error)\n    }\n\n    // Returns a promise for loading simple isbar forms given questionnaire id.\n    // The promise resolves to the bundle returned from the server\n    loadSimpleIsbars(questionnaireID) {\n\n        return this.context.client.request(\n            // currently, retrieves all responses about this patient\n            \"QuestionnaireResponse?questionnaire=\" + questionnaireID\n            + \"&patient=Patient/\" + this.context.client.patient.id,\n            // resolves references connected to questionnaire\n            // this was not used because it caused corruption, and the data had to be loaded again.\n            { resolveReferences: [\"author\"] }\n        ).then((result) => {\n            // console.log(result)\n            // console.log(questionnaireID)\n            this.setState({ simpleResponses: result })\n            // console.log(result)\n            return result\n        }).catch(console.error)\n    }\n\n    // opens existing form to edit. id is the questionnaireResponse id.\n    editSimpleForm(id) {\n        // the simple form should be passed as a prop to child object?\n        const response = this.state.simpleResponses.entry.filter((element) => element.resource.id === id)\n        console.log(response)\n        console.log(response[0].resource.id)\n        // search the server for questionnaireResponse with same id\n        // The resource is retrieved again rather than being set from the bundle\n        // because bundle contains resolved references, it results in corruption\n        this.setState({ simpleFormID: response[0].resource.id, isMenu: false, isSimple: true, createNew: false })\n    }\n\n    // What a mess! requires cleaning..\n    render() {\n\n        if (this.state.loaded && this.state.isMenu) {\n            // this is the menu. \n            return (\n                \n                <Stack spacing={5} sx={{ padding: '3%' }}>\n\n                    <Typography variant='h1'\n                        sx={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: '50px'\n                        }}>\n                        ISBAR Handover Form\n                    </Typography>\n                    <Accordion defaultExpanded={false}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography variant='h5'\n                                sx={{ width: '80%' }}>\n                                Simple ISBAR handover forms\n                            </Typography>\n\n                            <Button\n                                size='medium'\n                                variant='outlined'\n                                sx={{ width: '18%', marginRight: '2%' }}\n                                onClick={() => this.setState({ createNew: true, isMenu: false, isSimple: true })}\n                            >\n                                Create\n                            </Button>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <SimpleHistory\n                                data={this.state.simpleResponses}\n                                editForm={(id) => this.editSimpleForm(id)}\n                            />\n                        </AccordionDetails>\n                    </Accordion>\n\n                    <Accordion defaultExpanded={false}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography variant='h5'\n                                sx={{ width: '80%' }}>\n                                Complex ISBAR handover forms\n                            </Typography>\n\n                            <Button\n                                size='medium'\n                                variant='outlined'\n                                sx={{ width: '18%', marginRight: '2%' }}\n                                onClick={() => this.setState({ createNew: true, isMenu: false, isSimple: false })}\n                            >\n                                Create\n                            </Button>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <SimpleHistory\n                                data={null}\n                                editForm={(id) => this.editSimpleForm(id)}\n                            />\n                        </AccordionDetails>\n                    </Accordion>\n\n                </Stack>\n                \n            )\n        } else if (this.state.loaded && this.state.isSimple) {\n\n            return (\n                <IsbarSimpleApp\n                    goBack={this.backToMenu.bind(this)}\n                    formID={this.state.simpleFormID} // this is the response object passed.\n                    create={this.state.createNew}\n                    questionnaireID={this.state.questionnaireID}\n                />\n            )\n        } else if (this.state.loaded && !this.state.isSimple) {\n            return (\n                // <IsbarComplexDevelopment />\n                <IsbarComplexApp />\n            )\n        } else {\n            return (<div>Loading</div>)\n\n        }\n    }\n}\n\n\n\nconst isbarQuestionnaire = {\n    \"resourceType\": \"Questionnaire\",\n    \"title\": \"questionnaireTitle\",\n    \"name\": \"isbar-simple\",\n    \"status\": \"active\",\n    // Introduction\n    \"item\": [{\n        \"linkid\": \"1\",\n        \"text\": \"I:Identify\",\n        \"type\": \"text\" // free text\n    },\n    // Situation\n    {\n        \"linkid\": \"2\",\n        \"text\": \"S:Situation\",\n        \"type\": \"text\" // free text\n    },\n    // Observation. Enable option is not included, because it could be handled by js.\n    {\n        \"linkid\": \"3\",\n        \"text\": \"O:Observation\",\n        \"type\": \"text\" // free text\n    },\n    // Background\n    {\n        \"linkid\": \"4\",\n        \"text\": \"B:Background\",\n        \"type\": \"text\" // free text\n    },\n    // assessment\n    {\n        \"linkid\": \"5\",\n        \"text\": \"A:Assessment\",\n        \"type\": \"text\" // free text\n    },\n    // Recommendation\n    {\n        \"linkid\": \"6\",\n        \"text\": \"R:Recommendation\",\n        \"type\": \"text\" // free text\n    }]\n}\n\n\n\n","/*\n  Application file for simple ISBAR app.\n  Classes can be separated later on.\n  the react-router-dom module had to be installed with:\n  npm install -S react-router-dom\n*/\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Launcher from './Launcher';\nimport Home from \"./Home\"\nimport './App.css';\n\n\n\n\n\n\n/*\n The top application object. Responsible for:\n - Loading patient information\n - Loading questionnaire\n - Loading questionnaire response\n - Initiating the render of other components.\n */\nclass App extends React.Component {\n\n  render() {\n    return (\n      // This runs the launcher first, which redirects to the main screen.\n      <BrowserRouter basename={\"/\"}>\n        <Switch>\n          {/* The actual app */}\n          <Route path=\"/isbar-app\" component={Home} exact/>\n\n          {/* Launcher for smart app */}\n          <Route path=\"/\" component={Launcher} exact />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Render the ISBAR application in index.html\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}