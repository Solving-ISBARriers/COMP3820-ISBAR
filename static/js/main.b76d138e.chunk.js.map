{"version":3,"sources":["Launcher.js","IsbarFhirClient.js","app-simple/SimplePDF.js","common/SimpleTextArea.js","common/FHIRAutocomplete.js","common/DisplayHelper.js","app-simple/IsbarSimpleApp.js","app-complex/Assessment.js","app-complex/Background.js","app-complex/Introduction.js","app-complex/Recommendation.js","app-complex/Situation.js","app-complex/IsbarComplexApp.js","app-complex/IsbarContentField.js","app-complex/IsbarComplexDevelopment.js","SimpleHistory.js","Home.js","App.js","index.js"],"names":["Launcher","SMART","authorize","clientId","scope","redirectUri","completeInTarget","className","React","Component","IsbarClientContext","createContext","IsbarClientProvider","props","state","client","error","simpleForms","complexForms","ready","then","setState","Provider","value","this","Consumer","console","log","stack","children","styles","StyleSheet","create","page","backgroundColor","margin","padding","section","heading","fontSize","SimplePDF","content","item","forEach","element","index","answer","valueString","size","style","SimpleTextArea","timeout","delay","handleChange","bind","initialValue","clearTimeout","event","target","setTimeout","updateField","visible","Stack","spacing","Typography","variant","label","TextField","fullWidth","multiline","placeholder","onChange","sx","display","FHIRAutocomplete","answerSet","input","handleInputChange","updatAnswerSet","queryString","resourceName","inputString","split","searchTerm","queries","context","request","res","resources","total","entry","push","getLabel","resource","id","newInput","Autocomplete","disablePortal","autoSelect","newValue","onSelect","onInputChange","options","renderInput","params","borderWidth","getSimpleName","name","prefix","given","family","contextType","IsbarSimpleApp","loaded","isIsobar","published","uploaded","recipient","updateFieldValue","onRecipientSelect","createNewForm","questionnaireID","patientID","sourceID","newForm","patient","user","resourceType","text","questionnaire","status","subject","reference","author","extension","url","valueReference","linkId","formID","hasOwnProperty","uploadToServer","update","prevContent","newContent","Grid","container","align","justify","borderBottomWidth","borderBottomColor","borderBottomStyle","xs","color","ArrowBack","onClick","goBack","cursor","FormControlLabel","control","Switch","checked","labelPlacement","alignSelf","justifySelf","Button","document","fileName","blob","loading","disabled","getFieldValue","Assessment","styled","Paper","theme","typography","body2","textAlign","palette","secondary","Fragment","CssBaseline","Container","fixed","Box","height","component","m","width","noValidate","autoComplete","fullwidth","minRows","type","direction","Background","FormControl","FormGroup","row","Checkbox","FormLabel","Introduction","Recommendation","class","rows","CheckboxesGroup","useState","impairment","jason","antoine","aggression","others","resistive","dementia","depression","self","noissues","faecalcontinence","urinarycontinence","AirwaySelect","setAirway","minWidth","InputLabel","Select","labelId","MenuItem","BreathingSelect","setBreathing","PulseSelect","setPulse","Situation","responseExist","questionnaireResponse","saveState","formState","IsbarComplexApp","IsbarContentField","current","carePlan","LoadCarePlan","SimpleHistory","fields","field","headerName","description","flex","cellClassName","headerAlign","entries","data","updateTable","lastUpdated","action","meta","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getDateTimeString","forceUpdate","cellParam","colDef","editForm","columns","pageSize","rowsPerPageOptions","disableColumnMenu","disableSelectionOnClick","onCellClick","param","Home","AppController","isMenu","isSimple","simpleResponses","createNew","simpleFormID","editSimpleForm","loadSimple","loadQuestionnaireID","loadSimpleIsbars","Promise","all","isbarQuestionnaire","response","result","catch","resolveReferences","filter","Accordion","defaultExpanded","AccordionSummary","expandIcon","flexShrink","AccordionDetails","backToMenu","App","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b76d138e.chunk.js","sourcesContent":["// Launcher file for the app. \nimport React from \"react\";\nimport { oauth2 as SMART } from \"fhirclient\";\n\n/**\n * Typically the launch page is an empty page with a `SMART.authorize`\n * call in it. This isbased on the example code from:\n * https://codesandbox.io/s/fhir-client-react-react-router-context-0q3n8?file=/src/components/Launcher.js\n * \n *\n */\nexport default class Launcher extends React.Component {\n    \n    /**\n     * This is configured to make a Standalone Launch, just in case it\n     * is loaded directly. An EHR can still launch it by passing `iss`\n     * and `launch` url parameters\n     */\n    componentDidMount() {\n        \n        SMART.authorize({\n            clientId: \"my-client-id\",\n            scope: \"launch openid fhirUser patient/*.read patient/*.write\",\n            redirectUri: \"./isbar-app\",\n            \n            // Redirect to main screen.\n            \n            completeInTarget: true\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"loading-container\">\n                Launching the ISBAR handover form..\n            </div>\n            )\n    }\n}","// This is the file to deal with fhir client\n// Client context is created and updated.\n\nimport React from \"react\";\nimport { client, oauth2 as SMART } from \"fhirclient\";\n\n// React client context so it is accessible in differernt parts of code.\n// by exporting, it should be accessible from various part of the code.\nexport const IsbarClientContext = React.createContext({});\n\nexport class IsbarClientProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            client: null, // client object\n            error: null, // error message\n            simpleForms: null, // simple isbar forms (questionnaireResponses)\n            complexForms: null // complex isbar forms ()\n        }\n    }\n\n    componentDidMount() {\n        // Wait until the SMART client is ready, then save the client object as its state.\n        SMART.ready().then(\n            (client) => this.setState({ client }),\n            (error) => this.setState({ error })\n        )\n        // Load the relevant resources\n    }\n\n    render() {\n\n        return (\n            // When the client is not loaded, it displays authorizing message.\n            // Once the client is loaded, display the child components.\n            <IsbarClientContext.Provider value={this.state || {}}>\n                <IsbarClientContext.Consumer>\n                    {({ client, error }) => {\n                        console.log(\"Client\");\n                        console.log(client);\n                        // any error that SMART.ready() may have been rejected with\n                        if (error) {\n                            return <pre>{error.stack}</pre>;\n                        }\n\n                        // if client is already available render the subtree (patient and input in this case.)\n                        if (client) {\n\n                            return this.props.children;\n                        }\n                        // client is undefined until SMART.ready() is fulfilled. show loading message\n                        return (\n                            <div className=\"loading-container\">\n                                Launching the ISBAR handover form..\n                            </div>\n                        )\n                    }}\n                </IsbarClientContext.Consumer>\n            </IsbarClientContext.Provider>\n        );\n    }\n}","import React from \"react\";\nimport { Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer';\n\n// have to include them as a local file. probs.\n// Font.register({\n//     family: 'OpenSans',\n//     src: \"https://fonts.googleapis.com/css2?family=Open+Sans\",\n\n//     fontStyle: 'normal',\n//     fontWeight: 'normal'\n// });\n\n// Font.register({\n//     family: 'Oswald',\n//     src: 'https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf'\n// })\n\n// This is the pdf file that will be generated\n\nconst styles = StyleSheet.create({\n    page: {\n        // fontFamily: 'OpenSans',\n        backgroundColor: '#FFFFFF',\n        margin: 10,\n        padding: 20,\n    },\n    section: {\n        margin: 15\n    },\n    heading: {\n        fontSize: '16pt',\n    }\n});\nexport const SimplePDF = (props) => {\n\n    var content = [\"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"]\n    props.content.item.forEach((element, index) => {\n        if (typeof element.answer !== 'undefined') {\n\n            content[index] = element.answer[0].valueString\n        }\n    });\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>I: Introduction</Text>\n                    <Text>{content[0]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>S: Situation</Text>\n                    <Text>{content[1]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>B: Background</Text>\n                    <Text>{content[2]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>A: Assessment</Text>\n                    <Text>{content[3]}</Text>\n                </View>\n                <View style={styles.section}>\n                    <Text style={styles.heading}>R: Recommendation</Text>\n                    <Text>{content[4]}</Text>\n                </View>\n            </Page>\n        </Document>\n    )\n}\nexport const IsobarDoc = (props) => {\n\n}\n\n","import React from \"react\";\nimport TextField from '@mui/material/TextField'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\n\n// this text area calls parent callback 5 secs after no button press.\n// updateField callback function given as the prop will fire when \n// there is no input for specified timeout duration.\n// this was added to optimise the update process.\nexport default class SimpleTextArea extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: \"\",\n            timeout: null,\n            // timeout delay\n            delay: 5000\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ value: this.props.initialValue })\n    }\n\n    // clear timeout when user is in different screen\n    componentWillUnmount() {\n        clearTimeout(this.state.timeout)\n    }\n    handleChange(event) {\n\n        // set the value of this field\n        this.setState({ value: event.target.value });\n        // clear the timeout\n        clearTimeout(this.state.timeout)\n        // set the timeout\n        this.setState({\n            timeout: setTimeout(() => { this.props.updateField(this.state.value) },\n                this.state.delay)\n        })\n    }\n\n    render() {\n        if (this.props.visible) {\n            return (\n                <Stack spacing={1}>\n                    <Typography variant='p'>\n                        {this.props.label}\n                    </Typography>\n\n                    <TextField fullWidth multiline\n                        placeholder={this.props.placeholder}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </Stack>\n            )\n        } else {\n            return (\n                <Stack spacing={1} \n                sx={{\n                    display: 'none'\n                }}>\n                    <Typography variant='h5'>\n                        {this.props.label}\n                    </Typography>\n                    <TextField fullWidth multiline\n                        placeholder={this.props.placeholder}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </Stack>\n            )\n        }\n    }\n}","import React from \"react\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\n\n// autocomplete that displays values based on fhir search query.\n// takes in fields as props\n// should return the target resource\n// onSelect prop triggered when there is a value selection\n// getLabel prop is to retrieve relevant label from the resource\nexport default class FHIRAutocomplete extends React.Component {\n\n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            answerSet: [],\n            // value from select\n            value: this.props.initialValue,\n            // input is what is entered\n            input: \"\",\n            timeout: null,\n            delay: 500\n        }\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.updatAnswerSet(\"\")\n        // console.log(this.state.value)\n        // this.setState({value: this.props.defaultValue})\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.state.timeout)\n    }\n\n    // update the answer set by searching the fhir server with given input\n    // input is taken as an argument because this.state.input may cause errors\n    // due to setState not being synchronous\n    updatAnswerSet(input) {\n        var queryString = this.props.resourceName\n        var inputString = \"\"\n        const inputArr = input.split(\" \")\n        inputArr.forEach((element => {\n\n            inputString = inputString + this.props.searchTerm + \"=\" + element + \"&\"\n        }))\n        // check queries\n        if(this.props.queries && this.props.queries[0]){\n            this.props.queries.forEach((element, index) => {\n                // append the search terms\n                index === 0\n                    ? queryString = queryString + \"?\" + element\n                    : queryString = queryString + \"&\" + element\n            })\n            // this searches our value\n            queryString = queryString + \"&\" + inputString\n        } else{\n            queryString = queryString + \"?\" + inputString\n        }\n        // console.log(queryString)\n        this.context.client.request(queryString)\n            .then((res) => {\n                const resources = []\n                if(res.total > 0){\n                    res.entry.forEach(element => {\n                        // console.log(element)\n                        // need to give it label property and all that\n                        resources.push({label: this.props.getLabel(element.resource), id:element.resource.id})\n                        // resources.push(element.resource)\n                    })\n\n                }\n                // console.log(resources)\n                this.setState({ answerSet: resources })\n            })\n        \n    }\n\n    handleInputChange(event, newInput) {\n        \n        this.setState({ input: newInput })\n        \n        clearTimeout(this.state.timeout)\n        this.setState({\n\n            timeout: setTimeout(() => { this.updatAnswerSet(newInput) },\n                this.state.delay)\n        })\n\n    }\n\n    render() {\n        return (\n            <Autocomplete\n                disablePortal\n                autoSelect={true}\n                value={this.state.value}\n                onChange={(event, newValue) => {\n                    this.setState({ value: newValue })\n                    this.props.onSelect(newValue)\n                    console.log(newValue)\n                }}\n                input={this.state.input}\n                onInputChange={(event, newInput) => this.handleInputChange(event, newInput)}\n                id={this.props.id}\n                options={ this.state.answerSet }\n                renderInput={(params) => \n                    <TextField {...params}\n                        label={this.props.label}\n                        sx={{\n                            borderWidth:'0'\n                            \n                        }}\n                    />\n                }\n            />\n        )\n    }\n}","\n// get the simplified verison (first prefix, given and family name)\n// of the humanName fhir resource\nexport function getSimpleName(name){\n    if(!name.prefix[0]){\n        return name.given[0] + \" \" + name.family\n    }\n    return name.prefix[0] + \" \" + name.given[0] + \" \" + name.family\n}\n\n// takes in the time string that can be interpreted by date of js \n// returns time in format of YYYY-MM-DD HH:MM\nexport function getDateTimeString(time){\n    const date = new Date(time)\n    return date.getFullYear() + \"-\"\n        + date.getMonth() + \"-\"\n        + date.getDate() + \" \"\n        + date.getHours() + \":\"\n        + date.getMinutes()\n}","import React from \"react\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { SimplePDF } from \"./SimplePDF\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport SimpleTextArea from \"../common/SimpleTextArea\";\nimport { Stack, Grid, Typography, Button } from '@mui/material'\nimport { FormControlLabel, Switch } from \"@mui/material\";\nimport FHIRAutocomplete from \"../common/FHIRAutocomplete\";\nimport { getSimpleName } from \"../common/DisplayHelper\";\nimport { ArrowBack } from \"@mui/icons-material\";\n\n\n// Class for the input field group.\nexport class IsbarSimpleApp extends React.Component {\n\n  // the this.context.client is the client object!!!\n  static contextType = IsbarClientContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      loaded: false,\n      // questionnaire response object\n      content: null,\n      // turns true if it's isobar\n      isIsobar: false,\n      // indicates saved state\n      published: false,\n      // indicates updated state.\n      uploaded: true,\n      recipient: null\n    };\n\n    this.updateFieldValue = this.updateFieldValue.bind(this)\n    this.onRecipientSelect = this.onRecipientSelect.bind(this)\n    this.createNewForm = this.createNewForm.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(this.props.create)\n    if (this.props.create) {\n      // create new resource and store that \n      // new form targets to current practitiner\n      const newForm = newQuestionnaireResponse(\n        this.props.questionnaireID,\n        this.context.client.patient.id,\n        this.context.client.user.id)\n      // always create a new form when approached this way\n      this.setState({content: newForm, loaded: true})\n      // this.context.client.create(newForm)\n      //   .then((res) => {\n      //     // console.log(res)\n      //     this.setState({ content: res, loaded: true })\n      //   })\n    } else {\n\n      // note we are not directly modifying the file in parent.\n      // parent will fetch the updated version via database query\n      this.context.client.request(\"QuestionnaireResponse/\" + this.props.formID)\n        .then((res) => {\n          // res is the questionnaire object\n          console.log(res)\n          this.setState({ content: res })\n          // turn on isobar if the given form is isobar\n          if (res.item[2].hasOwnProperty('answer')) {\n            this.setState({ isIsobar: true })\n          }\n          if (res.hasOwnProperty('extension')) {\n\n            return this.context.client.request(res.extension[0].valueReference.reference)\n          }\n        })\n        .then((res) => {\n          // res is practitioner resource of recipient practitioner\n          this.setState({ recipient: res, loaded: true, published: true })\n\n        })\n    }\n  }\n\n  createNewForm(){\n    // upload the new form\n    if(!this.state.published){\n      this.context.client.create(this.state.content)\n        .then((res) => {\n          \n          this.setState({ content: res, published: true })\n        })\n    }\n  }\n\n  componentDidUpdate() {\n    this.uploadToServer()\n  }\n\n  // function to send upload request\n  // checks if requires uploading\n  uploadToServer() {\n    if (!this.state.uploaded && this.state.published) {\n      // console.log(this.state.content)\n      this.context.client.update(this.state.content)\n        .then((res) => {\n          this.setState({ uploaded: true })\n          console.log(res)\n        })\n    }\n  }\n\n  getFieldValue(index) {\n    return this.state.content.item[index].hasOwnProperty('answer')\n      ? this.state.content.item[index].answer[0].valueString\n      : \"\"\n  }\n\n  // update the isbar form field of given index to the value given\n  updateFieldValue(value, index) {\n    const prevContent = this.state.content\n    if (prevContent.item[index].hasOwnProperty('answer')) {\n      prevContent.item[index].answer[0].valueString = value\n    } else {\n      prevContent.item[index].answer = [{\n        valueString: value\n      }]\n    }\n    this.setState({ content: prevContent, uploaded: false })\n  }\n\n  // gets triggered when recipient is selected\n  // value is the value from the autocomplete\n  onRecipientSelect(value) {\n\n    if(!value){\n      return\n    }\n    // reviewer is the name of extension\n    const newContent = this.state.content\n    // console.log(newContent)\n    if (newContent.extension) {\n      if (newContent.extension[0].hasOwnProperty('valueReference')) {\n        newContent.extension[0].valueReference.reference = \"Practitioner/\" + value.id\n      } else {\n        newContent.extension[0].valueReference = {\n          reference: \"Practitioner/\" + value.id\n        }\n      }\n    } else {\n      newContent.extension = [{\n        url: \"http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer\",\n        valueReference: {\n          reference: \"Practitioner/\" + value.id\n        }\n      }]\n    }\n    this.setState({ content: newContent, uploaded: false })\n  }\n\n  // Load the text fields after the questionnaire and questionnaire responses are loaded.\n  render() {\n    // questionnaire response object\n\n    if (this.state.loaded) {\n      return (\n        <Stack spacing={2}>\n\n          {/* Header grid */}\n          <Grid container spacing={3} align=\"center\" justify=\"center\"\n            sx={{\n              borderBottomWidth: '1px',\n              borderBottomColor: 'text.secondary',\n              borderBottomStyle: 'solid',\n              padding: \"10px\"\n            }}\n          >\n            <Grid item xs={3} sx={{\n              color: \"text.primary\",\n\n            }}>\n              <ArrowBack \n              onClick={this.props.goBack}\n              sx={{\n                fontSize: \"30px\",\n                // padding: \"5px\",\n                cursor: \"pointer\"\n              }} />\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant='h5'\n                align=\"center\"\n              >\n                Simple ISBAR Form\n              </Typography>\n            </Grid>\n\n            <Grid item xs={2}>\n              <FormControlLabel\n                value=\"ISOBAR\"\n                control={<Switch />}\n                checked={this.state.isIsobar}\n                label=\"ISOBAR\"\n                labelPlacement=\"start\"\n                onChange={(event) => this.setState({ isIsobar: event.target.checked })}\n                sx={{\n                  alignSelf: 'center'\n                }}\n              />\n            </Grid>\n          </Grid>\n\n          <Stack spacing={3}\n            sx={{\n              padding: '3%'\n            }}>\n\n            <Grid container spacing={2}\n            >\n\n              <Grid item xs={8}>\n                <FHIRAutocomplete\n                  resourceName=\"Practitioner\"\n                  searchTerm=\"name\"\n                  label=\"Recipient\"\n                  id=\"recipientAutocomplete\"\n                  initialValue={this.state.recipient ? {\n                    label: getSimpleName(this.state.recipient.name[0]),\n                    id: this.state.recipient.id\n                  } : null}\n                  queries={[]}\n                  onSelect={(value) => this.onRecipientSelect(value)}\n                  getLabel={(resource) => getSimpleName(resource.name[0])}\n                />\n              </Grid>\n\n\n              <Grid item xs={2}\n                justifySelf=\"center\"\n                alignSelf=\"center\"\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                >\n                  <PDFDownloadLink\n                    document={\n                      <SimplePDF content={this.state.content} />\n                    }\n                    fileName=\"isbar.pdf\"\n                  >\n                    {({ blob, url, loading, error }) =>\n                      loading ? \"Preparing\" : \"Print\"\n                    }\n                  </PDFDownloadLink>\n                </Button>\n              </Grid>\n              <Grid item xs={2}\n                justifySelf=\"center\"\n                alignSelf=\"center\"\n              >\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  disabled={this.state.published}\n                    onClick={this.createNewForm}\n                > Publish\n                </Button>\n\n              </Grid>\n\n            </Grid>\n            <SimpleTextArea\n              initialValue={this.getFieldValue(0)}\n              placeholder=\"Introduction\"\n              label=\"Introduction\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 0)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(1)}\n              placeholder=\"Situation\"\n              label=\"Situation\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 1)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(2)}\n              placeholder=\"Observation\"\n              label=\"Observation\"\n              visible={this.state.isIsobar}\n              updateField={(value) => this.updateFieldValue(value, 2)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(3)}\n              placeholder=\"Background\"\n              label=\"Background\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 3)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(4)}\n              placeholder=\"Assessment\"\n              label=\"Assessment\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 4)}\n            />\n            <SimpleTextArea\n              initialValue={this.getFieldValue(5)}\n              placeholder=\"Recommendation\"\n              label=\"Recommendation\"\n              visible={true}\n              updateField={(value) => this.updateFieldValue(value, 5)}\n            />\n\n          </Stack >\n        </Stack>\n      )\n    } else {\n      return (\n\n        <div className=\"loading-container\">\n          Loading ISBAR form\n        </div>\n      )\n    }\n  }\n}\n\n// function that returns a new response\n// sourceID: ID of practitioner writing this form\n// it assumes the target is not defined, target practitioner will be included later.\nfunction newQuestionnaireResponse(questionnaireID, patientID, sourceID) {\n  // questionnaire response resource\n  //const date = new Date()\n  // const lastModified = new Date().toJSON()\n  // console.log(lastModified)\n\n  var qResponse = {\n    resourceType: \"QuestionnaireResponse\",\n    text: { name: \"isbar handover form\" },\n    // maybe later when we sort out the thingy\n    // Reference the questionnaire\n    // date this form was last modified\n    // authored: lastModified,\n    questionnaire: \"Questionnaire/\" + questionnaireID,\n    status: \"in-progress\",\n    subject: {\n      reference: \"Patient/\" + patientID\n    },\n    author: {\n      // refer to current practitioner\n      reference: \"Practitioner/\" + sourceID,\n    },\n    // extension not used because resolving reference requires extra effort. \n    // Instead, author section is used.\n    extension: [{\n      url: \"http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer\",\n      valueReference: {\n        // reference: \"Practitioner/\" + sourceID\n      }\n    }],\n    item: [\n      {\n        linkId: \"1\",\n        text: \"I:Identify\",\n      },\n      {\n        linkId: \"2\",\n        text: \"S:Situation\",\n      },\n      {\n        linkId: \"3\",\n        text: \"O:Observation\",\n      },\n      {\n        linkId: \"4\",\n        text: \"B:Background\",\n      },\n      {\n        linkId: \"5\",\n        text: \"A:Assessment\",\n      },\n      {\n        linkId: \"6\",\n        text: \"R:Recommendation\",\n      },\n    ],\n  };\n\n  return qResponse;\n}","\nimport React from \"react\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Paper from '@mui/material/Paper';\nimport { experimentalStyled as styled } from '@mui/material/styles';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(5),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\n\n\nexport class Assessment extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n\n            <React.Fragment>\n            <CssBaseline />\n            <Container fixed>\n              <Box sx={{  height: '5vh' }} />\n            \n\n          \n            <Box\n            \n            component=\"form\"\n            sx={{\n              '& > :not(style)': { m: 1, width: '136ch', },\n            }}\n            noValidate\n            autoComplete=\"off\"\n          >\n            \n            \n            \n            <h1><p>Assessment</p></h1>\n\n            <div>    \n            <h3>Latest clinical assessment:</h3>\n            </div>\n             \n            <TextField fullwidth aria-label=\"minimum height\"\n      minRows={4} multiline placeholder =\"Latest clinical assessment\" spacing={2} id=\"outlined-search\" type=\"search\" />\n           \n           \n           \n\n            <div >    \n            <h3>Vital Signs:</h3>\n          \n          \n          \n            <div style={{ height: 80, width: '100%' }}>\n       <Stack direction=\"row\" spacing={2}>\n           \n           \n            <h3>Resp rate</h3>\n            <TextField  fullwidth  multiline placeholder =\"\" spacing={2} id=\"outlined-search\" type=\"search\"  style={{ width: 300 }}/>\n            \n            <h3>Temp.</h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }} />\n           \n            </Stack>\n    </div>\n            \n           \n           \n    <div style={{ height: 80, width: '100%' }}>\n      <Stack direction=\"row\" spacing={2}>\n           \n           \n            <h3>Pain Score</h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }} />\n            <h3>Pulse</h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }} />\n           \n            </Stack>\n    </div>\n              \n           \n    <div style={{ height: 80, width: '100%' }}>\n      <Stack direction=\"row\" spacing={2}>\n            <h3>O2 rate/device</h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }}/>\n            <h3>B.P.</h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }}/>\n           \n            </Stack>\n    </div>  \n           \n           \n    <div style={{ height: 80, width: '100%' }}>\n      <Stack direction=\"row\" spacing={2}> \n            <h3>Urine output </h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }} />\n            <h3>SpO2</h3>\n            <TextField fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }}/>\n            </Stack>\n    </div>   \n           \n           \n    <div style={{ height: 80, width: '100%' }}>\n      <Stack direction=\"row\" spacing={2}> \n      <h3>Patient anxiety </h3>\n            <TextField fullwidth multiline placeholder =\" \" id=\"outlined-search\" type=\"search\" style={{ width: 300 }} />\n            <h3>Hb</h3>\n            <TextField  fullwidth multiline placeholder =\"\" id=\"outlined-search\" type=\"search\" style={{ width: 300 }}/>\n            </Stack>\n    </div>      \n      \n            </div>\n            \n\n          </Box>\n       \n          </Container>\n    </React.Fragment>\n\n        )\n    }\n}\n","import React from \"react\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport class Background extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <FormControl Component=\"fieldset\">\n            <h3>Alerts</h3>\n                <FormGroup aria-label=\"position\" row={4}>\n\n                    <FormControlLabel\n                        value=\"Forensic\"\n                        control={<Checkbox />}\n                        label=\"Forensic\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '34ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                <FormControlLabel\n                        value=\"Microbiological\"\n                        control={<Checkbox />}\n                        label=\"Microbiological\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '28ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n                \n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"Bariatric Patient\"\n                        control={<Checkbox />}\n                        label=\"Bariatric Patient\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '29ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                <FormControlLabel\n                        value=\"Falls Risk\"\n                        control={<Checkbox />}\n                        label=\"Falls Risk\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '32ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"Infectious Risk\"\n                        control={<Checkbox />}\n                        label=\"Infectious Risk\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '30ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                <FormControlLabel\n                        value=\"Pressure Ulcer Risk\"\n                        control={<Checkbox />}\n                        label=\"Pressure Ulcer Risk\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '25ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"Smoker\"\n                        control={<Checkbox />}\n                        label=\"Smoker\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '35ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n                <FormLabel component=\"legend\">Mental Health Act:</FormLabel>\n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"Voluntary\"\n                        control={<Checkbox />}\n                        label=\"Voluntary\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '34ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                <FormControlLabel\n                        value=\"Involuntary\"\n                        control={<Checkbox />}\n                        label=\"Involuntary\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '31ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"Risk Assessment\"\n                        control={<Checkbox />}\n                        label=\"Risk Assessment\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '28ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n                <FormLabel component=\"legend\">Drug Allergy</FormLabel>\n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"State Drug/Reaction\"\n                        control={<Checkbox />}\n                        label=\"State Drug/Reaction\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '26ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n                <FormGroup aria-label=\"position\" row>\n\n                    <FormControlLabel\n                        value=\"Other\"\n                        control={<Checkbox />}\n                        label=\"Other\"\n                        labelPlacement=\"start\"\n                    />\n                    <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 1, width: '37ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n                </FormGroup>\n\n\n                <h3>Current Episode Medications:</h3>\n                <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 0.1, width: '90ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n\n                <h3>Investigations:</h3>\n                <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 0.1, width: '90ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n\n                <h3>Specialty-Specific Information:</h3>\n                <Box\n                      component=\"form\"\n                      sx={{\n                        '& > :not(style)': { m: 0.1, width: '90ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField id=\"detial-basic\" label=\"detial\" variant=\"outlined\" />\n                </Box>\n\n            </FormControl>\n        )\n    }\n\n\n}\n\n","import React from \"react\";\n\nexport class Introduction extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <div className=\"container\">Introduction </div>\n        )\n    }\n}\n","import React from \"react\";\n\n\nexport class Recommendation extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div class=\"container  mx-auto px-10 sm:px-8 max-w-7xl py-10\">\n                <sl-form>\n                    <sl-textarea rows={4}>\n                    </sl-textarea>\n                </sl-form>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormLabel from '@mui/material/FormLabel';\nimport FormGroup from '@mui/material/FormGroup';\n\n\n\nexport default function CheckboxesGroup() {\n    const [state, setState] = React.useState({\n      impairment: false,\n      jason: false,\n      antoine: false,\n      aggression: false,\n      others: false,\n      resistive: false, \n      dementia: false,\n      depression: false,\n      self: false,\n      noissues: false,\n      faecalcontinence: false,\n      urinarycontinence: false,\n\n    });\n  \n    const handleChange = (event) => {\n      setState({\n        ...state,\n        [event.target.name]: event.target.checked,\n      });\n    };\n  \n    const {impairment, aggression, others, resistive, dementia, depression, self, noissues, faecalcontinence, urinarycontinence } = state;\n    \n  \n    return (\n      <Box sx={{ display: 'flex' }}>\n        <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n          <FormLabel component=\"legend\"><h5>Mental Behaviour</h5></FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={impairment} onChange={handleChange} name=\"impairment\" />\n              }\n              label=\"Cognitive impairment\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={aggression} onChange={handleChange} name=\"aggression\" />\n              }\n              label=\"Verbal Aggression\"\n            />\n             <FormControlLabel\n              control={\n                <Checkbox checked={dementia} onChange={handleChange} name=\"dementia\" />\n              }\n              label=\"Dementia\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={depression} onChange={handleChange} name=\"depression\" />\n              }\n              label=\"Depression\"\n            />\n            \n            <FormControlLabel\n              control={\n                <Checkbox checked={resistive} onChange={handleChange} name=\"resistive\" />\n              }\n              label=\"Resistive to care\"\n            />\n          </FormGroup>\n        </FormControl>\n        <FormControl          \n          component=\"fieldset\"\n          sx={{ m: 3 }}\n          variant=\"standard\"\n        >\n          <FormLabel   component=\"legend\"><h5>Mental Behaviour</h5></FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={self} onChange={handleChange} name=\"self\" />\n              }\n              label=\"Harm to self\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={others} onChange={handleChange} name=\"others\" />\n              }\n              label=\"Harm to others\"\n            />           \n          </FormGroup>\n        </FormControl>\n        <FormControl          \n          component=\"fieldset\"\n          sx={{ m: 3 }}\n          variant=\"standard\"\n        >\n          <FormLabel   component=\"legend\"><h5>Continence</h5></FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={noissues} onChange={handleChange} name=\"noissues\" />\n              }\n              label=\"No Issues\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={faecalcontinence} onChange={handleChange} name=\"faecalcontinence\" />\n              }\n              label=\"Faecal continence\"\n            /> \n            <FormControlLabel\n              control={\n                <Checkbox checked={urinarycontinence} onChange={handleChange} name=\"urinarycontinence\" />\n              }\n              label=\"Urinary continence\"\n            />              \n          </FormGroup>\n        </FormControl>\n      </Box>\n    );\n  }\n\nexport function AirwaySelect() {\n  const [options, setAirway] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAirway(event.target.value);\n  };\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"airwaySelect\">Airway</InputLabel>\n        <Select\n          labelId=\"Airway\"\n          id=\"airwaySelect\"\n          value={options}\n          label=\"Options\"\n          onChange={handleChange}\n        >\n          <MenuItem value={10}>Patent</MenuItem>\n          <MenuItem value={20}>Compromised</MenuItem>\n          <MenuItem value={30}>Ventilated</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n\nexport function BreathingSelect() {\n    const [options, setBreathing] = React.useState(\"\");\n  \n    const handleChange = (event) => {\n      setBreathing(event.target.value);\n    };\n  \n    return (\n      <Box sx={{ minWidth: 120 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"breathingSelect\">Breathing</InputLabel>\n          <Select\n            labelId=\"Breathing\"\n            id=\"breathingSelect\"\n            value={options}\n            label=\"Options\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Unremarkable</MenuItem>\n            <MenuItem value={20}>Shallow</MenuItem>\n            <MenuItem value={30}>Deep</MenuItem>\n            <MenuItem value={40}>Rapid</MenuItem>\n            <MenuItem value={50}>Slow</MenuItem>\n            <MenuItem value={60}>Laboured</MenuItem>\n            <MenuItem value={70}>Audible wheeze</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\nexport function PulseSelect() {\n    const [options, setPulse] = React.useState(\"\");\n  \n    const handleChange = (event) => {\n      setPulse(event.target.value);\n    };\n  \n    return (\n      <Box sx={{ minWidth: 120 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"pulseSelect\">Pulse</InputLabel>\n          <Select\n            labelId=\"Pulse\"\n            id=\"pulseSelect\"\n            value={options}\n            label=\"Options\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Unremarkable</MenuItem>\n            <MenuItem value={20}>Regular</MenuItem>\n            <MenuItem value={30}>Slow</MenuItem>\n            <MenuItem value={40}>Strong</MenuItem>\n            <MenuItem value={50}>Weak</MenuItem>\n            <MenuItem value={60}>Rapid</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  }\n\nexport class Situation extends React.Component {\n  static contextType = IsbarClientContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used true if data is loaded\n      loaded: false,\n      error: null,\n      // true if questionnaireResponse exists\n      responseExist: false,\n      patient: null,\n      // questionnaire object that will be stored or created\n      questionnaire: null,\n      // questionnaire response object\n      questionnaireResponse: null,\n      // turns true if it's isobar\n      isIsobar: false,\n      // indicates saved state\n      saveState: \"edited\",\n      // type of current form\n      formState: \"ISOBAR\",\n      // would be good if we have a array of question-answer pair.\n    };\n  }\n\n  componentDidMount() {\n    // load client from the client context\n    const client = this.context.client;\n  }\n\n  render() {\n    return (\n      <div className=\"container  \">\n        \n        <h3>Patient Status</h3>\n        <TextField fullWidth multiline placeholder=\"Patient Status\" />\n\n        <h3>Principle Diagnosis</h3>\n        <TextField fullWidth multiline placeholder=\"Principle Diagnosis\" />\n\n        <h3>Other Diagnosis/problems</h3>\n        <TextField fullWidth multiline placeholder=\"Other Diagnosis/problems\" />\n\n        <h3>Reason For transfer</h3>\n        <TextField fullWidth multiline placeholder=\"Reason For transfer\" />\n\n        <h3>Observations</h3>\n\n        <h5>Airway</h5>\n        <AirwaySelect />\n\n        <h5>Breathing</h5>\n        <BreathingSelect />\n\n        <h5>Pulse</h5>\n        <PulseSelect />\n\n        <CheckboxesGroup />\n\n        \n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { Assessment } from \"./Assessment\";\nimport { Background } from \"./Background\";\nimport { Introduction } from \"./Introduction\";\nimport { Recommendation } from \"./Recommendation\";\nimport { Situation } from \"./Situation\";\n\nexport class IsbarComplexApp extends React.Component {\n\n    render() {\n        return (\n            <div className=\"app-complex\">\n                <div className=\"container\">\n\n                    <h2 className=\"section-title\">Introduction</h2>\n                    <Introduction />\n                    <h2 className=\"section-title\">Situation</h2>\n                    <Situation />\n                    <h2 className=\"section-title\">Background</h2>\n                    <Background />\n                    <h2 className=\"section-title\">Assessment</h2>\n                    <Assessment />\n                    <h2 className=\"section-title\">Recommendation</h2>\n                    <Recommendation />\n\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n","import React from \"react\";\nimport { Assessment } from \"./Assessment\";\nimport { Background } from \"./Background\";\nimport { Introduction } from \"./Introduction\";\nimport { Recommendation } from \"./Recommendation\";\nimport { Situation } from \"./Situation\";\n\nexport class IsbarContentField extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n    render() {\n\n        switch (this.props.current) {\n            case \"I\":\n                return <Introduction />\n            case \"S\":\n                return <Situation />\n            case \"B\":\n                return <Background />\n            case \"A\":\n                return <Assessment />\n            case \"R\":\n                return <Recommendation />\n            default: \n                // fail safe\n                return <Introduction />\n\n\n        }\n    }\n}\n","import React from \"react\";\nimport { IsbarContentField } from \"./IsbarContentField\";\nimport { IsbarClientContext } from \"../IsbarFhirClient\";\nimport { client } from \"fhirclient\";\n\nexport class IsbarComplexDevelopment extends React.Component {\n    \n    // client context\n    static contextType = IsbarClientContext;\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            // state for the app display\n            current: \"I\",\n            loaded: false,\n            carePlan: null\n            // initialise careplan resource?\n        }\n    }\n\n    componentDidMount(){\n        \n        const client = this.context.client;\n        // search for the careplan related to this patient\n        this.LoadCarePlan()\n        .then((res) => {\n            console.log(res)\n            this.setState({loaded: true})\n        })\n        // load the careplan\n    }\n\n    LoadCarePlan(){\n        return this.context.client.request(\"CarePlan?patient=\" + this.context.client.patient.id)\n        .then( res => {\n            // filter careplan\n\n        })\n    }\n\n    render() {\n        if(this.state.loaded){\n\n            return (\n            \n                <div className=\"app-complex\">\n                    <div className=\"app-content\">\n                        <IsbarContentField current={this.state.current} />\n                    </div>\n    \n                    <div className=\"footer\">\n                        <div className=\"arrow\">&larr;</div>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"I\" })}>I</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"S\" })}>S</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"B\" })}>B</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"A\" })}>A</button>\n                        <button className=\"nav-button\" onClick={() => this.setState({ current: \"R\" })}>R</button>\n                        <div className=\"arrow\">&rarr;</div>\n                    </div>\n    \n                </div>\n                \n            )\n        } else{\n            return(\n            <div>\n                Loading complex isbar form...\n            </div>)\n        }\n    }\n}\n","import React from \"react\";\nimport { DataGrid } from '@mui/x-data-grid'\nimport { getSimpleName, getDateTimeString } from \"./common/DisplayHelper\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\n\n// this displays the list of previous simple isbar entries\n// takes in the bundle from response\n// displays previous entries in data table of mui\nexport class SimpleHistory extends React.Component {\n\n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            fields: [\n                {\n                    field: 'lastUpdated',\n                    headerName: 'Last Updated',\n                    description: \"Time last updated\",\n                    flex: 2\n                },\n                {\n                    field: 'id',\n                    headerName: 'ID',\n                    description: \"Form ID\",\n                    flex: 2\n                },\n                {\n                    field: 'author',\n                    headerName: 'Author',\n                    description: \"Author of the form\",\n                    flex: 3\n                },\n                {\n                    field: 'recipient',\n                    headerName: 'Recipient',\n                    description: \"Receiving party of the form\",\n                    flex: 3\n                },\n                {\n                    field: 'action',\n                    headerName: 'Action',\n                    description: \"Actions allowed on the form\",\n                    cellClassName: 'simple-table--cell',\n                    align: 'center',\n                    headerAlign: 'center',\n                    width: 100\n                },\n            ],\n            entries: null\n        }\n    }\n\n    componentDidMount() {\n        // load all the data from prop\n        console.log(\"history\")\n        console.log(this.props.data)\n        if (this.props.data) {\n            this.updateTable()\n        }\n        else {\n            console.error(\"No data given to history!! did the request fail?\")\n        }\n    }\n\n    // manually resolve the recipient..\n    updateTable() {\n        const newContent = []\n        // console.log(this.props.data)\n        if (this.props.data.total != 0) {\n\n            this.props.data.entry.forEach((element) => {\n                // element is each resource in the bundle\n                // console.log(element)\n                const resource = element.resource\n                // this.context.client.delete(\"QuestionnaireResponse/\"+resource.id)})}\n\n                // default content for the fields.\n                // Also displayed while resolving promises\n                const entry = {\n                    lastUpdated: 'Loading',\n                    id: 'Loading',\n                    author: 'Loading',\n                    recipient: 'Loading',\n                    action: null\n                }\n                // set new content??\n                if (resource.meta.hasOwnProperty('lastUpdated')) {\n                    entry.lastUpdated = getDateTimeString(resource.meta.lastUpdated)\n                }\n                if (resource.hasOwnProperty('id')) {\n                    entry.id = resource.id\n                }\n                if (resource.hasOwnProperty('author')) {\n                    entry.author = getSimpleName(resource.author.name[0])\n                }\n                entry.action = \"EDIT\"\n                newContent.push(entry)\n            });\n\n            // resolve the recipients of each.\n            // This function was positioned after initialisation of array to enable access\n            this.props.data.entry.forEach((element, index) => {\n                const resource = element.resource\n                if (resource.hasOwnProperty('extension')) {\n                    this.context.client.request(resource.extension[0].valueReference.reference)\n                        .then((res) => {\n                            // console.log(newContent[index])\n                            newContent[index].recipient = getSimpleName(res.name[0])\n                            // force component update\n                            this.forceUpdate()\n                        })\n                }\n            })\n        }\n        else {\n            console.log(\"no existing entry\")\n        }\n        this.setState({ entries: newContent })\n            \n    }\n\n    handleCellClick(cellParam) {\n        // handle cell click\n        if (cellParam.colDef.field === \"action\") {\n            // edit button is pressed. cell id is the form id\n            this.props.editForm(cellParam.id)\n        }\n    }\n\n    render() {\n        // console.log(this.state.entries)\n        if (this.state.entries != null) {\n\n            return (\n                <div style={{ height: 400, width: '100%' }}>\n\n                    <DataGrid\n                        rows={this.state.entries}\n                        columns={this.state.fields}\n                        pageSize={5}\n                        rowsPerPageOptions={[5]}\n                        disableColumnMenu={true}\n                        disableSelectionOnClick={true}\n                        onCellClick={(param) => {\n                            if (param.colDef.field === \"action\") {\n                                this.props.editForm(param.id)\n                            }\n                        }}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    Loading data..\n                </div>\n            )\n        }\n\n\n    }\n}\n\n","// Main class for the main screen. Contains everything.\nimport React from \"react\";\nimport { IsbarClientProvider } from \"./IsbarFhirClient\";\nimport { IsbarSimpleApp } from \"./app-simple/IsbarSimpleApp\";\nimport { IsbarComplexApp } from \"./app-complex/IsbarComplexApp\";\nimport { IsbarComplexDevelopment } from \"./app-complex/IsbarComplexDevelopment\";\nimport { IsbarClientContext } from \"./IsbarFhirClient\";\nimport { Stack, Box, Container, Accordion, AccordionSummary, Typography, Button, AccordionDetails } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { SimpleHistory } from \"./SimpleHistory\";\n\nexport default class Home extends React.Component {\n\n    render() {\n        return (\n            <IsbarClientProvider>\n                <AppController />\n            </IsbarClientProvider>\n        )\n    }\n}\n\n// this component loads and displays the questionnaireResponse\nclass AppController extends React.Component {\n\n    // include client \n    static contextType = IsbarClientContext;\n    constructor(props) {\n        super(props)\n        this.state = {\n            loaded: false,\n            isMenu: true,\n            isSimple: true,\n            questionnaireID: null,\n            simpleResponses: null,\n            createNew: false,\n            // id of current simple form\n            simpleFormID: null\n        }\n        this.editSimpleForm = this.editSimpleForm.bind(this)\n    }\n    componentDidMount() {\n\n        // Load questionnaire and simple isbar forms for this patient\n        const loadSimple = this.loadQuestionnaireID()\n            // .then(() => this.createSimpleIsbar())\n            .then((res) => this.loadSimpleIsbars(res))\n            .then(() => this.setState({ loaded: true }))\n        // this.context.client.request(\"Practitioner/e443ac58-8ece-4385-8d55-775c1b8f3a37\").then(console.log)\n        // wait till all promises resolved\n        Promise.all([loadSimple]).then(() => console.log(\"all loaded\"))\n    }\n\n    backToMenu() {\n        // change the statte to come back to menu, and start loading\n        this.setState({isMenu: true, loaded: false})\n        this.loadSimpleIsbars(this.state.questionnaireID)\n        .then(() => this.setState({loaded: true}))\n        \n    }\n\n    // Returns a promise that loads questionnaire ID using questionnaire template\n    // updates the state for questionnaire id\n    // the promise resolves to questionnaire id\n    loadQuestionnaireID() {\n\n        // make server calls \n        return this.context.client.request(\"Questionnaire?name=\" + isbarQuestionnaire.name)\n            .then((response) => {\n\n                if (response.total === 0) {\n                    // there are no questionnaire object - create one\n                    return this.context.client.create(isbarQuestionnaire);\n                } else {\n                    // return the existing questionnaire to be saved\n                    return response.entry[0].resource;\n                }\n            }).then((result) => {\n                // console.log(result.id)\n                // save the questionnaire ID in current component state\n                this.setState({ questionnaireID: result.id })\n                // return the questionnaire id. This allows response searching without\n                // having to wait for setState to be executed\n                return result.id\n            }).catch(console.error)\n    }\n\n    // Returns a promise for loading simple isbar forms given questionnaire id.\n    // The promise resolves to the bundle returned from the server\n    loadSimpleIsbars(questionnaireID) {\n\n        return this.context.client.request(\n            // currently, retrieves all responses about this patient\n            \"QuestionnaireResponse?questionnaire=\" + questionnaireID\n            + \"&patient=Patient/\" + this.context.client.patient.id,\n            // resolves references connected to questionnaire\n            // this was not used because it caused corruption, and the data had to be loaded again.\n            { resolveReferences: [\"author\"] }\n        ).then((result) => {\n            // console.log(result)\n            // console.log(questionnaireID)\n            this.setState({ simpleResponses: result })\n            // console.log(result)\n            return result\n        }).catch(console.error)\n    }\n\n    // opens existing form to edit. id is the questionnaireResponse id.\n    editSimpleForm(id){\n        // the simple form should be passed as a prop to child object?\n        const response = this.state.simpleResponses.entry.filter((element) => element.resource.id === id)\n        console.log(response)\n        console.log(response[0].resource.id)\n        // search the server for questionnaireResponse with same id\n        // The resource is retrieved again rather than being set from the bundle\n        // because bundle contains resolved references, it results in corruption\n        this.setState({simpleFormID: response[0].resource.id, isMenu: false, isSimple: true, createNew: false})\n    }\n\n    // What a mess! requires cleaning..\n    render() {\n\n        if (this.state.loaded && this.state.isMenu) {\n            return (\n                <div>\n                    <Box sx={{\n                        padding: '3%'\n                    }}>\n                        {/* Heading needs fixing */}\n                        <Typography sx={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: '30px'\n                        }}>\n                            ISBAR Handover Form\n                        </Typography>\n\n                        {/* Stack requires positioning */}\n                        <Stack spacing={2}\n                            sx={{\n\n                            }}\n                        >\n                            <Accordion defaultExpanded={false}>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                >\n                                    <Typography sx={{ width: '70%', flexShrink: 0 }}>\n                                        Simple ISBAR handover forms\n                                    </Typography>\n                                    <Button\n                                        onClick={() => this.setState({ createNew: true, isMenu: false, isSimple: true })}\n                                    >\n                                        Create new\n                                    </Button>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <SimpleHistory \n                                    data={this.state.simpleResponses} \n                                    editForm={(id) => this.editSimpleForm(id)}\n                                    />\n                                </AccordionDetails>\n                            </Accordion>\n                        </Stack>\n                    </Box>\n\n                    <button className=\"main-menu-button\" onClick={() => this.setState({ isSimple: false, isMenu: false })}>\n                        Complex ISBAR\n                    </button>\n                </div>\n            )\n        } else if (this.state.loaded && this.state.isSimple) {\n\n            return (\n                <IsbarSimpleApp\n                    goBack={this.backToMenu.bind(this)}\n                    formID={this.state.simpleFormID} // this is the response object passed.\n                    create={this.state.createNew}\n                    questionnaireID={this.state.questionnaireID}\n                />\n            )\n        } else if (this.state.loaded && !this.state.isSimple) {\n            return (\n                // <IsbarComplexDevelopment />\n                <IsbarComplexApp />\n            )\n        } else {\n            return (<div>Loading</div>)\n\n        }\n    }\n}\n\n\n\nconst isbarQuestionnaire = {\n    \"resourceType\": \"Questionnaire\",\n    \"title\": \"questionnaireTitle\",\n    \"name\": \"isbar-simple\",\n    \"status\": \"active\",\n    // Introduction\n    \"item\": [{\n        \"linkid\": \"1\",\n        \"text\": \"I:Identify\",\n        \"type\": \"text\" // free text\n    },\n    // Situation\n    {\n        \"linkid\": \"2\",\n        \"text\": \"S:Situation\",\n        \"type\": \"text\" // free text\n    },\n    // Observation. Enable option is not included, because it could be handled by js.\n    {\n        \"linkid\": \"3\",\n        \"text\": \"O:Observation\",\n        \"type\": \"text\" // free text\n    },\n    // Background\n    {\n        \"linkid\": \"4\",\n        \"text\": \"B:Background\",\n        \"type\": \"text\" // free text\n    },\n    // assessment\n    {\n        \"linkid\": \"5\",\n        \"text\": \"A:Assessment\",\n        \"type\": \"text\" // free text\n    },\n    // Recommendation\n    {\n        \"linkid\": \"6\",\n        \"text\": \"R:Recommendation\",\n        \"type\": \"text\" // free text\n    }]\n}\n\n\n\n","/*\n  Application file for simple ISBAR app.\n  Classes can be separated later on.\n  the react-router-dom module had to be installed with:\n  npm install -S react-router-dom\n*/\nimport React from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Launcher from './Launcher';\nimport Home from \"./Home\"\nimport './App.css';\n\n\n\n\n\n\n/*\n The top application object. Responsible for:\n - Loading patient information\n - Loading questionnaire\n - Loading questionnaire response\n - Initiating the render of other components.\n */\nclass App extends React.Component {\n\n  render() {\n    return (\n      // This runs the launcher first, which redirects to the main screen.\n      <HashRouter>\n        <Switch>\n          {/* The actual app */}\n          <Route path=\"/isbar-app\" component={Home} exact/>\n\n          {/* Launcher for smart app */}\n          <Route path=\"/\" component={Launcher} exact />\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Render the ISBAR application in index.html\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}